var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.365,1,1.894]],["body/controllers/AppController.html",[0,2.101,1,2.915,2,1.647,3,0.518,4,0.452,5,0.452,6,3.021,7,0.518,8,1.286,9,4.467,10,1.826,11,0.037,12,0.739,13,3.66,14,1.008,15,1.564,16,0.661,17,0.823,18,2.564,19,3.021,20,0.518,21,0.33,22,3.66,23,1.647,24,1.352,25,3.66,26,0.029,27,0.029]],["title/modules/AppModule.html",[28,1.365,29,1.894]],["body/modules/AppModule.html",[1,2.629,2,1.615,3,0.352,4,0.307,5,0.307,11,0.038,16,0.775,17,0.559,18,2.54,19,2.052,20,0.352,21,0.224,26,0.022,27,0.022,28,1.894,29,3.47,30,1.241,31,1.241,32,1.553,33,1.553,34,1.241,35,2.629,36,1.553,37,2.052,38,2.052,39,2.052,40,2.54,41,2.54,42,2.241,43,1.553,44,1.383,45,2.486,46,2.99,47,2.486,48,2.052,49,1.241,50,2.486,51,2.486,52,2.961,53,4.608,54,1.553,55,2.486,56,2.052,57,2.052,58,2.052,59,2.486,60,2.486,61,2.486,62,2.052,63,2.486,64,2.486,65,2.486,66,1.767,67,2.486,68,2.052,69,2.486,70,2.486,71,1.013,72,2.486,73,2.486,74,2.486,75,2.486,76,1.241]],["title/injectables/AppService.html",[18,1.513,77,0.613]],["body/injectables/AppService.html",[3,0.546,4,0.476,5,0.476,7,0.546,8,1.329,9,4.552,11,0.037,12,0.779,14,1.062,15,1.616,16,0.546,17,0.866,18,2.406,20,0.546,21,0.348,24,1.423,26,0.03,27,0.03,77,0.974,78,1.57,79,3.181,80,3.853,81,3.853,82,3.853,83,3.853]],["title/controllers/AuthController.html",[0,1.365,84,1.894]],["body/controllers/AuthController.html",[0,1.355,2,1.355,3,0.426,4,0.372,5,0.372,7,0.426,8,1.13,10,1.502,11,0.038,12,0.608,14,0.829,16,0.71,17,0.677,20,0.426,21,0.272,23,1.355,24,1.112,26,0.025,27,0.025,66,3.316,71,1.901,84,2.562,85,2.485,86,2.485,87,3.01,88,2.562,89,1.88,90,2.485,91,1.13,92,4.102,93,3.01,94,2.36,95,3.01,96,0.915,97,0.75,98,0.741,99,0.915,100,2.485,101,2.485,102,3.386,103,2.329,104,2.485,105,3.386,106,3.386,107,1.674,108,1.88,109,3.01,110,1.502,111,1.502,112,2.485,113,3.01,114,3.01]],["title/interfaces/AuthInterface.html",[115,1.686,116,1.513]],["body/interfaces/AuthInterface.html",[3,0.526,4,0.459,5,0.459,7,0.526,8,1.298,11,0.037,12,0.751,14,1.024,16,0.667,20,0.526,26,0.029,27,0.029,88,2.943,89,2.943,91,1.024,94,2.528,96,1.13,97,0.926,98,0.671,99,1.13,108,2.321,115,2.066,116,2.351,117,2.64,118,3.067,119,3.716,120,1.919,121,2.64]],["title/modules/AuthModule.html",[28,1.365,40,1.513]],["body/modules/AuthModule.html",[2,1.561,3,0.336,4,0.293,5,0.293,11,0.038,16,0.789,17,0.534,20,0.336,21,0.214,26,0.021,27,0.021,28,1.845,30,1.184,31,1.184,32,1.482,33,1.482,34,1.184,35,2.56,36,2.56,40,2.78,41,1.73,42,2.166,43,1.482,44,1.32,46,1.686,52,1.959,54,1.482,84,2.56,103,2.839,104,1.959,116,2.581,122,1.959,123,1.959,124,1.959,125,1.959,126,2.499,127,2.373,128,1.928,129,2.373,130,2.373,131,2.166,132,2.373,133,2.373,134,1.068,135,2.373,136,2.373,137,1.959,138,1.959,139,2.373,140,1.686,141,2.863,142,3.468,143,2.373,144,2.373]],["title/injectables/AuthService.html",[77,0.613,103,1.513]],["body/injectables/AuthService.html",[3,0.424,4,0.371,5,0.371,7,0.424,8,1.127,11,0.037,12,0.827,14,0.826,16,0.742,17,0.674,20,0.424,21,0.271,23,1.349,24,1.107,26,0.025,27,0.025,71,1.897,76,1.496,77,0.827,78,1.221,88,2.555,89,2.555,91,0.826,94,2.357,96,1.244,97,1.02,98,0.739,99,1.244,103,2.041,108,1.872,110,2.041,111,1.496,116,2.041,120,1.666,121,2.13,126,2.697,128,1.667,145,2.474,146,2.998,147,2.998,148,2.998,149,2.474,150,2.998,151,2.998,152,2.13,153,1.496,154,2.998]],["title/injectables/BcryptProvider.html",[77,0.613,131,1.894]],["body/injectables/BcryptProvider.html",[3,0.379,4,0.331,5,0.331,7,0.379,8,1.042,11,0.038,12,0.764,14,1.042,15,1.867,16,0.621,17,0.602,20,0.379,21,0.242,24,1.397,26,0.023,27,0.023,66,3.707,71,2.125,77,0.764,78,1.091,96,1.15,97,0.943,98,0.684,99,1.15,120,1.941,125,1.397,131,2.363,152,1.903,153,1.336,155,2.211,156,3.62,157,3.123,158,2.211,159,4.307,160,3.934,161,2.678,162,3.62,163,3.123,164,2.678,165,3.123,166,2.211,167,2.678,168,4.386,169,1.336,170,2.678,171,2.678,172,2.678]],["title/classes/CreateUserDto.html",[21,0.274,173,1.365]],["body/classes/CreateUserDto.html",[3,0.421,4,0.368,5,0.368,7,0.421,10,2.488,11,0.037,12,1.007,15,1.883,16,0.576,20,0.421,21,0.367,26,0.025,27,0.025,98,0.901,107,1.653,173,1.831,174,1.857,175,4.31,176,2.454,177,2.262,178,3.828,179,1.889,180,2.579,181,3.828,182,2.973,183,2.973,184,2.973,185,2.973,186,2.973,187,2.973,188,2.973,189,2.973,190,4.31,191,4.068,192,3.358,193,3.828,194,3.358,195,2.454,196,2.112,197,2.973]],["title/injectables/CreateUserProvider.html",[77,0.613,198,1.513]],["body/injectables/CreateUserProvider.html",[3,0.333,4,0.291,5,0.291,7,0.333,8,0.949,11,0.038,12,0.696,14,0.648,16,0.707,17,0.528,20,0.333,21,0.212,23,1.55,24,0.868,26,0.021,27,0.021,49,1.173,71,1.66,76,1.173,77,0.696,78,0.957,91,0.949,96,1.047,97,0.858,98,0.622,99,1.047,110,1.718,111,1.718,120,1.403,125,1.953,128,1.307,153,2.034,169,2.239,173,2.321,179,1.403,180,1.307,198,1.718,199,3.364,200,1.94,201,2.151,202,1.94,203,3.704,204,2.35,205,2.842,206,2.151,207,2.35,208,1.94,209,1.94,210,1.94,211,1.468,212,1.468,213,1.94,214,1.468,215,1.468,216,1.94,217,2.35,218,3.443,219,2.35,220,2.151,221,2.034,222,2.35,223,1.94,224,1.94,225,1.94,226,3.443,227,2.35,228,2.35,229,2.35,230,2.35,231,1.94,232,2.842,233,2.35,234,1.67]],["title/injectables/HashingProvider.html",[77,0.613,125,1.12]],["body/injectables/HashingProvider.html",[3,0.433,4,0.378,5,0.378,7,0.433,8,1.143,11,0.037,12,0.838,14,1.143,15,1.922,16,0.433,17,0.688,20,0.433,21,0.276,26,0.026,27,0.026,77,0.838,78,1.247,96,1.261,97,1.034,98,0.75,99,1.261,120,2.055,125,1.532,156,3.885,157,3.425,158,2.526,159,4.489,160,3.885,162,3.885,163,3.425,235,2.526,236,5.562,237,3.061,238,3.061]],["title/classes/SignInDto.html",[21,0.274,94,1.365]],["body/classes/SignInDto.html",[3,0.491,4,0.429,5,0.429,7,0.491,10,2.25,11,0.037,12,0.911,15,1.777,16,0.638,20,0.491,21,0.407,26,0.028,27,0.028,94,2.029,98,0.815,107,1.929,174,2.166,177,2.507,179,2.04,180,2.785,190,4.135,192,3.721,193,4.135,194,3.721,196,2.464,239,2.863,240,3.468,241,3.468,242,3.468,243,3.468]],["title/injectables/SignInProvider.html",[77,0.613,126,1.513]],["body/injectables/SignInProvider.html",[3,0.296,4,0.259,5,0.259,7,0.296,8,0.871,11,0.038,12,0.638,14,0.577,16,0.724,17,0.471,20,0.296,21,0.189,23,1.908,24,0.773,26,0.019,27,0.019,54,1.308,71,1.55,76,1.045,77,0.638,78,0.853,88,1.974,89,1.974,91,1.049,94,2.048,96,0.961,97,0.788,98,0.571,99,0.961,108,1.308,110,1.577,111,2.115,120,1.287,121,1.488,125,1.834,126,1.577,134,1.422,137,1.728,138,1.728,140,1.488,149,1.728,153,1.899,166,1.728,169,1.577,179,1.55,180,1.757,220,2.377,221,1.899,225,1.728,231,1.728,232,1.728,244,1.728,245,2.094,246,1.727,247,4.966,248,3.806,249,4.239,250,2.094,251,2.094,252,2.094,253,2.094,254,1.728,255,2.094,256,2.094,257,3.16,258,3.806,259,2.094,260,2.094,261,2.094,262,2.094,263,2.094,264,2.094,265,2.094,266,2.094,267,3.16,268,2.094,269,2.094,270,2.094,271,2.094,272,2.094,273,2.094,274,2.094,275,2.094,276,2.094,277,2.094,278,2.094,279,2.094,280,2.094]],["title/classes/User.html",[21,0.274,91,0.835]],["body/classes/User.html",[3,0.375,4,0.327,5,0.327,7,0.375,10,2.366,11,0.037,12,0.958,15,1.888,16,0.532,20,0.532,21,0.239,26,0.023,27,0.023,49,1.322,62,4.65,91,1.034,98,0.966,169,1.322,174,1.655,177,2.087,178,3.599,179,1.776,180,2.424,181,3.599,195,3.099,212,1.655,281,1.882,282,4.743,283,4.36,284,5.346,285,2.649,286,2.649,287,3.754,288,2.649,289,3.754,290,2.649,291,2.649,292,5.006,293,3.099,294,2.649,295,3.754,296,2.649,297,1.655,298,2.187]],["title/controllers/UserController.html",[0,1.365,299,1.894]],["body/controllers/UserController.html",[0,1.018,2,1.018,3,0.32,4,0.28,5,0.28,7,0.32,8,0.923,10,1.671,11,0.037,12,0.677,14,0.923,15,1.336,16,0.624,17,0.509,20,0.32,21,0.204,23,1.018,24,1.237,26,0.021,27,0.021,71,2.006,76,1.129,86,1.868,90,1.868,91,1.472,96,1.018,97,0.835,98,0.72,99,1.018,100,2.764,101,1.868,102,2.764,105,2.764,106,2.764,107,1.258,110,1.129,111,1.129,112,1.868,153,1.671,169,1.129,173,2.293,179,1.795,201,2.092,206,1.413,214,1.413,215,1.413,220,1.413,221,1.989,223,2.764,224,2.764,234,2.379,246,1.624,254,1.868,299,2.092,300,1.868,301,3.348,302,2.263,303,2.263,304,3.348,305,2.752,306,3.348,307,2.263,308,3.348,309,2.263,310,2.263,311,3.348,312,2.263,313,1.868,314,2.263,315,1.868,316,3.986,317,2.263,318,2.263,319,2.263,320,3.348,321,2.263,322,2.263,323,2.263,324,2.263,325,2.263,326,1.868,327,1.868]],["title/interfaces/UserInterface.html",[115,1.686,246,1.235]],["body/interfaces/UserInterface.html",[3,0.477,4,0.417,5,0.417,7,0.477,8,1.22,11,0.037,12,0.894,14,1.22,15,1.656,16,0.627,20,0.477,26,0.027,27,0.027,91,0.929,96,1.346,97,1.103,98,0.8,99,1.346,115,1.875,117,2.396,120,2.137,173,2.452,179,1.374,201,2.765,206,2.765,211,2.106,214,2.106,215,2.106,246,1.803,328,2.783,329,3.654,330,3.372,331,3.654,332,3.372]],["title/modules/UserModule.html",[28,1.365,41,1.513]],["body/modules/UserModule.html",[2,1.655,3,0.365,4,0.318,5,0.318,11,0.038,16,0.751,17,0.579,20,0.365,21,0.232,26,0.023,27,0.023,28,1.931,30,1.284,31,1.284,32,1.608,33,1.608,34,1.284,35,2.68,36,2.68,40,1.835,41,2.793,42,2.297,43,1.608,44,1.431,46,1.829,48,2.125,49,1.284,91,0.709,97,0.642,128,2.045,134,2.598,141,2.125,198,2.57,211,1.608,246,2.16,293,2.125,297,2.297,299,2.68,333,2.125,334,2.125,335,2.125,336,2.574,337,2.574,338,2.574,339,2.574,340,2.574,341,2.125,342,2.574,343,2.574,344,2.574]],["title/injectables/UserService.html",[77,0.613,134,1.365]],["body/injectables/UserService.html",[3,0.325,4,0.284,5,0.284,7,0.325,8,0.933,11,0.038,12,0.813,14,0.933,15,1.348,16,0.76,17,0.517,20,0.325,21,0.207,23,1.525,24,1.251,26,0.021,27,0.021,49,1.147,71,2.017,76,1.147,77,0.684,78,0.936,91,1.223,96,1.223,97,1.003,98,0.727,99,1.223,110,1.69,111,1.69,120,1.808,125,0.849,128,1.278,134,1.525,152,1.633,153,1.69,169,1.147,173,2.13,179,1.38,198,2.555,201,2.116,202,1.897,203,3.664,205,2.796,206,2.116,208,1.897,209,1.897,210,1.897,211,1.436,212,1.436,213,1.897,214,1.436,215,1.436,216,1.897,220,1.436,221,1.147,234,1.633,246,1.38,313,1.897,315,1.897,326,1.897,327,1.897,329,2.796,331,2.796,341,1.897,345,1.897,346,2.298,347,2.298,348,2.298,349,1.897,350,2.298,351,2.298,352,2.298,353,2.298]],["title/coverage.html",[354,2.929]],["body/coverage.html",[0,1.951,1,1.637,5,0.324,6,2.163,11,0.037,18,1.308,21,0.391,26,0.023,27,0.023,34,1.308,77,1.077,79,2.163,84,1.637,85,2.163,91,0.722,94,1.179,98,0.473,103,1.308,115,2.071,116,1.308,118,2.163,125,0.968,126,1.308,131,1.637,134,1.179,145,2.163,155,2.163,173,1.179,175,2.163,176,2.163,198,1.308,199,2.163,200,2.163,221,1.308,235,2.163,239,2.163,244,2.163,246,1.067,281,2.647,297,1.637,299,1.637,300,2.163,328,2.163,345,2.163,354,1.862,355,2.163,356,2.62,357,2.62,358,5.98,359,4.72,360,5.447,361,2.163,362,3.725,363,4.72,364,2.163,365,3.725,366,2.163,367,2.163,368,2.163,369,3.725,370,2.62,371,2.62,372,2.62]],["title/dependencies.html",[31,1.817,373,2.096]],["body/dependencies.html",[11,0.038,17,0.755,21,0.398,26,0.027,27,0.027,31,1.675,49,1.675,54,2.097,56,2.771,57,2.771,107,1.866,140,2.385,165,2.771,196,2.385,212,2.097,374,3.356,375,3.356,376,4.93,377,3.356,378,3.356,379,4.413,380,3.356,381,3.356,382,3.356,383,3.356,384,3.356,385,3.356,386,3.356,387,3.356,388,3.356,389,3.356,390,3.356,391,3.356,392,3.356,393,3.356,394,3.356,395,3.356,396,3.356,397,3.356,398,3.356,399,3.356,400,3.356,401,3.356,402,3.356]],["title/miscellaneous/functions.html",[403,1.586,404,3.007]],["body/miscellaneous/functions.html",[7,0.593,11,0.034,26,0.031,27,0.031,34,2.724,96,1.272,97,1.043,98,0.756,99,1.272,361,3.455,367,3.455,368,4.188,403,2.614,404,3.455,405,4.185,406,4.185,407,4.185,408,5.073,409,4.185]],["title/index.html",[7,0.36,410,2.539,411,2.539]],["body/index.html",[4,0.229,11,0.035,26,0.018,27,0.018,44,2.535,58,1.53,305,1.158,349,1.53,354,1.317,355,2.377,412,1.854,413,1.854,414,3.529,415,2.879,416,1.854,417,1.854,418,1.854,419,1.854,420,2.879,421,3.529,422,1.854,423,1.854,424,1.854,425,3.979,426,1.854,427,3.979,428,4.918,429,1.854,430,4.758,431,1.854,432,1.854,433,1.854,434,2.879,435,1.854,436,2.879,437,1.854,438,3.529,439,1.854,440,2.879,441,1.854,442,1.854,443,1.854,444,1.854,445,1.854,446,3.979,447,4.918,448,4.56,449,1.854,450,2.879,451,1.854,452,1.854,453,1.854,454,1.854,455,1.854,456,4.56,457,2.879,458,3.979,459,1.854,460,2.879,461,1.854,462,1.854,463,2.879,464,4.308,465,3.979,466,1.854,467,2.879,468,1.854,469,1.854,470,1.854,471,1.854,472,3.979,473,1.854,474,1.854,475,1.854,476,1.854,477,1.854,478,2.879,479,1.854,480,1.854,481,1.854,482,1.854,483,1.854,484,2.879,485,1.854,486,1.854,487,1.854,488,2.879,489,1.854,490,1.854,491,3.284,492,2.879,493,1.854,494,1.854,495,1.854,496,1.854,497,1.854,498,1.854,499,1.854,500,1.854,501,2.879,502,1.854,503,1.854,504,1.854,505,1.854,506,3.529,507,1.854,508,1.854,509,1.854,510,1.854,511,1.854,512,1.854,513,2.879,514,1.854,515,1.854,516,1.854,517,1.854,518,1.854,519,2.879,520,1.854,521,1.854,522,1.854,523,2.377,524,2.879,525,1.854,526,1.854,527,1.854,528,1.854,529,1.854,530,1.854,531,1.854,532,1.854,533,1.854,534,1.53,535,1.854,536,1.854,537,1.854,538,1.854,539,1.854,540,1.854,541,1.317]],["title/modules.html",[30,2.057]],["body/modules.html",[11,0.032,26,0.032,27,0.032,29,2.691,30,2.15,40,2.15,41,2.15,491,4.563,542,5.528,543,5.528,544,5.528]],["title/overview.html",[545,3.403]],["body/overview.html",[2,1.271,11,0.036,18,2.252,26,0.024,27,0.024,28,1.271,29,3.467,30,1.409,31,1.409,32,1.764,33,1.764,34,1.409,35,1.764,36,1.764,37,2.331,38,2.331,39,2.331,40,2.848,41,2.813,42,2.452,43,1.764,44,1.57,78,1.15,103,2.716,116,2.434,117,2.006,122,2.331,123,2.331,124,2.331,125,1.801,126,2.252,134,2.45,174,1.764,198,2.252,246,1.987,333,2.331,334,2.331,335,2.331,545,2.331,546,4.513,547,2.823,548,2.823]],["title/properties.html",[177,2.025,373,2.096]],["body/properties.html",[11,0.037,26,0.032,27,0.032,177,2.469,305,2.773,534,3.665,541,3.155,549,4.44,550,4.44,551,4.44]],["title/miscellaneous/variables.html",[403,1.586,552,3.007]],["body/miscellaneous/variables.html",[7,0.496,11,0.036,26,0.028,27,0.028,68,3.745,97,0.873,98,0.633,221,1.747,281,2.488,297,2.833,298,2.89,305,2.187,364,2.89,366,3.745,403,2.187,523,2.89,541,2.488,552,2.89,553,3.502,554,3.502,555,4.536,556,4.536,557,3.502,558,3.502,559,3.502,560,3.502,561,3.502,562,3.502,563,3.502,564,3.502,565,3.502,566,3.502,567,3.502,568,3.502,569,3.502,570,3.502,571,4.536,572,3.502,573,4.536,574,3.502,575,3.502,576,4.536,577,3.502,578,3.502]],["title/routes.html",[579,3.403]],["body/routes.html",[11,0.034,26,0.034,27,0.034,579,3.903]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"injectables/HashingProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["0",{"_index":358,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":550,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["0.3.24",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":363,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":359,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":360,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":370,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":369,"title":{},"body":{"coverage.html":{}}}],["1.1.26",{"_index":375,"title":{},"body":{"dependencies.html":{}}}],["11.0.0",{"_index":379,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":376,"title":{},"body":{"dependencies.html":{}}}],["11.0.3",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["11.2.0",{"_index":387,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":548,"title":{},"body":{"overview.html":{}}}],["2.1.0",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["201",{"_index":304,"title":{},"body":{"controllers/UserController.html":{}}}],["3",{"_index":546,"title":{},"body":{"overview.html":{}}}],["4.0.2",{"_index":377,"title":{},"body":{"dependencies.html":{}}}],["409",{"_index":308,"title":{},"body":{"controllers/UserController.html":{}}}],["5.0.3",{"_index":386,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":289,"title":{},"body":{"classes/User.html":{}}}],["6.0.0",{"_index":389,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":547,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["8.15.1",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["8.16.0",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["abstract",{"_index":236,"title":{},"body":{"injectables/HashingProvider.html":{}}}],["accesstoken",{"_index":267,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["addbearerauth",{"_index":568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allowing",{"_index":479,"title":{},"body":{"index.html":{}}}],["already",{"_index":223,"title":{},"body":{"injectables/CreateUserProvider.html":{},"controllers/UserController.html":{}}}],["amazing",{"_index":529,"title":{},"body":{"index.html":{}}}],["api",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["apibody",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":190,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["apiproperty()@isdatestring",{"_index":182,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isemail",{"_index":184,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isemail()@isnotempty",{"_index":240,"title":{},"body":{"classes/SignInDto.html":{}}}],["apiproperty()@isnotempty()@isstring",{"_index":188,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isnotempty()@minlength(6",{"_index":186,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":242,"title":{},"body":{"classes/SignInDto.html":{}}}],["apiresponse",{"_index":316,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags",{"_index":317,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags('user",{"_index":318,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":409,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app.controller",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":448,"title":{},"body":{"index.html":{}}}],["applications",{"_index":420,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["audience",{"_index":272,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["auth",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":84,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authinterface",{"_index":116,"title":{"interfaces/AuthInterface.html":{}},"body":{"interfaces/AuthInterface.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":534,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice",{"_index":103,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["aws",{"_index":467,"title":{},"body":{"index.html":{}}}],["backers",{"_index":530,"title":{},"body":{"index.html":{}}}],["base",{"_index":560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["based",{"_index":462,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":165,"title":{},"body":{"injectables/BcryptProvider.html":{},"dependencies.html":{}}}],["bcrypt.compare(data",{"_index":172,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["bcrypt.gensalt",{"_index":170,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["bcrypt.hash(data",{"_index":171,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["bcryptprovider",{"_index":131,"title":{"injectables/BcryptProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/BcryptProvider.html":{},"coverage.html":{}}}],["bearer",{"_index":571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["board",{"_index":522,"title":{},"body":{"index.html":{}}}],["body",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":259,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":544,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":542,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":159,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["build",{"_index":578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":415,"title":{},"body":{"index.html":{}}}],["catch",{"_index":231,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/SignInProvider.html":{}}}],["channel",{"_index":494,"title":{},"body":{"index.html":{}}}],["check",{"_index":456,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"injectables/HashingProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":174,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/User.html":{},"overview.html":{}}}],["clicks",{"_index":478,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":461,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":333,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":334,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":335,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["come",{"_index":485,"title":{},"body":{"index.html":{}}}],["comparepassword",{"_index":156,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["comparepassword(data",{"_index":158,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["comparison",{"_index":265,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["compodoc/compodoc",{"_index":374,"title":{},"body":{"dependencies.html":{}}}],["config/jwt.config",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{},"injectables/SignInProvider.html":{}}}],["configmodule",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forfeature(jwtconfig",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mongodb_name",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mongodb_uri",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["configtype",{"_index":249,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["conflictexception",{"_index":208,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/UserService.html":{}}}],["conflictexception('user",{"_index":222,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["const",{"_index":169,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/SignInProvider.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateUserProvider.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["constructor(signinprovider",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(usermodel",{"_index":202,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":245,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('user",{"_index":319,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["courses",{"_index":500,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":354,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":234,"title":{},"body":{"injectables/CreateUserProvider.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["created",{"_index":306,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser",{"_index":201,"title":{},"body":{"injectables/CreateUserProvider.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{}}}],["createuser(@body",{"_index":322,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(createuserdto",{"_index":206,"title":{},"body":{"injectables/CreateUserProvider.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{}}}],["createuserdto",{"_index":173,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserdto})@apiresponse({status",{"_index":303,"title":{},"body":{"controllers/UserController.html":{}}}],["createuserprovider",{"_index":198,"title":{"injectables/CreateUserProvider.html":{}},"body":{"injectables/CreateUserProvider.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":162,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["date",{"_index":282,"title":{},"body":{"classes/User.html":{}}}],["dateofbirth",{"_index":178,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["dbname",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["deeper",{"_index":496,"title":{},"body":{"index.html":{}}}],["default",{"_index":555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"injectables/HashingProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":446,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":466,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":457,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":477,"title":{},"body":{"index.html":{}}}],["description",{"_index":305,"title":{},"body":{"controllers/UserController.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":431,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":508,"title":{},"body":{"index.html":{}}}],["discord",{"_index":493,"title":{},"body":{"index.html":{}}}],["dive",{"_index":495,"title":{},"body":{"index.html":{}}}],["document",{"_index":295,"title":{},"body":{"classes/User.html":{}}}],["documentation",{"_index":355,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documentbuilder",{"_index":557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dtos/create",{"_index":214,"title":{},"body":{"injectables/CreateUserProvider.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{}}}],["dtos/signin.dto",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["e2e",{"_index":441,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":416,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":454,"title":{},"body":{"index.html":{}}}],["email",{"_index":179,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{}}}],["encrypted",{"_index":160,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["ensure",{"_index":452,"title":{},"body":{"index.html":{}}}],["enter",{"_index":575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enterprise",{"_index":512,"title":{},"body":{"index.html":{}}}],["error",{"_index":232,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/SignInProvider.html":{}}}],["example",{"_index":427,"title":{},"body":{"index.html":{}}}],["exclude",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["exec",{"_index":353,"title":{},"body":{"injectables/UserService.html":{}}}],["existinguser",{"_index":218,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["exists",{"_index":224,"title":{},"body":{"injectables/CreateUserProvider.html":{},"controllers/UserController.html":{}}}],["experience",{"_index":498,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":278,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"injectables/HashingProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":385,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":296,"title":{},"body":{"classes/User.html":{}}}],["failed",{"_index":266,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["false",{"_index":260,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["fast",{"_index":470,"title":{},"body":{"index.html":{}}}],["features",{"_index":481,"title":{},"body":{"index.html":{}}}],["few",{"_index":472,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"injectables/HashingProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["finduser",{"_index":301,"title":{},"body":{"controllers/UserController.html":{}}}],["finduser(@query('email",{"_index":324,"title":{},"body":{"controllers/UserController.html":{}}}],["finduser(email",{"_index":310,"title":{},"body":{"controllers/UserController.html":{}}}],["finduserbyemail",{"_index":329,"title":{},"body":{"interfaces/UserInterface.html":{},"injectables/UserService.html":{}}}],["finduserbyemail(email",{"_index":331,"title":{},"body":{"interfaces/UserInterface.html":{},"injectables/UserService.html":{}}}],["focus",{"_index":480,"title":{},"body":{"index.html":{}}}],["follow",{"_index":516,"title":{},"body":{"index.html":{}}}],["forwardref",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CreateUserProvider.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["found",{"_index":327,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["framework",{"_index":414,"title":{},"body":{"index.html":{}}}],["fs",{"_index":350,"title":{},"body":{"injectables/UserService.html":{}}}],["full",{"_index":511,"title":{},"body":{"index.html":{}}}],["function",{"_index":362,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":404,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":475,"title":{},"body":{"index.html":{}}}],["generate",{"_index":167,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["get('findbyemail",{"_index":311,"title":{},"body":{"controllers/UserController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":410,"title":{"index.html":{}},"body":{}}],["graph",{"_index":503,"title":{},"body":{"index.html":{}}}],["grow",{"_index":526,"title":{},"body":{"index.html":{}}}],["hands",{"_index":497,"title":{},"body":{"index.html":{}}}],["handy",{"_index":486,"title":{},"body":{"index.html":{}}}],["hashedpassword",{"_index":226,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["hashing.provider",{"_index":166,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/SignInProvider.html":{}}}],["hashingprovider",{"_index":125,"title":{"injectables/HashingProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/HashingProvider.html":{},"injectables/SignInProvider.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["hashpassword",{"_index":157,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["hashpassword(data",{"_index":163,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["header",{"_index":577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hello",{"_index":81,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":501,"title":{},"body":{"index.html":{}}}],["here",{"_index":532,"title":{},"body":{"index.html":{}}}],["http",{"_index":569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:3000",{"_index":562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/git/git",{"_index":565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":538,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":356,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/UserService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"injectables/HashingProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["in'})@apibody({type",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"injectables/HashingProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":408,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"injectables/HashingProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["information",{"_index":459,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":483,"title":{},"body":{"index.html":{}}}],["inject",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CreateUserProvider.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["inject('userinterface",{"_index":254,"title":{},"body":{"injectables/SignInProvider.html":{},"controllers/UserController.html":{}}}],["inject(forwardref",{"_index":217,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["inject(jwtconfig.key",{"_index":255,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["injectable",{"_index":77,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/HashingProvider.html":{},"injectables/SignInProvider.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/HashingProvider.html":{},"injectables/SignInProvider.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":78,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/HashingProvider.html":{},"injectables/SignInProvider.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectmodel",{"_index":210,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/UserService.html":{}}}],["injectmodel(user.name",{"_index":216,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/UserService.html":{}}}],["install",{"_index":474,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":429,"title":{},"body":{"index.html":{}}}],["interact",{"_index":504,"title":{},"body":{"index.html":{}}}],["interface",{"_index":115,"title":{"interfaces/AuthInterface.html":{},"interfaces/UserInterface.html":{}},"body":{"interfaces/AuthInterface.html":{},"interfaces/UserInterface.html":{},"coverage.html":{}}}],["interfaces",{"_index":117,"title":{},"body":{"interfaces/AuthInterface.html":{},"interfaces/UserInterface.html":{},"overview.html":{}}}],["interfaces/auth.interface",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["interfaces/user.interface",{"_index":315,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["internalservererrorexception",{"_index":209,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/UserService.html":{}}}],["internalservererrorexception('failed",{"_index":233,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["isdatestring",{"_index":191,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail",{"_index":192,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["isequalpassword",{"_index":258,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["isglobal",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":193,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["isstring",{"_index":194,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["issuer",{"_index":274,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["job",{"_index":519,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":521,"title":{},"body":{"index.html":{}}}],["join",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt",{"_index":573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtconfig",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{},"injectables/SignInProvider.html":{}}}],["jwtconfiguration",{"_index":248,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["jwtmodule",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync(jwtconfig.asprovider",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":247,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["kamil",{"_index":535,"title":{},"body":{"index.html":{}}}],["key",{"_index":449,"title":{},"body":{"index.html":{}}}],["koko",{"_index":82,"title":{},"body":{"injectables/AppService.html":{}}}],["learn",{"_index":489,"title":{},"body":{"index.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":541,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["license.txt",{"_index":567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["licensed",{"_index":524,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":518,"title":{},"body":{"index.html":{}}}],["looking",{"_index":460,"title":{},"body":{"index.html":{}}}],["loop",{"_index":514,"title":{},"body":{"index.html":{}}}],["makes",{"_index":468,"title":{},"body":{"index.html":{}}}],["managing",{"_index":482,"title":{},"body":{"index.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"injectables/HashingProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["mau",{"_index":464,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/HashingProvider.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":195,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["minlength(6",{"_index":197,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":403,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":523,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":434,"title":{},"body":{"index.html":{}}}],["model",{"_index":203,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/UserService.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":212,"title":{},"body":{"injectables/CreateUserProvider.html":{},"classes/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature",{"_index":342,"title":{},"body":{"modules/UserModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":458,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":536,"title":{},"body":{"index.html":{}}}],["name",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/HashingProvider.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["need",{"_index":509,"title":{},"body":{"index.html":{}}}],["nest",{"_index":421,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":540,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":447,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/HashingProvider.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/SignInProvider.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":378,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{},"injectables/SignInProvider.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":380,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mau",{"_index":476,"title":{},"body":{"index.html":{}}}],["nestjs/mongoose",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"injectables/CreateUserProvider.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":384,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":388,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":221,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newuser",{"_index":228,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["newuser.save",{"_index":230,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["node.js",{"_index":413,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":313,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["notfoundexception('user",{"_index":326,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["npm",{"_index":428,"title":{},"body":{"index.html":{}}}],["offer",{"_index":520,"title":{},"body":{"index.html":{}}}],["official",{"_index":465,"title":{},"body":{"index.html":{}}}],["open",{"_index":525,"title":{},"body":{"index.html":{}}}],["optional",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/HashingProvider.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":545,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":373,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/HashingProvider.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":510,"title":{},"body":{"index.html":{}}}],["password",{"_index":180,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/User.html":{}}}],["path",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["pg",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["platform",{"_index":463,"title":{},"body":{"index.html":{}}}],["please",{"_index":492,"title":{},"body":{"index.html":{}}}],["possible",{"_index":455,"title":{},"body":{"index.html":{}}}],["post",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["post()@apioperation({summary",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["prefix",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["private",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateUserProvider.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["production",{"_index":436,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":412,"title":{},"body":{"index.html":{}}}],["project",{"_index":425,"title":{},"body":{"index.html":{}}}],["promise",{"_index":120,"title":{},"body":{"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/HashingProvider.html":{},"injectables/SignInProvider.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{}}}],["prop",{"_index":292,"title":{},"body":{"classes/User.html":{}}}],["prop({required",{"_index":286,"title":{},"body":{"classes/User.html":{}}}],["prop({type",{"_index":283,"title":{},"body":{"classes/User.html":{}}}],["properties",{"_index":177,"title":{"properties.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/User.html":{},"properties.html":{}}}],["provide",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["providers/auth.service",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["providers/bcrypt.provider",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/create",{"_index":340,"title":{},"body":{"modules/UserModule.html":{}}}],["providers/hashing.provider",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/signin.provider",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/user.service",{"_index":339,"title":{},"body":{"modules/UserModule.html":{}}}],["public",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/BcryptProvider.html":{}}}],["query",{"_index":314,"title":{},"body":{"controllers/UserController.html":{}}}],["questions",{"_index":490,"title":{},"body":{"index.html":{}}}],["read",{"_index":349,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateUserProvider.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["ready",{"_index":445,"title":{},"body":{"index.html":{}}}],["real",{"_index":505,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":424,"title":{},"body":{"index.html":{}}}],["requesttimeoutexception",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["requesttimeoutexception('password",{"_index":264,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["required",{"_index":284,"title":{},"body":{"classes/User.html":{}}}],["requiring",{"_index":471,"title":{},"body":{"index.html":{}}}],["reset",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resources",{"_index":484,"title":{},"body":{"index.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"injectables/HashingProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/HashingProvider.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{}}}],["rootpath",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["routes",{"_index":579,"title":{"routes.html":{}},"body":{"routes.html":{}}}],["run",{"_index":430,"title":{},"body":{"index.html":{}}}],["runs",{"_index":453,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["salt",{"_index":168,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["scalable",{"_index":417,"title":{},"body":{"index.html":{}}}],["schema",{"_index":293,"title":{},"body":{"classes/User.html":{},"modules/UserModule.html":{}}}],["schemafactory",{"_index":294,"title":{},"body":{"classes/User.html":{}}}],["schemafactory.createforclass(user",{"_index":298,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["scheme",{"_index":570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scm.com/blob/main/mit",{"_index":566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":276,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["server",{"_index":418,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["setdescription('use",{"_index":559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setlicense",{"_index":564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settitle('tda",{"_index":558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":426,"title":{},"body":{"index.html":{}}}],["setupswagger",{"_index":368,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupswagger(app",{"_index":407,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setversion('1.0",{"_index":563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shine",{"_index":83,"title":{},"body":{"injectables/AppService.html":{}}}],["side",{"_index":419,"title":{},"body":{"index.html":{}}}],["sign",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["signin(@body",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(signindto",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["signin.provider",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["signindto",{"_index":94,"title":{"classes/SignInDto.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"coverage.html":{}}}],["signindto.password",{"_index":262,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["signinprovider",{"_index":126,"title":{"injectables/SignInProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{},"coverage.html":{},"overview.html":{}}}],["simple",{"_index":473,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"injectables/HashingProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":528,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":405,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../swagger.config.ts",{"_index":553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.ts",{"_index":406,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.schema.ts",{"_index":554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":79,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":80,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:15",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":337,"title":{},"body":{"modules/UserModule.html":{}}}],["src/auth/auth.module.ts",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/dtos/signin.dto.ts",{"_index":239,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["src/auth/dtos/signin.dto.ts:13",{"_index":243,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/dtos/signin.dto.ts:8",{"_index":241,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/interfaces/auth.interface.ts",{"_index":118,"title":{},"body":{"interfaces/AuthInterface.html":{},"coverage.html":{}}}],["src/auth/interfaces/auth.interface.ts:5",{"_index":119,"title":{},"body":{"interfaces/AuthInterface.html":{}}}],["src/auth/providers/auth.service.ts",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts:13",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:8",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/bcrypt.provider.ts",{"_index":155,"title":{},"body":{"injectables/BcryptProvider.html":{},"coverage.html":{}}}],["src/auth/providers/bcrypt.provider.ts:13",{"_index":161,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["src/auth/providers/bcrypt.provider.ts:7",{"_index":164,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["src/auth/providers/hashing.provider",{"_index":213,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/UserService.html":{}}}],["src/auth/providers/hashing.provider.ts",{"_index":235,"title":{},"body":{"injectables/HashingProvider.html":{},"coverage.html":{}}}],["src/auth/providers/hashing.provider.ts:5",{"_index":238,"title":{},"body":{"injectables/HashingProvider.html":{}}}],["src/auth/providers/hashing.provider.ts:7",{"_index":237,"title":{},"body":{"injectables/HashingProvider.html":{}}}],["src/auth/providers/signin.provider.ts",{"_index":244,"title":{},"body":{"injectables/SignInProvider.html":{},"coverage.html":{}}}],["src/auth/providers/signin.provider.ts:11",{"_index":250,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["src/auth/providers/signin.provider.ts:24",{"_index":251,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["src/main.ts",{"_index":361,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/swagger/swagger.config.ts",{"_index":364,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/swagger/swagger.ts",{"_index":367,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user/dtos/create",{"_index":175,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/interfaces/user.interface",{"_index":253,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["src/user/interfaces/user.interface.ts",{"_index":328,"title":{},"body":{"interfaces/UserInterface.html":{},"coverage.html":{}}}],["src/user/interfaces/user.interface.ts:5",{"_index":330,"title":{},"body":{"interfaces/UserInterface.html":{}}}],["src/user/interfaces/user.interface.ts:6",{"_index":332,"title":{},"body":{"interfaces/UserInterface.html":{}}}],["src/user/providers/create",{"_index":199,"title":{},"body":{"injectables/CreateUserProvider.html":{},"coverage.html":{}}}],["src/user/providers/user.service",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/user/providers/user.service.ts",{"_index":345,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/providers/user.service.ts:12",{"_index":346,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/providers/user.service.ts:21",{"_index":347,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/providers/user.service.ts:25",{"_index":348,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.controller.ts",{"_index":300,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:19",{"_index":309,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:24",{"_index":312,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/user/user.module.ts",{"_index":336,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.schema",{"_index":121,"title":{},"body":{"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["src/user/user.schema.ts",{"_index":281,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.schema.ts:10",{"_index":291,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.schema.ts:16",{"_index":288,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.schema.ts:23",{"_index":290,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.schema.ts:29",{"_index":285,"title":{},"body":{"classes/User.html":{}}}],["start",{"_index":432,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":435,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":437,"title":{},"body":{"index.html":{}}}],["started",{"_index":411,"title":{"index.html":{}},"body":{}}],["starter",{"_index":423,"title":{},"body":{"index.html":{}}}],["statements",{"_index":357,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["status",{"_index":320,"title":{},"body":{"controllers/UserController.html":{}}}],["stay",{"_index":513,"title":{},"body":{"index.html":{}}}],["steps",{"_index":450,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":469,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateUserDto.html":{},"injectables/HashingProvider.html":{},"classes/SignInDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{}}}],["sub",{"_index":269,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["successfully",{"_index":321,"title":{},"body":{"controllers/UserController.html":{}}}],["successfully'})@apiresponse({status",{"_index":307,"title":{},"body":{"controllers/UserController.html":{}}}],["summary",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["support",{"_index":491,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":543,"title":{},"body":{"modules.html":{}}}],["swaggerconfig",{"_index":366,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":372,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":371,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":451,"title":{},"body":{"index.html":{}}}],["test",{"_index":440,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":443,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":442,"title":{},"body":{"index.html":{}}}],["tests",{"_index":438,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":527,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.signin(signindto",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.createuserprovider.createuser(createuserdto",{"_index":351,"title":{},"body":{"injectables/UserService.html":{}}}],["this.hashingprovider.comparepassword",{"_index":261,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.hashingprovider.hashpassword(createuserdto.password",{"_index":227,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["this.jwtconfiguration.accesstokenttl",{"_index":279,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.jwtconfiguration.audience",{"_index":273,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.jwtconfiguration.issuer",{"_index":275,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.jwtconfiguration.secret",{"_index":277,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.jwtservice.signasync",{"_index":268,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.signinprovider.signin(signindto",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userinterface.createuser(createuserdto",{"_index":323,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userinterface.finduserbyemail(email",{"_index":325,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usermodel",{"_index":229,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["this.usermodel.findone",{"_index":352,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findone({email}).exec",{"_index":219,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["this.userservice.finduserbyemail(signindto.email",{"_index":256,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["throw",{"_index":220,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["time",{"_index":506,"title":{},"body":{"index.html":{}}}],["token",{"_index":576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touch",{"_index":533,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"classes/User.html":{}}}],["try",{"_index":225,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/SignInProvider.html":{}}}],["twitter",{"_index":539,"title":{},"body":{"index.html":{}}}],["type",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"injectables/HashingProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["types",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":422,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":252,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["unauthorizedexception('invalid",{"_index":257,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["unique",{"_index":287,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":439,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["unlicensed",{"_index":551,"title":{},"body":{"properties.html":{}}}],["updates",{"_index":515,"title":{},"body":{"index.html":{}}}],["uri",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useclass",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{}}}],["useexisting",{"_index":344,"title":{},"body":{"modules/UserModule.html":{}}}],["usefactory",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":91,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"injectables/CreateUserProvider.html":{},"injectables/SignInProvider.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user'})@apibody({type",{"_index":302,"title":{},"body":{"controllers/UserController.html":{}}}],["user._id",{"_index":270,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["user.controller",{"_index":338,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":215,"title":{},"body":{"injectables/CreateUserProvider.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":176,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":185,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:17",{"_index":187,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:21",{"_index":183,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":189,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":271,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["user.name",{"_index":343,"title":{},"body":{"modules/UserModule.html":{}}}],["user.password",{"_index":263,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["user.provider",{"_index":341,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.provider.ts",{"_index":200,"title":{},"body":{"injectables/CreateUserProvider.html":{},"coverage.html":{}}}],["user.provider.ts:18",{"_index":207,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["user.provider.ts:9",{"_index":204,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["user.schema",{"_index":211,"title":{},"body":{"injectables/CreateUserProvider.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.toobject",{"_index":280,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["user/user.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":299,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userinterface",{"_index":246,"title":{"interfaces/UserInterface.html":{}},"body":{"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usermodel",{"_index":205,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":41,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":181,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["userschema",{"_index":297,"title":{},"body":{"classes/User.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":134,"title":{"injectables/UserService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/SignInProvider.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":507,"title":{},"body":{"index.html":{}}}],["validator",{"_index":196,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"dependencies.html":{}}}],["value",{"_index":556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":365,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":552,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":549,"title":{},"body":{"properties.html":{}}}],["video",{"_index":499,"title":{},"body":{"index.html":{}}}],["visit",{"_index":488,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":502,"title":{},"body":{"index.html":{}}}],["watch",{"_index":433,"title":{},"body":{"index.html":{}}}],["website",{"_index":537,"title":{},"body":{"index.html":{}}}],["working",{"_index":487,"title":{},"body":{"index.html":{}}}],["x",{"_index":517,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":531,"title":{},"body":{"index.html":{}}}],["you're",{"_index":444,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AuthModule } from './auth/auth.module';\nimport { UserModule } from './user/user.module';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'public'),\n      exclude: ['/api*'], \n    }),\n    MongooseModule.forRootAsync({ \n      imports: [\n        ConfigModule\n      ],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGODB_URI'),\n        dbName: configService.get('MONGODB_NAME'),\n      }),\n      inject: [ConfigService],\n    }),\n    AuthModule,\n    UserModule\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello KoKo Shine!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'User Sign In'})@ApiBody({type: SignInDto})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { AuthService } from './providers/auth.service';\nimport { ApiBody, ApiOperation } from '@nestjs/swagger';\nimport { SignInDto } from './dtos/signin.dto';\n\n@Controller('auth')\nexport class AuthController {\n    constructor(\n        private readonly authService: AuthService,\n    ){}\n\n    @Post()\n    @ApiOperation({ summary: 'User Sign In' })\n    @ApiBody({ type: SignInDto })\n    public async signIn(@Body() signInDto: any) {\n        return this.authService.signIn(signInDto);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthInterface.html":{"url":"interfaces/AuthInterface.html","title":"interface - AuthInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/auth.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        signIn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(signInDto: SignInDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/auth.interface.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { User } from \"src/user/user.schema\";\nimport { SignInDto } from \"../dtos/signin.dto\";\n\nexport interface AuthInterface {\n    signIn(signInDto: SignInDto): Promise;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthInterface \n\nAuthInterface \n\n\n\nAuthService \n\nAuthService \n\n\n\nHashingProvider \n\nHashingProvider \n\n\n\nAuthModule\n\nAuthModule\n\nAuthInterface  -->\n\nAuthModule->AuthInterface \n\n\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nHashingProvider  -->\n\nAuthModule->HashingProvider \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nSignInProvider\n\nSignInProvider\n\nAuthModule -->\n\nSignInProvider->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            SignInProvider\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthInterface\n                        \n                        \n                            AuthService\n                        \n                        \n                            HashingProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { AuthService } from './providers/auth.service';\nimport { AuthController } from './auth.controller';\nimport { HashingProvider } from './providers/hashing.provider';\nimport { BcryptProvider } from './providers/bcrypt.provider';\nimport { UserModule } from 'src/user/user.module';\nimport { UserService } from 'src/user/providers/user.service';\nimport { SignInProvider } from './providers/signin.provider';\nimport { ConfigModule } from '@nestjs/config';\nimport jwtConfig from './config/jwt.config';\nimport { JwtModule } from '@nestjs/jwt';\n\n@Module({\n  providers: [\n    AuthService,\n    SignInProvider,\n    {\n      provide: HashingProvider,\n      useClass: BcryptProvider,\n    },\n    {\n      provide: 'AuthInterface',\n      useClass: AuthService,\n    }\n  ],\n  controllers: [AuthController],\n  exports: [\n    AuthService,\n    HashingProvider,\n    'AuthInterface'\n  ],\n  imports: [\n    forwardRef(() => UserModule),\n    ConfigModule.forFeature(jwtConfig),\n    JwtModule.registerAsync(jwtConfig.asProvider())\n  ], \n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(signInProvider: SignInProvider)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        signInProvider\n                                                  \n                                                        \n                                                                        SignInProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { SignInDto } from '../dtos/signin.dto';\nimport { SignInProvider } from './signin.provider';\nimport { AuthInterface } from '../interfaces/auth.interface';\nimport { User } from 'src/user/user.schema';\n\n@Injectable()\nexport class AuthService implements AuthInterface {\n    constructor(\n        private readonly signInProvider: SignInProvider,\n    ){}\n\n    async signIn(signInDto: SignInDto): Promise {\n        return await this.signInProvider.signIn(signInDto);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BcryptProvider.html":{"url":"injectables/BcryptProvider.html","title":"injectable - BcryptProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BcryptProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/bcrypt.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                comparePassword\n                            \n                            \n                                    Public\n                                    Async\n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        comparePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    comparePassword(data: string | Buffer, encrypted: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/bcrypt.provider.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                encrypted\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPassword(data: string | Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/bcrypt.provider.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as bcrypt from 'bcrypt';\nimport { Injectable } from '@nestjs/common';\nimport { HashingProvider } from './hashing.provider';\n\n@Injectable()\nexport class BcryptProvider implements HashingProvider {\n  public async hashPassword(data: string | Buffer): Promise {\n    // Generate the salt\n    const salt = await bcrypt.genSalt();\n    return bcrypt.hash(data, salt);\n  }\n\n  public async comparePassword(\n    data: string | Buffer,\n    encrypted: string,\n  ): Promise {\n    return bcrypt.compare(data, encrypted);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                dateOfBirth\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsDateString, IsEmail, IsNotEmpty, IsString, MinLength } from \"class-validator\";\n\nexport class CreateUserDto {\n    @ApiProperty()\n    @IsNotEmpty()\n    @IsString()\n    username: string;\n\n    @ApiProperty()\n    @IsEmail()\n    email: string;\n\n    @ApiProperty()\n    @IsNotEmpty()\n    @MinLength(6)\n    password: string;\n\n    @ApiProperty()\n    @IsDateString()\n    dateOfBirth: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUserProvider.html":{"url":"injectables/CreateUserProvider.html","title":"injectable - CreateUserProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateUserProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/providers/create-user.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, hashingProvider: HashingProvider)\n                    \n                \n                        \n                            \n                                Defined in src/user/providers/create-user.provider.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hashingProvider\n                                                  \n                                                        \n                                                                        HashingProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/providers/create-user.provider.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, forwardRef, Inject, Injectable, InternalServerErrorException } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { User } from \"../user.schema\";\nimport { Model } from \"mongoose\";\nimport { HashingProvider } from \"src/auth/providers/hashing.provider\";\nimport { CreateUserDto } from \"../dtos/create-user.dto\";\n\n@Injectable()\nexport class CreateUserProvider {\n    constructor(\n        @InjectModel(User.name)\n        private readonly userModel: Model,\n\n        @Inject(forwardRef(() => HashingProvider))\n        private readonly hashingProvider: HashingProvider,\n    ) {}\n\n    async createUser(createUserDto: CreateUserDto): Promise {\n        const {email} = createUserDto;\n        const existingUser = await this.userModel.findOne({email}).exec();\n\n        if (existingUser) {\n            throw new ConflictException('User with this email already exists')\n        }\n\n        try {\n            const hashedPassword = await this.hashingProvider.hashPassword(createUserDto.password);\n            const newUser = new this.userModel({\n                ...createUserDto,\n                password: hashedPassword,\n            });\n            return await newUser.save();\n        } catch (error) {\n            throw new InternalServerErrorException('Failed to create a user: ', error);\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HashingProvider.html":{"url":"injectables/HashingProvider.html","title":"injectable - HashingProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HashingProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/hashing.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                comparePassword\n                            \n                            \n                                    Abstract\n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        comparePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    comparePassword(data: string | Buffer, encrypted: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/hashing.provider.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                encrypted\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPassword(data: string | Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/hashing.provider.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport abstract class HashingProvider {\n  abstract hashPassword(data: string | Buffer): Promise;\n\n  abstract comparePassword(\n    data: string | Buffer,\n    encrypted: string,\n  ): Promise;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/signin.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/signin.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/signin.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsEmail, IsNotEmpty, IsString } from \"class-validator\";\n\nexport class SignInDto {\n    @ApiProperty()\n    @IsEmail()\n    @IsNotEmpty()\n    email: string;\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SignInProvider.html":{"url":"injectables/SignInProvider.html","title":"injectable - SignInProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SignInProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/signin.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserInterface, hashingProvider: HashingProvider, jwtService: JwtService, jwtConfiguration: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/signin.provider.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hashingProvider\n                                                  \n                                                        \n                                                                        HashingProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/signin.provider.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, RequestTimeoutException, UnauthorizedException } from \"@nestjs/common\";\nimport { HashingProvider } from \"./hashing.provider\";\nimport { SignInDto } from \"../dtos/signin.dto\";\nimport { User } from \"src/user/user.schema\";\nimport { UserInterface } from \"src/user/interfaces/user.interface\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport jwtConfig from \"../config/jwt.config\";\nimport { ConfigType } from \"@nestjs/config\";\n\n@Injectable()\nexport class SignInProvider {\n    constructor(\n        @Inject('UserInterface')\n        private readonly userService: UserInterface,\n\n        private readonly hashingProvider: HashingProvider,\n\n        private readonly jwtService: JwtService,\n\n        @Inject(jwtConfig.KEY)\n        private readonly jwtConfiguration: ConfigType\n    ){}\n\n    async signIn(signInDto: SignInDto): Promise {\n        const user = await this.userService.findUserByEmail(signInDto.email);\n\n        if (!user) {\n            throw new UnauthorizedException('Invalid email or password');\n        }\n\n        let isEqualPassword: boolean = false;\n\n        try {\n            isEqualPassword = await this.hashingProvider.comparePassword(\n                signInDto.password,\n                user.password,\n            );\n        } catch (error) {\n            throw new RequestTimeoutException('Password comparison failed');\n        }\n\n        if (!isEqualPassword) {\n            throw new UnauthorizedException('Invalid email or password');\n        }\n\n        const accessToken = await this.jwtService.signAsync(\n            {\n                sub: user._id,\n                email: user.email,\n            },\n            {\n                audience: this.jwtConfiguration.audience,\n                issuer: this.jwtConfiguration.issuer,\n                secret: this.jwtConfiguration.secret,\n                expiresIn: this.jwtConfiguration.accessTokenTtl,\n            }\n        )\n\n        return {\n            accessToken,\n            ...user.toObject(),\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dateOfBirth\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, minlength: 6, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.schema.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from 'mongoose';\n\n@Schema()\nexport class User extends Document {\n    @Prop({\n        type: String,\n        required: true,\n    })\n    username: string;\n\n    @Prop({ \n        required: true,\n        unique: true \n    })\n    email: string;\n\n    @Prop({ \n        type: String,\n        minlength: 6,\n        required: true,\n    })\n    password: string;\n\n    @Prop({ \n        type: Date,\n        required: true \n    })\n    dateOfBirth: Date;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createUser\n                            \n                            \n                                    \n                                    Async\n                                findUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new user'})@ApiBody({type: CreateUserDto})@ApiResponse({status: 201, description: 'User created successfully'})@ApiResponse({status: 409, description: 'User with this email already exists'})\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUser(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('findByEmail')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Inject, NotFoundException, Post, Query } from '@nestjs/common';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { UserInterface } from './interfaces/user.interface';\nimport { ApiBody, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('User')\n@Controller('user')\nexport class UserController {\n    constructor(\n        @Inject('UserInterface')\n        private readonly userInterface: UserInterface\n    ){} \n\n    @Post()\n    @ApiOperation({ summary: 'Create a new user' })\n    @ApiBody({ type: CreateUserDto })\n    @ApiResponse({ status: 201, description: 'User created successfully' })\n    @ApiResponse({ status: 409, description: 'User with this email already exists' })\n    async createUser(@Body() createUserDto: CreateUserDto) {\n        return await this.userInterface.createUser(createUserDto);\n    }\n\n    @Get('findByEmail')\n    async findUser(@Query('email') email: string) {\n        const user = await this.userInterface.findUserByEmail(email);\n        if (!user) {\n            throw new NotFoundException('User not found');\n        }\n        return user;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInterface.html":{"url":"interfaces/UserInterface.html","title":"interface - UserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createUser\n                                    \n                                \n                                \n                                    \n                                        findUserByEmail\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/interfaces/user.interface.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByEmail\n                        \n                    \n                \n            \n            \n                \nfindUserByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/interfaces/user.interface.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CreateUserDto } from \"../dtos/create-user.dto\";\nimport { User } from \"../user.schema\";\n\nexport interface UserInterface {\n    createUser(createUserDto: CreateUserDto): Promise;\n    findUserByEmail(email: string): Promise;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserInterface \n\nUserInterface \n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserInterface  -->\n\nUserModule->UserInterface \n\n\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nCreateUserProvider\n\nCreateUserProvider\n\nUserModule -->\n\nCreateUserProvider->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateUserProvider\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserInterface\n                        \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './user.schema';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { UserController } from './user.controller';\nimport { UserService } from './providers/user.service';\nimport { CreateUserProvider } from './providers/create-user.provider';\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: User.name,\n                schema: UserSchema\n            }\n        ]),\n        forwardRef(() => AuthModule),\n    ],\n    providers: [\n        {\n            provide: 'UserInterface',    \n            useExisting: UserService,        \n        },\n        UserService,\n        CreateUserProvider\n    ],\n    controllers: [UserController],\n    exports: [\n        UserService,\n        'UserInterface'\n    ],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/providers/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                findUserByEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, createUserProvider: CreateUserProvider)\n                    \n                \n                        \n                            \n                                Defined in src/user/providers/user.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createUserProvider\n                                                  \n                                                        \n                                                                        CreateUserProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/providers/user.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/providers/user.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, forwardRef, Inject, Injectable, InternalServerErrorException, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User } from '../user.schema';\nimport { Model } from 'mongoose';\nimport { CreateUserDto } from '../dtos/create-user.dto';\nimport { HashingProvider } from 'src/auth/providers/hashing.provider';\nimport { read } from 'fs';\nimport { UserInterface } from '../interfaces/user.interface';\nimport { CreateUserProvider } from './create-user.provider';\n\n@Injectable()\nexport class UserService implements UserInterface {\n\n    constructor(\n        @InjectModel(User.name)\n        private readonly userModel: Model,\n\n        private readonly createUserProvider: CreateUserProvider,\n    ) {}\n\n    async createUser(createUserDto: CreateUserDto): Promise {\n        return await this.createUserProvider.createUser(createUserDto);\n    }\n\n    async findUserByEmail(email: string): Promise {\n        const user = await this.userModel.findOne({ email }).exec();\n        if (!user) {\n            throw new NotFoundException('User not found');\n        }\n        return user;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dtos/signin.dto.ts\n            \n            class\n            SignInDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/interfaces/auth.interface.ts\n            \n            interface\n            AuthInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/providers/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/providers/bcrypt.provider.ts\n            \n            injectable\n            BcryptProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/providers/hashing.provider.ts\n            \n            injectable\n            HashingProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/providers/signin.provider.ts\n            \n            injectable\n            SignInProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/swagger/swagger.config.ts\n            \n            variable\n            swaggerConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/swagger/swagger.ts\n            \n            function\n            setupSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/interfaces/user.interface.ts\n            \n            interface\n            UserInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/providers/create-user.provider.ts\n            \n            injectable\n            CreateUserProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/providers/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/user/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.26\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/mapped-types : ^2.1.0\n        \n            @nestjs/mongoose : ^11.0.3\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/serve-static : ^5.0.3\n        \n            @nestjs/swagger : ^11.2.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            bcrypt : ^6.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.2\n        \n            mongoose : ^8.15.1\n        \n            pg : ^8.16.0\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.24\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            setupSwagger   (src/.../swagger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/swagger/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupSwagger\n                        \n                    \n                \n            \n            \n                \nsetupSwagger(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g @nestjs/mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthInterface \n\nAuthInterface \n\nAuthInterface  -->\n\nAuthModule->AuthInterface \n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nHashingProvider \n\nHashingProvider \n\nHashingProvider  -->\n\nAuthModule->HashingProvider \n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserInterface \n\nUserInterface \n\nUserInterface  -->\n\nUserModule->UserInterface \n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nSignInProvider\n\nSignInProvider\n\nAuthModule -->\n\nSignInProvider->AuthModule\n\n\n\n\n\nCreateUserProvider\n\nCreateUserProvider\n\nUserModule -->\n\nCreateUserProvider->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            swaggerConfig   (src/.../swagger.config.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/swagger/swagger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        swaggerConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder()\n  .setTitle('TDA API')\n  .setDescription('Use the base API URL as http://localhost:3000')\n  .setVersion('1.0')\n  .setLicense(\n    'MIT License',\n    'https://github.com/git/git-scm.com/blob/main/MIT-LICENSE.txt',\n  )\n  .addBearerAuth(\n    {\n      type: 'http',\n      scheme: 'bearer',\n      bearerFormat: 'JWT',\n      name: 'Authorization',\n      description: 'Enter JWT token',\n      in: 'header',\n    },\n    'bearer-token',\n  )\n  .build()\n                    \n                \n\n\n        \n    \n\n    src/user/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
