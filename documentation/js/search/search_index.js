var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AccessTokenGuard.html",[0,2.386,1,2.18]],["body/guards/AccessTokenGuard.html",[1,2.587,2,2.169,3,0.218,4,0.195,5,0.195,6,4.566,7,3.645,8,2.453,9,0.293,10,0.984,11,1.652,12,4.566,13,2.167,14,4.169,15,1.587,16,2.883,17,5.05,18,4.167,19,4.566,20,0.736,21,2.883,22,1.228,23,0.023,24,0.736,25,0.636,26,1.228,27,3.547,28,4.039,29,2.883,30,3.547,31,0.984,32,1.406,33,4.169,34,4.157,35,2.883,36,0.818,37,3.547,38,0.499,39,1.244,40,0.926,41,3.686,42,0.602,43,1.789,44,1.789,45,1.958,46,2.883,47,2.453,48,2.169,49,2.883,50,0.218,51,0.087,52,1.527,53,1.493,54,2.453,55,4.169,56,2.883,57,1.706,58,2.883,59,4.031,60,2.453,61,2.883,62,2.057,63,1.587,64,1.958,65,4.169,66,1.167,67,2.883,68,2.883,69,2.453,70,1.958,71,1.249,72,1.422,73,2.883,74,2.883,75,0.013,76,0.013]],["title/interfaces/ActiveUserData.html",[77,1.423,78,2.386]],["body/interfaces/ActiveUserData.html",[3,0.341,4,0.305,5,0.305,9,0.457,23,0.023,25,0.732,36,1.207,50,0.341,75,0.018,76,0.018,77,1.825,78,3.829,79,2.576,80,3.834,81,1.956,82,3.834,83,2.284,84,2.923,85,5.487,86,5.639,87,4.243,88,4.631,89,2.433]],["title/controllers/AppController.html",[90,1.423,91,2.386]],["body/controllers/AppController.html",[3,0.347,4,0.309,5,0.309,9,0.465,10,1.345,20,0.688,23,0.023,31,1.081,36,1.117,38,0.479,42,0.957,50,0.347,51,0.138,53,1.64,71,1.371,75,0.018,76,0.018,90,2.306,91,3.867,92,1.854,93,3.896,94,5.518,95,1.743,96,4.579,97,3.544,98,3.896,99,4.579,100,4.579]],["title/modules/AppModule.html",[101,1.423,102,2.386]],["body/modules/AppModule.html",[1,2.527,3,0.211,4,0.189,5,0.189,7,1.895,11,0.941,23,0.023,38,0.572,39,1.204,42,0.583,43,1.731,44,1.731,45,1.895,50,0.211,51,0.084,72,1.377,75,0.013,76,0.013,91,3.265,92,1.649,97,3.355,98,2.374,101,1.947,102,4.561,103,1.377,104,1.377,105,1.595,106,1.595,107,1.377,108,2.749,109,1.595,110,2.374,111,2.374,112,2.374,113,3.355,114,3.642,115,3.642,116,3.355,117,2.328,118,1.595,119,1.479,120,2.791,121,2.983,122,2.791,123,1.895,124,1.062,125,2.791,126,2.791,127,3.465,128,5.286,129,2.791,130,2.374,131,2.1,132,2.374,133,2.791,134,2.791,135,2.791,136,4.072,137,2.1,138,2.765,139,2.791,140,2.791,141,2.374,142,2.374,143,2.791,144,2.791,145,2.791,146,2.791,147,2.791,148,2.791,149,2.791,150,2.791,151,2.791,152,2.374,153,2.791,154,2.374,155,2.791,156,2.791,157,2.791,158,2.791,159,2.791,160,2.791,161,2.374,162,2.374,163,1.731,164,2.374]],["title/injectables/AppService.html",[40,0.781,97,2.008]],["body/injectables/AppService.html",[3,0.361,4,0.322,5,0.322,9,0.484,10,1.379,20,0.717,23,0.023,31,1.127,36,1.146,38,0.401,40,1.298,42,0.997,50,0.361,51,0.143,71,1.429,75,0.019,76,0.019,94,5.598,97,3.339,165,2.059,166,4.059,167,4.771,168,4.771,169,4.771,170,4.771]],["title/controllers/AuthController.html",[90,1.423,171,2.386]],["body/controllers/AuthController.html",[3,0.222,4,0.198,5,0.198,9,0.297,10,0.995,11,2.012,13,1.605,15,1.114,20,0.634,22,1.057,23,0.023,24,0.634,25,0.702,26,1.057,31,0.995,38,0.529,39,1.263,42,0.612,50,0.222,51,0.088,53,1.51,66,1.185,71,1.263,75,0.013,76,0.013,81,2,84,1.819,90,1.185,92,1.185,95,1.605,171,2.863,172,2.49,173,1.988,174,2.234,175,4.216,176,2.863,177,2.927,178,3.033,179,2.927,180,2.927,181,2.927,182,3.172,183,2.864,184,4.216,185,2.203,186,4.216,187,3.587,188,3.587,189,2.927,190,2.863,191,1.988,192,2.927,193,4.216,194,2.927,195,3.035,196,2.927,197,1.988,198,1.988,199,2.824,200,2.49,201,3.718,202,3.355,203,3.355,204,1.185,205,1.988,206,2.277,207,2.49,208,2.203,209,1.816,210,2.927,211,1.551,212,2.927,213,1.816,214,2.927,215,2.203,216,2.927,217,3.172,218,2.927,219,3.172,220,2.203,221,2.927,222,2.927,223,2.927,224,2.49,225,2.927,226,2.927]],["title/interfaces/AuthInterface.html",[77,1.423,227,2.008]],["body/interfaces/AuthInterface.html",[3,0.351,4,0.313,5,0.313,9,0.47,10,1.355,20,0.697,22,1.162,23,0.023,24,0.697,25,0.602,26,1.162,31,1.094,32,1.935,38,0.482,50,0.351,75,0.018,76,0.018,77,1.877,79,2.65,81,1.473,176,3.897,191,3.897,195,3.547,205,3.147,227,3.28,228,3.943,229,4.635,230,3.488]],["title/modules/AuthModule.html",[101,1.423,113,2.008]],["body/modules/AuthModule.html",[3,0.245,4,0.219,5,0.219,23,0.023,38,0.559,42,0.676,43,2.008,44,2.008,45,2.197,50,0.245,51,0.097,75,0.014,76,0.014,92,1.833,101,2.114,103,1.596,104,1.596,105,1.85,106,1.85,107,1.596,108,2.984,109,2.984,113,3.841,116,2.588,117,2.588,118,1.85,119,1.714,121,2.008,127,2.753,142,2.753,161,2.753,162,2.753,163,2.809,164,2.753,171,3.545,199,3.906,200,2.753,227,3.619,231,2.753,232,2.753,233,2.753,234,2.976,235,3.525,236,3.236,237,2.809,238,3.236,239,3.236,240,3.074,241,3.236,242,3.236,243,2.753,244,2.753,245,2.197]],["title/injectables/AuthService.html",[40,0.781,199,2.008]],["body/injectables/AuthService.html",[3,0.294,4,0.263,5,0.263,9,0.395,10,1.211,11,1.936,13,1.48,15,1.952,20,0.771,22,1.286,23,0.023,24,0.771,25,0.666,26,1.286,31,0.918,32,1.73,38,0.533,39,1.678,40,1.14,42,0.813,50,0.294,51,0.117,52,2.061,53,1.393,66,1.575,71,1.165,75,0.016,76,0.016,81,1.236,165,1.678,176,3.483,191,3.483,195,3.361,199,2.932,205,2.641,227,2.932,230,2.927,235,3.724,237,2.413,243,3.309,246,3.309,247,3.889,248,3.889,249,3.889,250,3.309,251,3.889,252,3.889]],["title/guards/AuthenticationGuard.html",[0,2.386,138,2.386]],["body/guards/AuthenticationGuard.html",[0,1.757,1,3.671,2,3.462,3,0.196,4,0.175,5,0.175,7,1.757,9,0.263,10,0.909,11,1.552,12,5.172,13,2.252,15,1.466,20,0.579,22,0.966,23,0.023,24,0.579,25,0.597,26,0.966,27,3.277,28,3.835,30,2.201,31,0.909,32,1.299,38,0.48,40,0.856,41,2.898,42,0.541,50,0.196,51,0.078,52,1.371,53,2.119,57,1.62,62,1.276,63,1.466,66,1.048,71,0.775,72,2.514,75,0.012,76,0.012,81,1.224,83,1.048,131,2.898,137,1.947,138,2.615,141,2.201,174,1.371,211,1.371,213,1.605,253,2.201,254,4.601,255,3.851,256,2.587,257,5.712,258,2.587,259,2.587,260,2.898,261,1.757,262,1.605,263,2.587,264,2.201,265,3.851,266,2.587,267,3.277,268,4.601,269,3.277,270,2.587,271,3.851,272,3.851,273,3.277,274,2.587,275,2.587,276,2.587,277,2.587,278,2.587,279,2.587,280,2.587,281,3.461,282,2.587,283,2.587,284,2.587,285,2.587,286,2.201,287,2.201,288,2.587,289,2.201,290,2.587,291,2.587,292,2.587,293,2.587,294,2.587,295,2.587,296,2.587,297,2.587,298,2.587,299,2.587,300,2.587,301,2.201]],["title/injectables/BcryptProvider.html",[40,0.781,240,2.386]],["body/injectables/BcryptProvider.html",[3,0.268,4,0.239,5,0.239,9,0.359,10,1.137,11,2.138,20,0.724,22,1.207,23,0.023,24,0.724,25,0.625,26,1.207,31,1.137,32,1.981,36,1.313,38,0.46,40,1.07,42,0.739,50,0.268,51,0.106,52,1.875,57,1.124,66,1.433,71,1.442,75,0.015,76,0.015,152,5.393,165,1.527,234,2.218,240,3.269,302,3.01,303,4.656,304,4.096,305,3.01,306,5.393,307,4.997,308,3.538,309,4.656,310,4.096,311,3.538,312,4.096,313,3.01,314,3.538,315,5.472,316,3.538,317,3.538,318,3.538]],["title/classes/CreateEmployeeDto.html",[51,0.106,319,1.861]],["body/classes/CreateEmployeeDto.html",[3,0.277,4,0.248,5,0.248,9,0.372,20,0.935,23,0.023,24,0.837,25,0.807,36,1.337,38,0.414,50,0.277,51,0.148,75,0.016,76,0.016,83,1.996,87,4.192,95,2.367,204,1.484,319,2.612,320,1.581,321,5.449,322,2.757,323,4.739,324,4.739,325,4.739,326,4.484,327,3.664,328,3.664,329,3.664,330,3.664,331,3.664,332,3.664,333,4.349,334,4.194,335,4.349,336,4.223,337,2.273]],["title/classes/CreateProductDto.html",[51,0.106,338,1.861]],["body/classes/CreateProductDto.html",[3,0.315,4,0.281,5,0.281,9,0.422,20,0.805,23,0.023,24,0.891,25,0.696,36,1.052,38,0.45,50,0.315,51,0.161,75,0.017,76,0.017,83,2.17,88,4.712,95,2.04,183,2.84,204,1.685,320,1.795,326,3.13,333,3.639,335,3.639,336,3.639,337,2.581,338,2.84,339,5.044,340,3.539,341,5.514,342,4.16,343,5.359,344,5.359,345,4.16,346,4.16,347,5.359,348,5.359,349,2.052]],["title/classes/CreateUserDto.html",[51,0.106,178,1.733]],["body/classes/CreateUserDto.html",[3,0.292,4,0.261,5,0.261,9,0.392,20,0.915,23,0.023,25,0.79,36,1.321,38,0.429,50,0.292,51,0.154,75,0.016,76,0.016,83,2.068,84,2.469,95,2.316,178,2.519,204,1.564,208,4.762,320,1.667,326,2.907,333,4.298,334,4.344,335,3.884,336,3.468,337,2.397,350,3.286,351,4.867,352,3.549,353,4.867,354,3.863,355,3.863,356,3.863,357,3.863,358,3.863,359,3.863,360,3.863,361,4.344,362,3.286,363,3.863]],["title/injectables/CreateUserProvider.html",[40,0.781,364,2.008]],["body/injectables/CreateUserProvider.html",[3,0.239,4,0.214,5,0.214,9,0.321,10,1.052,11,1.739,13,1.696,15,1.696,20,0.67,22,1.117,23,0.023,24,0.67,25,0.578,26,1.117,31,0.747,32,1.503,38,0.515,39,1.365,40,0.99,42,0.661,50,0.239,51,0.095,53,1.596,57,1.779,62,2.198,63,1.963,64,2.148,66,2.089,70,2.148,71,0.948,75,0.014,76,0.014,81,1.416,84,1.923,124,1.204,165,1.365,178,3.103,187,2.692,188,2.692,209,1.963,234,2.959,237,1.963,281,3.026,352,1.963,364,2.547,365,4.388,366,2.692,367,3.353,368,2.692,369,3.802,370,3.164,371,3.791,372,3.353,373,3.164,374,2.692,375,2.692,376,2.148,377,2.148,378,1.561,379,2.692,380,1.365,381,2.692,382,3.164,383,4.456,384,3.164,385,3.164,386,4.456,387,3.164,388,3.164,389,3.164,390,3.164,391,3.164,392,1.963]],["title/classes/Employee.html",[51,0.106,393,1.861]],["body/classes/Employee.html",[3,0.252,4,0.225,5,0.225,9,0.338,20,0.904,23,0.023,24,0.797,25,0.868,36,1.37,38,0.388,50,0.35,51,0.1,57,1.058,72,3.299,75,0.015,76,0.015,83,1.87,87,3.99,95,2.289,124,1.268,320,1.437,323,4.511,324,4.511,325,4.511,378,1.643,393,2.447,394,2.506,395,4.525,396,5.032,397,3.331,398,4.871,399,3.331,400,3.331,401,3.331,402,3.331,403,4.683,404,2.64,405,2.506,406,3.475,407,2.066,408,2.262,409,2.834]],["title/controllers/EmployeeController.html",[90,1.423,410,2.386]],["body/controllers/EmployeeController.html",[3,0.128,4,0.115,5,0.115,9,0.172,10,0.653,11,2.066,13,0.645,15,0.645,20,0.67,22,1.015,23,0.023,24,0.608,25,0.621,26,1.015,31,1.053,34,1.88,36,1.069,38,0.424,39,0.732,42,0.354,50,0.128,51,0.051,53,0.607,57,1.286,59,2.382,62,2.2,63,1.822,64,1.151,66,1.806,70,1.151,71,1.336,75,0.009,76,0.009,89,2.351,90,0.687,92,0.687,95,1.698,173,1.151,174,0.898,182,2.083,183,3.35,185,3.046,190,3.029,197,1.88,198,1.88,201,2.639,202,3.25,203,3.805,204,0.687,211,0.898,213,1.052,217,3.356,219,4.099,220,3.799,261,1.151,262,1.052,281,1.151,301,2.984,319,2.675,380,0.732,392,1.717,393,3.524,410,1.88,411,1.442,412,2.083,413,2.083,414,3.046,415,2.083,416,2.083,417,1.276,418,1.442,419,2.984,420,1.695,421,1.695,422,2.355,423,2.355,424,2.355,425,1.695,426,1.276,427,1.442,428,2.382,429,2.355,430,4.48,431,2.984,432,4.072,433,4.105,434,1.695,435,1.442,436,3.444,437,1.695,438,5.049,439,1.695,440,1.276,441,1.442,442,1.695,443,1.276,444,3.114,445,1.442,446,2.355,447,1.695,448,1.695,449,2.355,450,1.695,451,1.442,452,1.442,453,1.151,454,1.695,455,1.88,456,0.969,457,2.005,458,1.442,459,1.442,460,1.276,461,1.695,462,1.695,463,1.695,464,2.984,465,2.984,466,1.695,467,1.695,468,1.442,469,1.695,470,1.695,471,3.507,472,1.695,473,1.695,474,1.052,475,1.151,476,1.442,477,1.695,478,3.507,479,1.695,480,1.695,481,1.442,482,1.695,483,2.768,484,1.695,485,1.442]],["title/interfaces/EmployeeInterface.html",[77,1.423,457,2.008]],["body/interfaces/EmployeeInterface.html",[3,0.265,4,0.236,5,0.236,9,0.355,10,1.127,20,0.919,22,1.465,23,0.023,24,0.878,25,0.758,26,1.465,31,1.444,32,2.277,36,1.31,38,0.457,50,0.265,75,0.015,76,0.015,77,1.415,79,1.998,89,2.347,319,3.241,380,1.508,393,1.852,412,3.592,413,3.592,414,4.397,415,3.592,416,3.592,417,3.592,426,3.592,440,3.592,443,3.592,444,3.695,455,3.242,456,1.998,457,2.729,486,2.973,487,3.495,488,3.495,489,3.495,490,3.495,491,3.495,492,2.63]],["title/modules/EmployeeModule.html",[101,1.423,114,2.18]],["body/modules/EmployeeModule.html",[3,0.298,4,0.266,5,0.266,23,0.023,24,0.593,38,0.535,42,0.824,50,0.298,51,0.119,75,0.017,76,0.017,92,2.096,101,2.34,103,1.945,104,1.945,105,2.254,106,2.254,107,1.945,108,3.303,109,2.254,114,4.057,117,2.959,118,2.254,119,2.089,121,2.447,123,2.678,124,1.501,163,2.447,245,2.678,393,2.089,404,2.254,408,3.515,410,3.924,457,2.254,492,2.967,493,3.355,494,3.355,495,4.135,496,3.943,497,3.943,498,3.943,499,2.967,500,3.943]],["title/injectables/EmployeeServiceImpl.html",[40,0.781,495,2.18]],["body/injectables/EmployeeServiceImpl.html",[3,0.21,4,0.187,5,0.187,9,0.281,10,0.956,11,2.222,13,1.054,15,1.542,20,0.88,22,1.405,23,0.023,24,0.842,25,0.727,26,1.405,31,1.323,32,2.167,36,1.241,38,0.508,40,0.9,42,0.579,50,0.21,51,0.083,52,1.468,53,0.992,57,0.88,63,1.542,71,1.679,72,1.367,75,0.013,76,0.013,89,2.066,124,1.054,165,1.196,319,2.97,369,3.577,376,1.881,378,1.367,380,1.196,393,1.468,412,3.048,413,3.048,414,3.964,415,3.048,416,3.048,417,3.048,426,3.048,440,3.048,443,3.048,444,3.544,455,2.751,456,1.584,457,2.315,458,2.357,492,2.085,495,2.513,501,2.357,502,2.77,503,2.77,504,4.051,505,2.77,506,2.77,507,2.77,508,2.77,509,2.77,510,2.77,511,2.77,512,2.77,513,2.77,514,2.77,515,2.77,516,2.77,517,2.085,518,2.77]],["title/injectables/HashingProvider.html",[40,0.781,234,1.619]],["body/injectables/HashingProvider.html",[3,0.3,4,0.267,5,0.267,9,0.402,10,1.225,20,0.78,22,1.301,23,0.023,24,0.78,25,0.673,26,1.301,31,1.225,32,2.072,36,1.343,38,0.333,40,1.153,42,0.827,50,0.3,51,0.119,75,0.017,76,0.017,165,1.708,234,2.391,303,4.925,304,4.414,305,3.367,306,5.569,307,4.925,309,4.925,310,4.414,519,3.367,520,6.67,521,3.957,522,3.957]],["title/classes/Product.html",[51,0.106,349,1.733]],["body/classes/Product.html",[3,0.309,4,0.276,5,0.276,9,0.415,20,0.796,23,0.023,24,0.883,25,0.807,36,1.22,38,0.445,50,0.401,51,0.123,57,1.298,72,3.068,75,0.017,76,0.017,83,2.145,88,4.68,95,2.016,124,1.555,320,1.763,341,5.001,349,2.613,378,2.015,395,3.986,396,4.68,403,4.423,404,3.028,405,3.074,406,3.986,407,2.535,523,3.074,524,4.085,525,4.085,526,2.774,527,3.475]],["title/controllers/ProductController.html",[90,1.423,528,2.386]],["body/controllers/ProductController.html",[3,0.134,4,0.119,5,0.119,9,0.179,10,0.675,11,2.085,13,0.671,15,0.671,20,0.684,22,1.039,23,0.023,24,0.623,25,0.538,26,1.039,31,1.075,34,1.941,36,1.084,38,0.431,39,0.761,42,0.368,50,0.134,51,0.053,53,0.632,57,1.317,59,2.447,62,2.044,63,1.855,66,1.678,71,1.364,75,0.009,76,0.009,89,2.384,90,0.714,92,0.714,95,1.733,173,1.198,174,0.935,182,2.151,183,3.377,185,3.118,190,3.092,197,1.941,198,1.941,202,3.31,203,3.854,204,0.714,211,0.935,213,1.094,217,3.426,219,4.157,220,3.863,261,1.198,262,1.094,338,2.583,349,3.3,380,0.761,392,1.773,418,1.501,419,3.066,422,2.432,423,2.432,424,2.432,427,1.501,428,2.447,429,3.066,430,4.548,431,3.066,432,4.147,433,4.146,435,1.501,436,3.525,441,1.501,445,1.501,446,2.432,449,2.432,451,1.501,452,1.501,453,1.198,456,1.008,459,1.501,460,1.327,464,3.066,465,3.066,468,1.501,474,1.094,475,1.198,476,1.501,481,1.501,485,1.501,528,1.941,529,1.501,530,2.151,531,2.151,532,3.118,533,2.151,534,2.151,535,1.327,536,1.764,537,1.764,538,1.327,539,1.764,540,1.764,541,5.133,542,1.764,543,1.327,544,1.764,545,1.327,546,3.056,547,1.764,548,2.06,549,1.501,550,1.198,551,1.327,552,1.764,553,1.764,554,1.764,555,1.764,556,1.764,557,1.764,558,1.764,559,3.604,560,1.764,561,1.764,562,1.764,563,3.604,564,1.764,565,1.764,566,2.858,567,1.764]],["title/interfaces/ProductInterface.html",[77,1.423,548,2.008]],["body/interfaces/ProductInterface.html",[3,0.265,4,0.236,5,0.236,9,0.355,10,1.127,20,0.919,22,1.465,23,0.023,24,0.878,25,0.758,26,1.465,31,1.444,32,2.277,36,1.31,38,0.457,50,0.265,75,0.015,76,0.015,77,1.415,79,1.998,89,2.347,338,3.241,349,1.724,380,1.508,456,1.998,530,3.592,531,3.592,532,4.397,533,3.592,534,3.592,535,3.592,538,3.592,543,3.592,545,3.592,546,3.695,548,2.729,550,2.373,551,2.63,568,2.973,569,3.495,570,3.495,571,3.495,572,3.495,573,3.495,574,2.63]],["title/modules/ProductModule.html",[101,1.423,115,2.18]],["body/modules/ProductModule.html",[3,0.298,4,0.266,5,0.266,23,0.023,24,0.593,38,0.535,42,0.824,50,0.298,51,0.119,75,0.017,76,0.017,92,2.096,101,2.34,103,1.945,104,1.945,105,2.254,106,2.254,107,1.945,108,3.303,109,2.254,115,4.057,117,2.959,118,2.254,119,2.089,121,2.447,123,2.678,124,1.501,163,2.447,245,2.678,349,1.945,404,2.254,499,2.967,526,3.515,528,3.924,548,2.254,574,2.967,575,3.355,576,3.355,577,4.135,578,3.943,579,3.943,580,3.943,581,3.943]],["title/injectables/ProductServiceImpl.html",[40,0.781,577,2.18]],["body/injectables/ProductServiceImpl.html",[3,0.208,4,0.186,5,0.186,9,0.279,10,0.951,11,2.276,13,1.047,15,1.534,20,0.878,22,1.401,23,0.023,24,0.84,25,0.725,26,1.401,31,1.319,32,2.164,36,1.238,38,0.507,40,0.895,42,0.575,50,0.208,51,0.083,52,1.457,53,0.985,57,0.874,63,1.534,71,1.674,72,1.357,75,0.013,76,0.013,89,2.058,124,1.047,165,1.187,338,2.961,349,1.357,369,3.565,376,1.868,378,1.357,380,1.187,456,1.572,517,2.069,530,3.032,531,3.032,532,3.95,533,3.032,534,3.032,535,3.032,538,3.032,543,3.032,545,3.032,546,3.537,548,2.303,549,2.34,550,1.868,551,2.069,574,2.069,577,2.5,582,2.34,583,2.75,584,2.75,585,4.029,586,2.75,587,2.75,588,2.75,589,2.75,590,2.75,591,2.75,592,2.75,593,2.75,594,2.75,595,2.75,596,2.75,597,2.75,598,2.75]],["title/classes/SignInDto.html",[51,0.106,195,1.861]],["body/classes/SignInDto.html",[3,0.332,4,0.296,5,0.296,9,0.445,20,0.833,23,0.023,25,0.719,36,1.253,38,0.466,50,0.332,51,0.167,75,0.018,76,0.018,83,2.245,84,2.623,95,2.11,195,2.937,204,1.776,320,1.892,333,4.127,335,4.127,336,3.764,337,2.72,352,3.771,361,4.715,599,3.73,600,4.385,601,4.385,602,4.385,603,4.385]],["title/injectables/SignInProvider.html",[40,0.781,235,2.008]],["body/injectables/SignInProvider.html",[3,0.213,4,0.19,5,0.19,9,0.286,10,0.968,11,1.631,13,2.021,15,1.561,17,5.172,18,4.114,19,4.518,20,0.616,22,1.028,23,0.023,24,0.616,25,0.532,26,1.028,31,0.665,32,1.383,38,0.523,39,1.216,40,0.911,41,2.121,42,0.589,43,1.749,44,1.749,45,1.914,50,0.213,51,0.085,53,1.902,54,2.398,57,1.537,62,2.385,63,1.841,64,1.914,66,1.958,70,1.914,71,0.844,75,0.013,76,0.013,81,1.537,84,2.087,85,2.398,165,1.216,176,2.785,191,2.785,195,2.99,205,1.914,206,2.714,207,2.398,215,2.121,230,2.121,234,2.801,235,2.345,244,2.398,250,2.398,281,1.914,287,3.49,313,2.398,352,2.545,428,1.914,604,2.398,605,2.818,606,2.818,607,2.818,608,2.818,609,4.102,610,4.836,611,2.818,612,2.818,613,2.818,614,2.818,615,2.818,616,2.818,617,2.818,618,2.818,619,2.818,620,2.818,621,2.818,622,2.818,623,2.818,624,2.818,625,2.818,626,2.818,627,2.818,628,2.818,629,2.818,630,3.49,631,2.398,632,2.398]],["title/classes/UpdateEmployeeDto.html",[51,0.106,444,2.008]],["body/classes/UpdateEmployeeDto.html",[3,0.377,4,0.337,5,0.337,23,0.022,38,0.504,50,0.377,51,0.15,75,0.019,76,0.019,204,2.017,319,2.639,320,2.149,322,3.748,392,3.09,407,3.72,444,3.427,455,3.382,633,4.237,634,5.996,635,4.237]],["title/classes/UpdateProductDto.html",[51,0.106,546,2.008]],["body/classes/UpdateProductDto.html",[3,0.379,4,0.338,5,0.338,23,0.022,38,0.505,50,0.379,51,0.15,75,0.019,76,0.019,204,2.026,320,2.159,338,2.65,392,3.104,407,3.73,546,3.437,550,3.397,635,4.256,636,4.256,637,4.256,638,6.012]],["title/classes/User.html",[51,0.106,81,1.116]],["body/classes/User.html",[3,0.265,4,0.237,5,0.237,9,0.356,20,0.879,23,0.023,25,0.84,36,1.325,38,0.402,50,0.362,51,0.105,57,1.114,72,3.332,75,0.015,76,0.015,81,1.52,83,1.937,84,2.35,95,2.227,124,1.334,320,1.513,351,4.633,352,3.379,353,4.633,362,4.07,378,1.729,395,4.098,396,4.868,398,4.978,403,4.608,404,2.735,405,2.638,406,3.6,407,2.175,639,2.638,640,3.505,641,3.505,642,4.784,643,3.505,644,4.784,645,3.505,646,3.505,647,2.38,648,2.982]],["title/controllers/UserController.html",[90,1.423,649,2.386]],["body/controllers/UserController.html",[3,0.222,4,0.198,5,0.198,9,0.298,10,0.997,11,2.076,13,1.117,15,1.117,20,0.635,22,0.736,23,0.023,24,0.441,25,0.381,26,0.736,31,0.997,36,1.062,38,0.502,39,1.267,42,0.613,50,0.222,51,0.088,53,1.051,57,1.572,62,2.441,63,1.883,66,2.004,71,1.482,75,0.013,76,0.013,81,2.038,84,2.135,89,2.336,90,1.189,92,1.189,95,1.608,173,1.993,174,1.555,178,1.448,190,2.868,197,1.993,198,1.993,201,2.208,202,1.993,203,1.993,204,1.189,206,2.28,209,1.821,211,1.555,213,1.821,215,2.208,224,2.497,261,1.993,262,1.821,380,1.267,433,3.36,453,1.993,460,2.208,474,1.821,475,1.993,649,2.868,650,2.497,651,4.073,652,3.178,653,2.935,654,2.935,655,2.208,656,4.224,657,2.935,658,2.935,659,2.497,660,2.935,661,2.935,662,2.935,663,2.935,664,4.948,665,2.935,666,3.593,667,2.935,668,2.935,669,2.935,670,4.879,671,2.935,672,2.497]],["title/interfaces/UserInterface.html",[77,1.423,206,1.619]],["body/interfaces/UserInterface.html",[3,0.29,4,0.259,5,0.259,9,0.389,10,1.2,20,0.912,22,1.429,23,0.023,24,0.857,25,0.74,26,1.429,31,1.433,32,2.267,36,1.273,38,0.427,50,0.29,75,0.016,76,0.016,77,1.554,79,2.193,81,1.219,84,1.656,89,1.656,178,3.115,206,2.342,209,2.381,367,3.825,372,3.825,377,2.605,380,1.656,651,4.567,652,3.825,655,3.825,673,3.264,674,4.325,675,3.837,676,3.837,677,4.325,678,3.837,679,3.837,680,3.264]],["title/modules/UserModule.html",[101,1.423,116,2.008]],["body/modules/UserModule.html",[3,0.259,4,0.231,5,0.231,23,0.023,24,0.514,38,0.54,42,0.715,50,0.259,51,0.103,75,0.015,76,0.015,81,1.087,92,1.905,101,2.178,103,1.687,104,1.687,105,1.956,106,1.956,107,1.687,108,3.074,109,3.074,113,2.689,116,3.843,117,2.689,118,1.956,119,1.813,121,2.122,123,2.323,124,1.302,163,2.122,206,2.962,237,2.919,245,2.323,364,3.587,377,2.323,404,1.956,499,2.574,647,3.195,649,3.652,681,2.91,682,2.91,683,2.91,684,4.277,685,3.421,686,3.421,687,3.421,688,3.421,689,2.91,690,2.91,691,3.421]],["title/injectables/UserServiceImpl.html",[40,0.781,684,2.18]],["body/injectables/UserServiceImpl.html",[3,0.188,4,0.168,5,0.168,9,0.252,10,0.881,11,2.171,13,1.42,15,1.42,20,0.804,22,1.251,23,0.023,24,0.75,25,0.648,26,1.251,31,1.178,32,2.024,36,1.103,38,0.516,39,1.07,40,0.829,42,0.518,50,0.188,51,0.075,52,1.314,53,1.336,57,1.586,62,2.213,63,1.707,66,2.021,71,1.495,75,0.012,76,0.012,81,1.787,84,1.936,89,1.07,124,0.944,165,1.07,178,2.64,206,1.719,209,1.539,234,1.143,237,1.539,269,2.11,364,3.335,367,2.808,368,2.11,369,3.389,371,3.174,372,2.808,374,2.11,375,2.11,376,1.684,377,1.684,378,1.223,379,2.11,380,1.07,381,2.11,428,1.684,433,3.046,453,1.684,474,1.539,475,1.684,517,1.866,630,3.174,631,2.11,632,2.11,651,3.755,652,2.808,655,2.808,659,2.11,666,3.174,670,4.553,672,2.11,674,3.174,677,3.174,680,2.11,684,2.315,689,2.11,690,2.11,692,2.11,693,2.48,694,2.48,695,2.48,696,2.48,697,2.48,698,2.11,699,2.48,700,2.48,701,2.48,702,2.48,703,2.48,704,2.48,705,2.48,706,2.48,707,2.48]],["title/coverage.html",[708,3.605]],["body/coverage.html",[0,2.517,1,1.525,5,0.166,6,2.092,7,1.67,8,2.092,23,0.023,25,0.319,40,1.361,48,1.85,51,0.184,63,0.936,75,0.012,76,0.012,77,2.159,78,1.67,80,2.092,81,1.178,82,2.092,90,2.159,91,1.67,93,2.092,97,1.405,107,1.213,138,1.67,166,2.092,171,1.67,172,2.092,174,1.303,178,1.213,195,1.303,199,1.405,206,1.133,208,1.85,227,1.405,228,2.092,234,1.133,235,1.405,240,1.67,246,2.092,253,2.092,260,1.85,302,2.092,319,1.303,321,2.092,322,2.789,338,1.303,339,2.092,340,2.092,349,1.213,350,2.092,364,1.405,365,2.092,366,2.092,393,1.303,394,2.789,408,1.67,410,1.67,411,2.092,444,1.405,457,1.405,474,4.438,486,2.092,495,1.525,501,2.092,519,2.092,523,2.789,526,1.67,528,1.67,529,2.092,546,1.405,548,1.405,568,2.092,577,1.525,582,2.092,599,2.092,604,2.092,633,2.092,636,2.092,637,2.092,639,2.789,647,1.67,649,1.67,650,2.092,673,2.092,684,1.525,692,2.092,708,1.85,709,2.092,710,2.459,711,2.459,712,4.462,713,6.243,714,2.092,715,5.987,716,6.426,717,2.092,718,2.092,719,2.092,720,3.154,721,2.459,722,4.968,723,2.459,724,2.459,725,5.817,726,3.707,727,2.092,728,3.707,729,2.092,730,2.092,731,2.092,732,2.092,733,2.459,734,2.459]],["title/dependencies.html",[104,2.084,735,2.497]],["body/dependencies.html",[23,0.023,42,0.892,43,2.649,44,2.649,47,3.632,51,0.164,75,0.017,76,0.017,104,2.106,124,1.625,130,3.632,131,3.213,137,3.213,204,1.729,264,3.632,312,3.632,337,2.649,378,2.106,736,4.269,737,4.269,738,6.002,739,4.269,740,5.449,741,4.269,742,4.269,743,4.269,744,4.269,745,4.269,746,4.269,747,4.269,748,4.269,749,4.269,750,4.269,751,4.269,752,4.269,753,4.269,754,4.269,755,4.269,756,4.269,757,4.269,758,4.269,759,4.269,760,4.269,761,4.269]],["title/miscellaneous/enumerations.html",[762,1.678,763,3.594]],["body/miscellaneous/enumerations.html",[9,0.541,23,0.02,75,0.02,76,0.02,211,3.308,262,3.308,762,3.047,763,4.535,764,5.331,765,6.243,766,4.535,767,5.331]],["title/miscellaneous/functions.html",[762,1.678,768,3.594]],["body/miscellaneous/functions.html",[9,0.517,22,1.277,23,0.021,24,0.765,25,0.661,26,1.277,75,0.019,76,0.019,107,3.203,727,4.332,731,4.332,732,5.169,762,2.911,768,4.332,769,5.092,770,5.092,771,5.092,772,6.076,773,5.092]],["title/index.html",[9,0.298,774,2.935,775,2.935]],["body/index.html",[4,0.174,23,0.022,75,0.012,76,0.012,119,3.019,132,2.186,183,1.362,286,2.186,289,4.847,698,2.186,708,1.934,709,3.26,776,2.57,777,2.57,778,4.582,779,3.832,780,2.57,781,2.57,782,2.57,783,2.57,784,3.832,785,4.582,786,2.57,787,2.57,788,2.57,789,5.079,790,2.57,791,5.079,792,6.067,793,2.57,794,5.903,795,2.57,796,2.57,797,2.57,798,3.832,799,2.57,800,3.832,801,2.57,802,4.582,803,2.57,804,3.832,805,2.57,806,2.57,807,2.57,808,2.57,809,2.57,810,5.079,811,6.067,812,5.698,813,2.57,814,3.832,815,2.57,816,2.57,817,2.57,818,2.57,819,2.57,820,3.832,821,5.079,822,2.57,823,3.832,824,2.57,825,2.57,826,3.832,827,5.433,828,5.079,829,2.57,830,3.832,831,2.57,832,2.57,833,2.57,834,2.57,835,5.079,836,2.57,837,2.57,838,2.57,839,2.57,840,2.57,841,3.832,842,2.57,843,2.57,844,2.57,845,2.57,846,2.57,847,3.832,848,2.57,849,2.57,850,2.57,851,3.832,852,2.57,853,2.57,854,4.321,855,3.832,856,2.57,857,2.57,858,2.57,859,2.57,860,2.57,861,2.57,862,2.57,863,2.57,864,3.832,865,2.57,866,2.57,867,2.57,868,2.57,869,4.582,870,2.57,871,2.57,872,2.57,873,2.57,874,2.57,875,2.57,876,3.832,877,2.57,878,2.57,879,2.57,880,2.57,881,2.57,882,3.832,883,2.57,884,2.57,885,2.57,886,3.26,887,3.832,888,2.57,889,2.57,890,2.57,891,2.57,892,2.57,893,2.57,894,2.57,895,2.57,896,2.186,897,2.57,898,2.57,899,2.57,900,2.57,901,2.57,902,2.57,903,1.934]],["title/modules.html",[103,2.363]],["body/modules.html",[23,0.019,75,0.019,76,0.019,102,3.382,103,2.457,113,2.847,114,3.09,115,3.09,116,2.847,854,5.812,904,6.831,905,6.831,906,6.831]],["title/overview.html",[907,4.076]],["body/overview.html",[2,2.536,23,0.023,75,0.015,76,0.015,79,1.927,92,1.365,97,3.05,101,1.365,102,4.637,103,1.662,104,1.662,105,1.927,106,1.927,107,1.662,108,1.927,109,1.927,110,2.867,111,2.867,112,2.867,113,3.832,114,3.747,115,3.747,116,3.786,117,2.662,118,1.927,119,1.786,165,1.454,199,3.66,206,2.652,227,3.29,231,2.867,232,2.867,233,2.867,234,2.652,235,3.05,320,1.454,364,3.05,493,2.867,494,2.867,495,3.31,575,2.867,576,2.867,577,3.31,681,2.867,682,2.867,683,2.867,684,3.972,907,2.867,908,5.335,909,4.656,910,3.37]],["title/properties.html",[83,1.711,735,2.497]],["body/properties.html",[23,0.022,75,0.02,76,0.02,83,2.159,183,2.825,896,4.535,903,4.011,911,5.331,912,5.331,913,5.331]],["title/miscellaneous/variables.html",[762,1.678,914,3.594]],["body/miscellaneous/variables.html",[9,0.33,23,0.023,24,0.489,25,0.68,28,2.449,34,2.21,36,0.892,37,2.769,48,3.42,57,1.444,59,3.086,60,2.769,63,1.239,69,2.769,71,0.975,75,0.015,76,0.015,78,3.086,81,1.801,154,3.867,174,2.408,183,1.724,211,2.408,260,3.42,267,5.503,273,3.867,394,2.449,408,3.086,409,2.769,523,2.449,526,3.086,527,2.769,639,2.449,647,3.086,648,2.769,714,2.769,717,2.769,718,3.867,719,3.867,720,2.769,729,2.769,730,3.867,762,1.86,766,3.867,886,2.769,903,2.449,914,2.769,915,3.254,916,4.545,917,3.254,918,3.254,919,3.254,920,3.254,921,3.254,922,6.468,923,3.254,924,5.669,925,3.254,926,3.254,927,3.254,928,3.254,929,3.254,930,3.254,931,3.254,932,3.254,933,3.254,934,3.254,935,3.254,936,3.254,937,3.254,938,3.254,939,3.254,940,3.254,941,3.254,942,3.254,943,3.254,944,3.254,945,3.254,946,3.254,947,3.254,948,4.545,949,3.254,950,3.254,951,3.254]],["title/routes.html",[952,4.076]],["body/routes.html",[23,0.02,75,0.02,76,0.02,952,4.759]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateProductDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["0",{"_index":474,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{}}}],["0.0.1",{"_index":912,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["0.3.24",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":716,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":713,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":722,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["1.1.26",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["11.0.0",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["11.0.3",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["11.2.0",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":910,"title":{},"body":{"overview.html":{}}}],["2.1.0",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":430,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["201",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["4.0.2",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":423,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["404",{"_index":432,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["409",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["5",{"_index":908,"title":{},"body":{"overview.html":{}}}],["5.0.3",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":644,"title":{},"body":{"classes/User.html":{}}}],["6.0.0",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["7.8.1",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["8.15.1",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["8.16.0",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":909,"title":{},"body":{"overview.html":{}}}],["_",{"_index":73,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["abstract",{"_index":520,"title":{},"body":{"injectables/HashingProvider.html":{}}}],["acces",{"_index":291,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["access",{"_index":265,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["accesstoken",{"_index":287,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/SignInProvider.html":{}}}],["accesstokenguard",{"_index":1,"title":{"guards/AccessTokenGuard.html":{}},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["activeuser",{"_index":719,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["activeuserdata",{"_index":78,"title":{"interfaces/ActiveUserData.html":{}},"body":{"interfaces/ActiveUserData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["addbearerauth",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["address",{"_index":87,"title":{},"body":{"interfaces/ActiveUserData.html":{},"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{}}}],["allowing",{"_index":842,"title":{},"body":{"index.html":{}}}],["already",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CreateUserProvider.html":{}}}],["amazing",{"_index":892,"title":{},"body":{"index.html":{}}}],["api",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":459,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["apibearerauth('bearer",{"_index":465,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["apibody",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":333,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["apiproperty()@isdatestring",{"_index":354,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isemail",{"_index":356,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isemail()@isnotempty",{"_index":600,"title":{},"body":{"classes/SignInDto.html":{}}}],["apiproperty()@isnotempty()@isdatestring",{"_index":328,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["apiproperty()@isnotempty()@isstring",{"_index":326,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["apiproperty()@isnotempty()@minlength(6",{"_index":358,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":602,"title":{},"body":{"classes/SignInDto.html":{}}}],["apiproperty({type",{"_index":343,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["apiresponse",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["apitags",{"_index":460,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["apitags('employee",{"_index":461,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["apitags('product",{"_index":552,"title":{},"body":{"controllers/ProductController.html":{}}}],["apitags('user",{"_index":660,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":773,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app.controller",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":98,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":91,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":812,"title":{},"body":{"index.html":{}}}],["applications",{"_index":784,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":102,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":97,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":11,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeServiceImpl.html":{},"controllers/ProductController.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{}}}],["audience",{"_index":622,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["auth",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"controllers/EmployeeController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth(authtype.bearer",{"_index":464,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["auth(authtype.none",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["auth.controller",{"_index":238,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/config/jwt.config",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/access",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/authentication/authentication.guard",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["auth_type_key",{"_index":260,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":171,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticationguard",{"_index":138,"title":{"guards/AuthenticationGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["authenticationguard.defaultauthtype",{"_index":277,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authinterface",{"_index":227,"title":{"interfaces/AuthInterface.html":{}},"body":{"interfaces/AuthInterface.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authmodule",{"_index":113,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":896,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorised",{"_index":297,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authorization",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice",{"_index":199,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authtype",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"controllers/EmployeeController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["authtype.bearer",{"_index":271,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtype.none",{"_index":268,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtypeguardmap",{"_index":254,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtypes",{"_index":273,"title":{},"body":{"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["authtypes.map((type",{"_index":278,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["await",{"_index":66,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"controllers/ProductController.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{}}}],["aws",{"_index":830,"title":{},"body":{"index.html":{}}}],["backers",{"_index":893,"title":{},"body":{"index.html":{}}}],["bad",{"_index":424,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["base",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["based",{"_index":825,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":312,"title":{},"body":{"injectables/BcryptProvider.html":{},"dependencies.html":{}}}],["bcrypt.compare(data",{"_index":318,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["bcrypt.gensalt",{"_index":316,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["bcrypt.hash(data",{"_index":317,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["bcryptprovider",{"_index":240,"title":{"injectables/BcryptProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/BcryptProvider.html":{},"coverage.html":{}}}],["bearer",{"_index":766,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["board",{"_index":885,"title":{},"body":{"index.html":{}}}],["body",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":611,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["bootstrap",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":906,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":904,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":306,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["build",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":779,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":12,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["canactivate(context",{"_index":27,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["catch",{"_index":70,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"injectables/SignInProvider.html":{}}}],["catch((err",{"_index":300,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["channel",{"_index":857,"title":{},"body":{"index.html":{}}}],["check",{"_index":289,"title":{},"body":{"guards/AuthenticationGuard.html":{},"index.html":{}}}],["class",{"_index":51,"title":{"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/Employee.html":{},"classes/Product.html":{},"classes/SignInDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateProductDto.html":{},"classes/User.html":{}},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateProductDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":320,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/Employee.html":{},"classes/Product.html":{},"classes/SignInDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateProductDto.html":{},"classes/User.html":{},"overview.html":{}}}],["clicks",{"_index":841,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":824,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_employeemodule",{"_index":493,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["cluster_employeemodule_providers",{"_index":494,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":575,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_providers",{"_index":576,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":681,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":682,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":683,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["come",{"_index":848,"title":{},"body":{"index.html":{}}}],["comparepassword",{"_index":303,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["comparepassword(data",{"_index":305,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["comparison",{"_index":617,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["compodoc/compodoc",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["config/jwt.config",{"_index":244,"title":{},"body":{"modules/AuthModule.html":{},"injectables/SignInProvider.html":{}}}],["configmodule",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forfeature(jwtconfig",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mongodb_name",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mongodb_uri",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["configtype",{"_index":19,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/SignInProvider.html":{}}}],["conflictexception",{"_index":374,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/UserServiceImpl.html":{}}}],["conflictexception('user",{"_index":385,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["console.error('update",{"_index":480,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["console.log('finding",{"_index":664,"title":{},"body":{"controllers/UserController.html":{}}}],["const",{"_index":57,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeServiceImpl.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{},"miscellaneous/variables.html":{}}}],["constant",{"_index":284,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["constructor",{"_index":15,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeServiceImpl.html":{},"controllers/ProductController.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{}}}],["constructor(employeemodel",{"_index":502,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["constructor(jwtservice",{"_index":16,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["constructor(private",{"_index":99,"title":{},"body":{"controllers/AppController.html":{}}}],["constructor(productmodel",{"_index":583,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["constructor(reflector",{"_index":256,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["constructor(signinprovider",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(userinterface",{"_index":605,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["constructor(usermodel",{"_index":368,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/UserServiceImpl.html":{}}}],["context",{"_index":30,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["context.getclass",{"_index":276,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["context.gethandler",{"_index":275,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":58,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["controller",{"_index":90,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('employee",{"_index":462,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["controller('product",{"_index":553,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('user",{"_index":661,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":92,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["courses",{"_index":863,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":708,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":392,"title":{},"body":{"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"controllers/ProductController.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateProductDto.html":{}}}],["created",{"_index":422,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["createdemployee",{"_index":511,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["createdemployee.save",{"_index":513,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["createdproduct",{"_index":592,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["createdproduct.save",{"_index":594,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["createemployee",{"_index":412,"title":{},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["createemployee(@body",{"_index":466,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["createemployee(createemployeedto",{"_index":417,"title":{},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["createemployeedto",{"_index":319,"title":{"classes/CreateEmployeeDto.html":{}},"body":{"classes/CreateEmployeeDto.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{},"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["createemployeedto})@apiresponse({status",{"_index":421,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["createparamdecorator",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproduct",{"_index":530,"title":{},"body":{"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{}}}],["createproduct(@body",{"_index":555,"title":{},"body":{"controllers/ProductController.html":{}}}],["createproduct(createproductdto",{"_index":535,"title":{},"body":{"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{}}}],["createproductdto",{"_index":338,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["createuser",{"_index":367,"title":{},"body":{"injectables/CreateUserProvider.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["createuser(createuserdto",{"_index":372,"title":{},"body":{"injectables/CreateUserProvider.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["createuserdto",{"_index":178,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{}}}],["createuserdto})@apiresponse({status",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["createuserprovider",{"_index":364,"title":{"injectables/CreateUserProvider.html":{}},"body":{"injectables/CreateUserProvider.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{},"overview.html":{}}}],["creating",{"_index":702,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["ctx",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":309,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["data.interface.ts",{"_index":82,"title":{},"body":{"interfaces/ActiveUserData.html":{},"coverage.html":{}}}],["date",{"_index":398,"title":{},"body":{"classes/Employee.html":{},"classes/User.html":{}}}],["dateofbirth",{"_index":351,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["dbname",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["decalre",{"_index":283,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["declarations",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["declare",{"_index":280,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["decorator",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":95,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"classes/SignInDto.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["decorators/auth.decorator",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["deeper",{"_index":859,"title":{},"body":{"index.html":{}}}],["default",{"_index":267,"title":{},"body":{"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["defaultauthtype",{"_index":255,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["defined",{"_index":20,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["delete",{"_index":428,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{},"injectables/SignInProvider.html":{},"injectables/UserServiceImpl.html":{}}}],["delete('/:id",{"_index":481,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["delete('/:id')@auth(authtype.bearer)@apibearerauth('bearer",{"_index":427,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["deleted",{"_index":431,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["deletedemployee",{"_index":483,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["deletedproduct",{"_index":566,"title":{},"body":{"controllers/ProductController.html":{}}}],["deleteemployee",{"_index":413,"title":{},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["deleteemployee(@param('id",{"_index":482,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["deleteemployee(id",{"_index":426,"title":{},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["deleteproduct",{"_index":531,"title":{},"body":{"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{}}}],["deleteproduct(@param('id",{"_index":565,"title":{},"body":{"controllers/ProductController.html":{}}}],["deleteproduct(id",{"_index":538,"title":{},"body":{"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{}}}],["dependencies",{"_index":104,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":810,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":829,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":820,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":840,"title":{},"body":{"index.html":{}}}],["description",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateProductDto.html":{},"controllers/EmployeeController.html":{},"controllers/ProductController.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":795,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":871,"title":{},"body":{"index.html":{}}}],["discord",{"_index":856,"title":{},"body":{"index.html":{}}}],["dive",{"_index":858,"title":{},"body":{"index.html":{}}}],["document",{"_index":406,"title":{},"body":{"classes/Employee.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["documentation",{"_index":709,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documentbuilder",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dtos/create",{"_index":380,"title":{},"body":{"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["dtos/signin.dto",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["dtos/update",{"_index":456,"title":{},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{}}}],["e2e",{"_index":805,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":780,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":818,"title":{},"body":{"index.html":{}}}],["email",{"_index":84,"title":{},"body":{"interfaces/ActiveUserData.html":{},"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["email.replace(\"%40",{"_index":704,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["employee",{"_index":393,"title":{"classes/Employee.html":{}},"body":{"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeServiceImpl.html":{},"coverage.html":{}}}],["employee'})@apibody({type",{"_index":420,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["employee.controller",{"_index":498,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["employee.dto",{"_index":455,"title":{},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{},"classes/UpdateEmployeeDto.html":{}}}],["employee.dto.ts",{"_index":322,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["employee.dto.ts:14",{"_index":331,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:19",{"_index":327,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:24",{"_index":332,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:29",{"_index":329,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:9",{"_index":330,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.name",{"_index":500,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["employee.schema",{"_index":492,"title":{},"body":{"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["employee.service",{"_index":497,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["employee/employee.module",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["employeecontroller",{"_index":410,"title":{"controllers/EmployeeController.html":{}},"body":{"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"coverage.html":{}}}],["employeeinterface",{"_index":457,"title":{"interfaces/EmployeeInterface.html":{}},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeServiceImpl.html":{},"coverage.html":{}}}],["employeemodel",{"_index":504,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["employeemodule",{"_index":114,"title":{"modules/EmployeeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EmployeeModule.html":{},"modules.html":{},"overview.html":{}}}],["employees",{"_index":438,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["employees'})@apiresponse({status",{"_index":437,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["employees.length",{"_index":473,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["employeeschema",{"_index":408,"title":{},"body":{"classes/Employee.html":{},"modules/EmployeeModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["employeeserviceimpl",{"_index":495,"title":{"injectables/EmployeeServiceImpl.html":{}},"body":{"modules/EmployeeModule.html":{},"injectables/EmployeeServiceImpl.html":{},"coverage.html":{},"overview.html":{}}}],["encrypted",{"_index":307,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["ensure",{"_index":816,"title":{},"body":{"index.html":{}}}],["enter",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enterprise",{"_index":875,"title":{},"body":{"index.html":{}}}],["enumerations",{"_index":763,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/auth",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["env",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["env.local",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":301,"title":{},"body":{"guards/AuthenticationGuard.html":{},"controllers/EmployeeController.html":{}}}],["error",{"_index":281,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"injectables/SignInProvider.html":{}}}],["even",{"_index":295,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["example",{"_index":791,"title":{},"body":{"index.html":{}}}],["exclude",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["exec",{"_index":517,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{},"injectables/ProductServiceImpl.html":{},"injectables/UserServiceImpl.html":{}}}],["execution",{"_index":56,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["executioncontext",{"_index":28,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["existinguser",{"_index":383,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["exists",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CreateUserProvider.html":{}}}],["experience",{"_index":861,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":628,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["export",{"_index":50,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateProductDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{}}}],["exports",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":47,"title":{},"body":{"guards/AccessTokenGuard.html":{},"dependencies.html":{}}}],["extends",{"_index":407,"title":{},"body":{"classes/Employee.html":{},"classes/Product.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateProductDto.html":{},"classes/User.html":{}}}],["extract",{"_index":55,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["extracttokenfromheader",{"_index":14,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["extracttokenfromheader(request",{"_index":33,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["failed",{"_index":618,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["false",{"_index":612,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["fast",{"_index":833,"title":{},"body":{"index.html":{}}}],["features",{"_index":844,"title":{},"body":{"index.html":{}}}],["few",{"_index":835,"title":{},"body":{"index.html":{}}}],["field",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateProductDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{}}}],["find",{"_index":436,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["findallemployees",{"_index":414,"title":{},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["findallproducts",{"_index":532,"title":{},"body":{"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{}}}],["findallusers",{"_index":651,"title":{},"body":{"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["findemployeebyid",{"_index":415,"title":{},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["findemployeebyid(@param('id",{"_index":469,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["findemployeebyid(id",{"_index":440,"title":{},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["findproductbyid",{"_index":533,"title":{},"body":{"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{}}}],["findproductbyid(@param('id",{"_index":557,"title":{},"body":{"controllers/ProductController.html":{}}}],["findproductbyid(id",{"_index":543,"title":{},"body":{"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{}}}],["finduser(@query('id",{"_index":663,"title":{},"body":{"controllers/UserController.html":{}}}],["finduserbyemail",{"_index":674,"title":{},"body":{"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["finduserbyemail(email",{"_index":677,"title":{},"body":{"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["finduserbyid",{"_index":652,"title":{},"body":{"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["finduserbyid(@query('id",{"_index":667,"title":{},"body":{"controllers/UserController.html":{}}}],["finduserbyid(id",{"_index":655,"title":{},"body":{"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["fired",{"_index":288,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["focus",{"_index":843,"title":{},"body":{"index.html":{}}}],["follow",{"_index":879,"title":{},"body":{"index.html":{}}}],["forwardref",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CreateUserProvider.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{}}}],["found",{"_index":433,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{}}}],["framework",{"_index":778,"title":{},"body":{"index.html":{}}}],["fs",{"_index":699,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["full",{"_index":874,"title":{},"body":{"index.html":{}}}],["function",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":768,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":838,"title":{},"body":{"index.html":{}}}],["generate",{"_index":314,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["get('/:id",{"_index":468,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["get('/:id')@apioperation({summary",{"_index":441,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["get('findall",{"_index":669,"title":{},"body":{"controllers/UserController.html":{}}}],["get('findall')@auth(authtype.none",{"_index":653,"title":{},"body":{"controllers/UserController.html":{}}}],["get('findbyemail",{"_index":662,"title":{},"body":{"controllers/UserController.html":{}}}],["get('findbyid",{"_index":656,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@apioperation({summary",{"_index":435,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["gethello",{"_index":94,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":774,"title":{"index.html":{}},"body":{}}],["graph",{"_index":866,"title":{},"body":{"index.html":{}}}],["grow",{"_index":889,"title":{},"body":{"index.html":{}}}],["guard",{"_index":0,"title":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"overview.html":{}}}],["hands",{"_index":860,"title":{},"body":{"index.html":{}}}],["handy",{"_index":849,"title":{},"body":{"index.html":{}}}],["hashedpassword",{"_index":386,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["hashing.provider",{"_index":313,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/SignInProvider.html":{}}}],["hashingprovider",{"_index":234,"title":{"injectables/HashingProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/HashingProvider.html":{},"injectables/SignInProvider.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{},"overview.html":{}}}],["hashpassword",{"_index":304,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["hashpassword(data",{"_index":310,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["header",{"_index":60,"title":{},"body":{"guards/AccessTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["hello",{"_index":168,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":864,"title":{},"body":{"index.html":{}}}],["here",{"_index":286,"title":{},"body":{"guards/AuthenticationGuard.html":{},"index.html":{}}}],["http",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:3000",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/git/git",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":900,"title":{},"body":{"index.html":{}}}],["id",{"_index":89,"title":{},"body":{"interfaces/ActiveUserData.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["id'})@apibody({type",{"_index":447,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["id'})@apiresponse({status",{"_index":429,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["identifier",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":52,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/ProductServiceImpl.html":{},"injectables/UserServiceImpl.html":{}}}],["import",{"_index":38,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateProductDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{}}}],["imports",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["in'})@apibody({type",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":772,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateProductDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{}}}],["information",{"_index":822,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":846,"title":{},"body":{"index.html":{}}}],["inject",{"_index":39,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"controllers/ProductController.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{}}}],["inject('employeeinterface",{"_index":463,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["inject('productinterface",{"_index":554,"title":{},"body":{"controllers/ProductController.html":{}}}],["inject('userinterface",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{}}}],["inject(forwardref",{"_index":382,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["inject(jwtconfig.key",{"_index":54,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/SignInProvider.html":{}}}],["injectable",{"_index":40,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"injectables/UserServiceImpl.html":{}},"body":{"guards/AccessTokenGuard.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{}}}],["injectables",{"_index":165,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"injectables/UserServiceImpl.html":{},"overview.html":{}}}],["injectmodel",{"_index":376,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/ProductServiceImpl.html":{},"injectables/UserServiceImpl.html":{}}}],["injectmodel(employee.name",{"_index":510,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["injectmodel(product.name",{"_index":591,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["injectmodel(user.name",{"_index":381,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/UserServiceImpl.html":{}}}],["install",{"_index":837,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":793,"title":{},"body":{"index.html":{}}}],["instance",{"_index":282,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["instance.canactivate(context",{"_index":299,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["interact",{"_index":867,"title":{},"body":{"index.html":{}}}],["interface",{"_index":77,"title":{"interfaces/ActiveUserData.html":{},"interfaces/AuthInterface.html":{},"interfaces/EmployeeInterface.html":{},"interfaces/ProductInterface.html":{},"interfaces/UserInterface.html":{}},"body":{"interfaces/ActiveUserData.html":{},"interfaces/AuthInterface.html":{},"interfaces/EmployeeInterface.html":{},"interfaces/ProductInterface.html":{},"interfaces/UserInterface.html":{},"coverage.html":{}}}],["interface/employee.interface",{"_index":458,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["interface/product.interface",{"_index":549,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductServiceImpl.html":{}}}],["interfaces",{"_index":79,"title":{},"body":{"interfaces/ActiveUserData.html":{},"interfaces/AuthInterface.html":{},"interfaces/EmployeeInterface.html":{},"interfaces/ProductInterface.html":{},"interfaces/UserInterface.html":{},"overview.html":{}}}],["interfaces/auth.interface",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["interfaces/user.interface",{"_index":659,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{}}}],["internalservererrorexception",{"_index":375,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/UserServiceImpl.html":{}}}],["internalservererrorexception('failed",{"_index":391,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["isdatestring",{"_index":334,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateUserDto.html":{}}}],["isemail",{"_index":361,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["isequalpassword",{"_index":610,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["isglobal",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":335,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["isnumber",{"_index":347,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["ispositive",{"_index":348,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isstring",{"_index":336,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["issuer",{"_index":624,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["job",{"_index":882,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":884,"title":{},"body":{"index.html":{}}}],["join",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["joineddate",{"_index":323,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{}}}],["jwt",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtconfig",{"_index":45,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/SignInProvider.html":{}}}],["jwtconfiguration",{"_index":18,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/SignInProvider.html":{}}}],["jwtmodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtmodule.registerasync(jwtconfig.asprovider",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtservice",{"_index":17,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/SignInProvider.html":{}}}],["kamil",{"_index":897,"title":{},"body":{"index.html":{}}}],["key",{"_index":813,"title":{},"body":{"index.html":{}}}],["keyof",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["koko",{"_index":169,"title":{},"body":{"injectables/AppService.html":{}}}],["later",{"_index":292,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["learn",{"_index":852,"title":{},"body":{"index.html":{}}}],["legend",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":903,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["license.txt",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["licensed",{"_index":887,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":881,"title":{},"body":{"index.html":{}}}],["looking",{"_index":823,"title":{},"body":{"index.html":{}}}],["loop",{"_index":877,"title":{},"body":{"index.html":{}}}],["makes",{"_index":831,"title":{},"body":{"index.html":{}}}],["managing",{"_index":845,"title":{},"body":{"index.html":{}}}],["matching",{"_index":76,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateProductDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["mau",{"_index":827,"title":{},"body":{"index.html":{}}}],["message",{"_index":485,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["metadata",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":10,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["minlength",{"_index":362,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["minlength(6",{"_index":363,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":762,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":886,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":798,"title":{},"body":{"index.html":{}}}],["model",{"_index":369,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/ProductServiceImpl.html":{},"injectables/UserServiceImpl.html":{}}}],["module",{"_index":101,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":103,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":378,"title":{},"body":{"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"injectables/EmployeeServiceImpl.html":{},"classes/Product.html":{},"injectables/ProductServiceImpl.html":{},"classes/User.html":{},"injectables/UserServiceImpl.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/EmployeeModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature",{"_index":499,"title":{},"body":{"modules/EmployeeModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":821,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":293,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["myśliwiec",{"_index":898,"title":{},"body":{"index.html":{}}}],["name",{"_index":24,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["need",{"_index":872,"title":{},"body":{"index.html":{}}}],["nest",{"_index":785,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":902,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":811,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":42,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":43,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/SignInProvider.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":44,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/SignInProvider.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mau",{"_index":839,"title":{},"body":{"index.html":{}}}],["nestjs/mongoose",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeServiceImpl.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"controllers/EmployeeController.html":{},"controllers/ProductController.html":{},"classes/SignInDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateProductDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":63,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeServiceImpl.html":{},"controllers/ProductController.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newuser",{"_index":388,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["newuser.save",{"_index":390,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["node.js",{"_index":777,"title":{},"body":{"index.html":{}}}],["none",{"_index":767,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notfoundexception",{"_index":453,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{}}}],["notfoundexception('employee",{"_index":471,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["notfoundexception('no",{"_index":475,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{}}}],["notfoundexception('product",{"_index":559,"title":{},"body":{"controllers/ProductController.html":{}}}],["notfoundexception('user",{"_index":666,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{}}}],["npm",{"_index":792,"title":{},"body":{"index.html":{}}}],["null",{"_index":680,"title":{},"body":{"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["number",{"_index":88,"title":{},"body":{"interfaces/ActiveUserData.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["observable",{"_index":263,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["offer",{"_index":883,"title":{},"body":{"index.html":{}}}],["official",{"_index":828,"title":{},"body":{"index.html":{}}}],["one",{"_index":296,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["open",{"_index":888,"title":{},"body":{"index.html":{}}}],["optional",{"_index":26,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":907,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":735,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":452,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["parameters",{"_index":22,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":873,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":635,"title":{},"body":{"classes/UpdateEmployeeDto.html":{},"classes/UpdateProductDto.html":{}}}],["partialtype(createemployeedto",{"_index":634,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["partialtype(createproductdto",{"_index":638,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["passes",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["password",{"_index":352,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/User.html":{}}}],["patch",{"_index":451,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["patch('/:id",{"_index":476,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["patch('/:id')@auth(authtype.bearer)@apibearerauth('bearer",{"_index":445,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["path",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":65,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["per",{"_index":344,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["permissions",{"_index":290,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["pg",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["phonenumber",{"_index":324,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{}}}],["platform",{"_index":826,"title":{},"body":{"index.html":{}}}],["please",{"_index":855,"title":{},"body":{"index.html":{}}}],["position",{"_index":325,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{}}}],["possible",{"_index":819,"title":{},"body":{"index.html":{}}}],["post",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["post('register",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@apioperation({summary",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signin",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signin')@auth(authtype.none)@apioperation({summary",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@auth(authtype.bearer)@apibearerauth('bearer",{"_index":418,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["prefix",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["price",{"_index":341,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["private",{"_index":13,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeServiceImpl.html":{},"controllers/ProductController.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{}}}],["prodcut.dto",{"_index":551,"title":{},"body":{"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{}}}],["prodcut.dto.ts",{"_index":637,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product",{"_index":349,"title":{"classes/Product.html":{}},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"coverage.html":{}}}],["product'})@apiresponse({status",{"_index":536,"title":{},"body":{"controllers/ProductController.html":{}}}],["product'})@isnumber()@ispositive",{"_index":345,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.controller",{"_index":579,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.dto",{"_index":550,"title":{},"body":{"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":340,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:13",{"_index":346,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:8",{"_index":342,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.name",{"_index":581,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.schema",{"_index":574,"title":{},"body":{"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{}}}],["product.service",{"_index":580,"title":{},"body":{"modules/ProductModule.html":{}}}],["product/product.module",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["productcontroller",{"_index":528,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productinterface",{"_index":548,"title":{"interfaces/ProductInterface.html":{}},"body":{"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"coverage.html":{}}}],["production",{"_index":800,"title":{},"body":{"index.html":{}}}],["productmodel",{"_index":585,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["productmodule",{"_index":115,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["products",{"_index":541,"title":{},"body":{"controllers/ProductController.html":{}}}],["products'})@apiresponse({status",{"_index":540,"title":{},"body":{"controllers/ProductController.html":{}}}],["products.length",{"_index":561,"title":{},"body":{"controllers/ProductController.html":{}}}],["productschema",{"_index":526,"title":{},"body":{"classes/Product.html":{},"modules/ProductModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productserviceimpl",{"_index":577,"title":{"injectables/ProductServiceImpl.html":{}},"body":{"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":776,"title":{},"body":{"index.html":{}}}],["project",{"_index":789,"title":{},"body":{"index.html":{}}}],["promise",{"_index":32,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["promise.resolve",{"_index":285,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["prop",{"_index":403,"title":{},"body":{"classes/Employee.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["prop({required",{"_index":641,"title":{},"body":{"classes/User.html":{}}}],["prop({type",{"_index":395,"title":{},"body":{"classes/Employee.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["properties",{"_index":83,"title":{"properties.html":{}},"body":{"interfaces/ActiveUserData.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/Employee.html":{},"classes/Product.html":{},"classes/SignInDto.html":{},"classes/User.html":{},"properties.html":{}}}],["provide",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["provider",{"_index":700,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["providers",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["providers/bcrypt.provider",{"_index":241,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/create",{"_index":689,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{}}}],["providers/hashing.provider",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/signin.provider",{"_index":243,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["public",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"injectables/BcryptProvider.html":{}}}],["query",{"_index":658,"title":{},"body":{"controllers/UserController.html":{}}}],["questions",{"_index":853,"title":{},"body":{"index.html":{}}}],["read",{"_index":698,"title":{},"body":{"injectables/UserServiceImpl.html":{},"index.html":{}}}],["readonly",{"_index":53,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeServiceImpl.html":{},"controllers/ProductController.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{}}}],["ready",{"_index":809,"title":{},"body":{"index.html":{}}}],["real",{"_index":868,"title":{},"body":{"index.html":{}}}],["record",{"_index":269,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/UserServiceImpl.html":{}}}],["reflect",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":257,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["register",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(createuserdto",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{}}}],["registered",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["registration",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["registration'})@apibody({type",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["repository",{"_index":788,"title":{},"body":{"index.html":{}}}],["request",{"_index":34,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/EmployeeController.html":{},"controllers/ProductController.html":{},"miscellaneous/variables.html":{}}}],["request.headers.authorization?.split",{"_index":74,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["request[request_user_key",{"_index":69,"title":{},"body":{"guards/AccessTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["request_user_key",{"_index":48,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requesttimeoutexception",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["requesttimeoutexception('password",{"_index":616,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["required",{"_index":396,"title":{},"body":{"classes/Employee.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["requiring",{"_index":834,"title":{},"body":{"index.html":{}}}],["reset",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resource",{"_index":298,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["resources",{"_index":847,"title":{},"body":{"index.html":{}}}],["responsible",{"_index":701,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["results",{"_index":75,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateProductDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["return",{"_index":71,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeServiceImpl.html":{},"controllers/ProductController.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":31,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["rootpath",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["routes",{"_index":952,"title":{"routes.html":{}},"body":{"routes.html":{}}}],["run",{"_index":794,"title":{},"body":{"index.html":{}}}],["runs",{"_index":817,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":264,"title":{},"body":{"guards/AuthenticationGuard.html":{},"dependencies.html":{}}}],["salt",{"_index":315,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["scalable",{"_index":781,"title":{},"body":{"index.html":{}}}],["schema",{"_index":404,"title":{},"body":{"classes/Employee.html":{},"modules/EmployeeModule.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"classes/User.html":{},"modules/UserModule.html":{}}}],["schemafactory",{"_index":405,"title":{},"body":{"classes/Employee.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(employee",{"_index":409,"title":{},"body":{"classes/Employee.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(product",{"_index":527,"title":{},"body":{"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":648,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["scheme",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scm.com/blob/main/mit",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":626,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["server",{"_index":782,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":266,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["setdescription('use",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setlicense",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(auth_type_key",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settitle('tda",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":790,"title":{},"body":{"index.html":{}}}],["setupswagger",{"_index":732,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupswagger(app",{"_index":771,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setversion('1.0",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shine",{"_index":170,"title":{},"body":{"injectables/AppService.html":{}}}],["side",{"_index":783,"title":{},"body":{"index.html":{}}}],["sign",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["signin(@body",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(signindto",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["signindto",{"_index":195,"title":{"classes/SignInDto.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"coverage.html":{}}}],["signindto.password",{"_index":614,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["signinprovider",{"_index":235,"title":{"injectables/SignInProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{},"coverage.html":{},"overview.html":{}}}],["simple",{"_index":836,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateProductDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{},"index.html":{}}}],["sponsors",{"_index":891,"title":{},"body":{"index.html":{}}}],["src/.../active",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":764,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../auth.constants.ts",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.decorator.ts",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../employee.schema.ts",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":769,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../product.schema.ts",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.config.ts",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.ts",{"_index":770,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.schema.ts",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":93,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":96,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":166,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":167,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:24",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:32",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":686,"title":{},"body":{"modules/UserModule.html":{}}}],["src/auth/auth.module.ts",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:8",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/config/jwt.config",{"_index":46,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["src/auth/constants/auth.constants",{"_index":49,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["src/auth/constants/auth.constants.ts",{"_index":714,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorators/active",{"_index":717,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorators/auth.decorator",{"_index":261,"title":{},"body":{"guards/AuthenticationGuard.html":{},"controllers/EmployeeController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["src/auth/decorators/auth.decorator.ts",{"_index":720,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dtos/signin.dto.ts",{"_index":599,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["src/auth/dtos/signin.dto.ts:13",{"_index":603,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/dtos/signin.dto.ts:8",{"_index":601,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/enums/auth",{"_index":262,"title":{},"body":{"guards/AuthenticationGuard.html":{},"controllers/EmployeeController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["src/auth/guards/access",{"_index":6,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{}}}],["src/auth/guards/authentication/authentication.guard.ts",{"_index":253,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/auth/guards/authentication/authentication.guard.ts:22",{"_index":258,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/authentication/authentication.guard.ts:42",{"_index":259,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/interfaces/active",{"_index":80,"title":{},"body":{"interfaces/ActiveUserData.html":{},"coverage.html":{}}}],["src/auth/interfaces/auth.interface.ts",{"_index":228,"title":{},"body":{"interfaces/AuthInterface.html":{},"coverage.html":{}}}],["src/auth/interfaces/auth.interface.ts:5",{"_index":229,"title":{},"body":{"interfaces/AuthInterface.html":{}}}],["src/auth/providers/bcrypt.provider.ts",{"_index":302,"title":{},"body":{"injectables/BcryptProvider.html":{},"coverage.html":{}}}],["src/auth/providers/bcrypt.provider.ts:13",{"_index":308,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["src/auth/providers/bcrypt.provider.ts:7",{"_index":311,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["src/auth/providers/hashing.provider",{"_index":379,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/UserServiceImpl.html":{}}}],["src/auth/providers/hashing.provider.ts",{"_index":519,"title":{},"body":{"injectables/HashingProvider.html":{},"coverage.html":{}}}],["src/auth/providers/hashing.provider.ts:5",{"_index":522,"title":{},"body":{"injectables/HashingProvider.html":{}}}],["src/auth/providers/hashing.provider.ts:7",{"_index":521,"title":{},"body":{"injectables/HashingProvider.html":{}}}],["src/auth/providers/signin.provider.ts",{"_index":604,"title":{},"body":{"injectables/SignInProvider.html":{},"coverage.html":{}}}],["src/auth/providers/signin.provider.ts:11",{"_index":606,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["src/auth/providers/signin.provider.ts:24",{"_index":607,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["src/employee/dtos/create",{"_index":321,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"coverage.html":{}}}],["src/employee/dtos/update",{"_index":633,"title":{},"body":{"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["src/employee/employee.controller.ts",{"_index":411,"title":{},"body":{"controllers/EmployeeController.html":{},"coverage.html":{}}}],["src/employee/employee.controller.ts:24",{"_index":425,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:32",{"_index":442,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:43",{"_index":439,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:58",{"_index":450,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:77",{"_index":434,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.module.ts",{"_index":496,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["src/employee/employee.schema.ts",{"_index":394,"title":{},"body":{"classes/Employee.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/employee/employee.schema.ts:10",{"_index":400,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/employee.schema.ts:16",{"_index":401,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/employee.schema.ts:22",{"_index":397,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/employee.schema.ts:28",{"_index":402,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/employee.schema.ts:34",{"_index":399,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/employee.service.ts",{"_index":501,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{},"coverage.html":{}}}],["src/employee/employee.service.ts:10",{"_index":503,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["src/employee/employee.service.ts:16",{"_index":505,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["src/employee/employee.service.ts:21",{"_index":508,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["src/employee/employee.service.ts:24",{"_index":507,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["src/employee/employee.service.ts:27",{"_index":509,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["src/employee/employee.service.ts:30",{"_index":506,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["src/employee/interface/employee.interface.ts",{"_index":486,"title":{},"body":{"interfaces/EmployeeInterface.html":{},"coverage.html":{}}}],["src/employee/interface/employee.interface.ts:10",{"_index":488,"title":{},"body":{"interfaces/EmployeeInterface.html":{}}}],["src/employee/interface/employee.interface.ts:6",{"_index":487,"title":{},"body":{"interfaces/EmployeeInterface.html":{}}}],["src/employee/interface/employee.interface.ts:7",{"_index":490,"title":{},"body":{"interfaces/EmployeeInterface.html":{}}}],["src/employee/interface/employee.interface.ts:8",{"_index":489,"title":{},"body":{"interfaces/EmployeeInterface.html":{}}}],["src/employee/interface/employee.interface.ts:9",{"_index":491,"title":{},"body":{"interfaces/EmployeeInterface.html":{}}}],["src/main.ts",{"_index":727,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/product/dtos/create",{"_index":339,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/product/dtos/update",{"_index":636,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/product/interface/product.interface.ts",{"_index":568,"title":{},"body":{"interfaces/ProductInterface.html":{},"coverage.html":{}}}],["src/product/interface/product.interface.ts:10",{"_index":570,"title":{},"body":{"interfaces/ProductInterface.html":{}}}],["src/product/interface/product.interface.ts:6",{"_index":569,"title":{},"body":{"interfaces/ProductInterface.html":{}}}],["src/product/interface/product.interface.ts:7",{"_index":572,"title":{},"body":{"interfaces/ProductInterface.html":{}}}],["src/product/interface/product.interface.ts:8",{"_index":571,"title":{},"body":{"interfaces/ProductInterface.html":{}}}],["src/product/interface/product.interface.ts:9",{"_index":573,"title":{},"body":{"interfaces/ProductInterface.html":{}}}],["src/product/product.controller.ts",{"_index":529,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/product/product.controller.ts:23",{"_index":537,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:31",{"_index":544,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:42",{"_index":542,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:56",{"_index":547,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:70",{"_index":539,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.module.ts",{"_index":578,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.schema.ts",{"_index":523,"title":{},"body":{"classes/Product.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/product/product.schema.ts:10",{"_index":524,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.schema.ts:16",{"_index":525,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.service.ts",{"_index":582,"title":{},"body":{"injectables/ProductServiceImpl.html":{},"coverage.html":{}}}],["src/product/product.service.ts:10",{"_index":584,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["src/product/product.service.ts:16",{"_index":586,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["src/product/product.service.ts:21",{"_index":589,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["src/product/product.service.ts:25",{"_index":588,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["src/product/product.service.ts:29",{"_index":590,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["src/product/product.service.ts:33",{"_index":587,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["src/swagger/swagger.config.ts",{"_index":729,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/swagger/swagger.ts",{"_index":731,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user/dtos/create",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/interfaces/user.interface",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SignInProvider.html":{}}}],["src/user/interfaces/user.interface.ts",{"_index":673,"title":{},"body":{"interfaces/UserInterface.html":{},"coverage.html":{}}}],["src/user/interfaces/user.interface.ts:5",{"_index":675,"title":{},"body":{"interfaces/UserInterface.html":{}}}],["src/user/interfaces/user.interface.ts:6",{"_index":678,"title":{},"body":{"interfaces/UserInterface.html":{}}}],["src/user/interfaces/user.interface.ts:7",{"_index":679,"title":{},"body":{"interfaces/UserInterface.html":{}}}],["src/user/interfaces/user.interface.ts:8",{"_index":676,"title":{},"body":{"interfaces/UserInterface.html":{}}}],["src/user/providers/create",{"_index":365,"title":{},"body":{"injectables/CreateUserProvider.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":650,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:27",{"_index":657,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:38",{"_index":654,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module",{"_index":242,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/user/user.module.ts",{"_index":685,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.schema",{"_index":230,"title":{},"body":{"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["src/user/user.schema.ts",{"_index":639,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.schema.ts:10",{"_index":646,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.schema.ts:16",{"_index":643,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.schema.ts:23",{"_index":645,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.schema.ts:29",{"_index":640,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.service.ts",{"_index":692,"title":{},"body":{"injectables/UserServiceImpl.html":{},"coverage.html":{}}}],["src/user/user.service.ts:12",{"_index":693,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["src/user/user.service.ts:24",{"_index":694,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["src/user/user.service.ts:28",{"_index":696,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["src/user/user.service.ts:37",{"_index":697,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["src/user/user.service.ts:46",{"_index":695,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["start",{"_index":796,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":799,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":801,"title":{},"body":{"index.html":{}}}],["started",{"_index":775,"title":{"index.html":{}},"body":{}}],["starter",{"_index":787,"title":{},"body":{"index.html":{}}}],["statements",{"_index":711,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"dependencies.html":{}}}],["status",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["stay",{"_index":876,"title":{},"body":{"index.html":{}}}],["steps",{"_index":814,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":832,"title":{},"body":{"index.html":{}}}],["string",{"_index":36,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"classes/SignInDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":85,"title":{},"body":{"interfaces/ActiveUserData.html":{},"injectables/SignInProvider.html":{}}}],["successfully",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["successfully'})@apiresponse({status",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["summary",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["support",{"_index":854,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":905,"title":{},"body":{"modules.html":{}}}],["swaggerconfig",{"_index":730,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":734,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":733,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":815,"title":{},"body":{"index.html":{}}}],["test",{"_index":804,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":807,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":806,"title":{},"body":{"index.html":{}}}],["tests",{"_index":802,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":890,"title":{},"body":{"index.html":{}}}],["this.accesstokenguard",{"_index":272,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.appservice.gethello",{"_index":100,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.signin(signindto",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authtypeguardmap",{"_index":270,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.authtypeguardmap[type]).flat",{"_index":279,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.createuserprovider.createuser(createuserdto",{"_index":703,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["this.employeeinterface.createemployee(createemployeedto",{"_index":467,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeinterface.deleteemployee(id",{"_index":484,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeinterface.findallemployees",{"_index":472,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeinterface.findemployeebyid(id",{"_index":470,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeinterface.updateemployee(id",{"_index":479,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeemodel(createemployeedto",{"_index":512,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["this.employeemodel.find().exec",{"_index":515,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["this.employeemodel.findbyid(id).exec",{"_index":514,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["this.employeemodel.findbyidanddelete(id).exec",{"_index":518,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["this.employeemodel.findbyidandupdate(id",{"_index":516,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["this.extracttokenfromheader(request",{"_index":61,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.hashingprovider.comparepassword",{"_index":613,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.hashingprovider.hashpassword(createuserdto.password",{"_index":387,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["this.jwtconfiguration",{"_index":68,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.jwtconfiguration.accesstokenttl",{"_index":629,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.jwtconfiguration.audience",{"_index":623,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.jwtconfiguration.issuer",{"_index":625,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.jwtconfiguration.secret",{"_index":627,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.jwtservice.signasync",{"_index":619,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.jwtservice.verifyasync",{"_index":67,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.productinterface.createproduct(createproductdto",{"_index":556,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productinterface.deleteproduct(id",{"_index":567,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productinterface.findallproducts",{"_index":560,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productinterface.findproductbyid(id",{"_index":558,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productinterface.updateproduct(id",{"_index":564,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productmodel(createproductdto",{"_index":593,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["this.productmodel.find().exec",{"_index":596,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["this.productmodel.findbyid(id).exec",{"_index":595,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["this.productmodel.findbyidanddelete(id).exec",{"_index":598,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["this.productmodel.findbyidandupdate(id",{"_index":597,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["this.reflector.getallandoverride",{"_index":274,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.signinprovider.signin(signindto",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userinterface.createuser(createuserdto",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userinterface.findallusers",{"_index":671,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userinterface.finduserbyemail(email",{"_index":665,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userinterface.finduserbyemail(signindto.email",{"_index":608,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.userinterface.finduserbyid(id",{"_index":668,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usermodel",{"_index":389,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["this.usermodel.find().exec",{"_index":707,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["this.usermodel.findbyid(id).exec",{"_index":706,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["this.usermodel.findone",{"_index":705,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["this.usermodel.findone({email}).exec",{"_index":384,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["throw",{"_index":62,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"controllers/ProductController.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{}}}],["time",{"_index":869,"title":{},"body":{"index.html":{}}}],["token",{"_index":59,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/EmployeeController.html":{},"controllers/ProductController.html":{},"miscellaneous/variables.html":{}}}],["token')@apioperation({summary",{"_index":419,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["token.guard",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{}}}],["token.guard.ts",{"_index":8,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{}}}],["token.guard.ts:15",{"_index":21,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard.ts:22",{"_index":29,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard.ts:43",{"_index":35,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token/access",{"_index":7,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["touch",{"_index":895,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":72,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"classes/Employee.html":{},"injectables/EmployeeServiceImpl.html":{},"classes/Product.html":{},"injectables/ProductServiceImpl.html":{},"classes/User.html":{}}}],["try",{"_index":64,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"injectables/SignInProvider.html":{}}}],["twitter",{"_index":901,"title":{},"body":{"index.html":{}}}],["type",{"_index":25,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"controllers/EmployeeController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["type.enum.ts",{"_index":765,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typeorm",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["types",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":786,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":41,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/SignInProvider.html":{}}}],["unauthorizedexception('invalid",{"_index":609,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["undefined",{"_index":37,"title":{},"body":{"guards/AccessTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["unique",{"_index":642,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":803,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["unlicensed",{"_index":913,"title":{},"body":{"properties.html":{}}}],["update",{"_index":446,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["updated",{"_index":449,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/ProductController.html":{}}}],["updatedemployee",{"_index":478,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["updatedproduct",{"_index":563,"title":{},"body":{"controllers/ProductController.html":{}}}],["updateemployee",{"_index":416,"title":{},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["updateemployee(@param('id",{"_index":477,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["updateemployee(id",{"_index":443,"title":{},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["updateemployeedto",{"_index":444,"title":{"classes/UpdateEmployeeDto.html":{}},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{},"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["updateemployeedto})@apiresponse({status",{"_index":448,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["updateproduct",{"_index":534,"title":{},"body":{"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{}}}],["updateproduct(@param('id",{"_index":562,"title":{},"body":{"controllers/ProductController.html":{}}}],["updateproduct(id",{"_index":545,"title":{},"body":{"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{}}}],["updateproductdto",{"_index":546,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updates",{"_index":878,"title":{},"body":{"index.html":{}}}],["uri",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useclass",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["used",{"_index":294,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["useexisting",{"_index":245,"title":{},"body":{"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["usefactory",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":454,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["user",{"_index":81,"title":{"classes/User.html":{}},"body":{"interfaces/ActiveUserData.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateUserProvider.html":{},"injectables/SignInProvider.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":86,"title":{},"body":{"interfaces/ActiveUserData.html":{}}}],["user._id",{"_index":620,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["user.controller",{"_index":687,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator.ts",{"_index":718,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CreateUserProvider.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["user.dto.ts",{"_index":350,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":357,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:17",{"_index":359,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:21",{"_index":355,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":360,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":621,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["user.name",{"_index":691,"title":{},"body":{"modules/UserModule.html":{}}}],["user.password",{"_index":615,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["user.provider",{"_index":690,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{}}}],["user.provider.ts",{"_index":366,"title":{},"body":{"injectables/CreateUserProvider.html":{},"coverage.html":{}}}],["user.provider.ts:18",{"_index":373,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["user.provider.ts:9",{"_index":370,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["user.schema",{"_index":377,"title":{},"body":{"injectables/CreateUserProvider.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{}}}],["user.service",{"_index":688,"title":{},"body":{"modules/UserModule.html":{}}}],["user.toobject",{"_index":631,"title":{},"body":{"injectables/SignInProvider.html":{},"injectables/UserServiceImpl.html":{}}}],["user/user.module",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["user?.[field",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":649,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userinterface",{"_index":206,"title":{"interfaces/UserInterface.html":{}},"body":{"controllers/AuthController.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{},"overview.html":{}}}],["usermodel",{"_index":371,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/UserServiceImpl.html":{}}}],["usermodule",{"_index":116,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":353,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["userobject",{"_index":630,"title":{},"body":{"injectables/SignInProvider.html":{},"injectables/UserServiceImpl.html":{}}}],["userobject.password",{"_index":632,"title":{},"body":{"injectables/SignInProvider.html":{},"injectables/UserServiceImpl.html":{}}}],["users",{"_index":670,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{}}}],["users.length",{"_index":672,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{}}}],["userschema",{"_index":647,"title":{},"body":{"classes/User.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userserviceimpl",{"_index":684,"title":{"injectables/UserServiceImpl.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":870,"title":{},"body":{"index.html":{}}}],["validator",{"_index":337,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"dependencies.html":{}}}],["value",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":914,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":911,"title":{},"body":{"properties.html":{}}}],["video",{"_index":862,"title":{},"body":{"index.html":{}}}],["visit",{"_index":851,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":865,"title":{},"body":{"index.html":{}}}],["watch",{"_index":797,"title":{},"body":{"index.html":{}}}],["website",{"_index":899,"title":{},"body":{"index.html":{}}}],["working",{"_index":850,"title":{},"body":{"index.html":{}}}],["x",{"_index":880,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":894,"title":{},"body":{"index.html":{}}}],["you're",{"_index":808,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AccessTokenGuard.html":{"url":"guards/AccessTokenGuard.html","title":"guard - AccessTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AccessTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/access-token/access-token.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConfiguration: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/access-token/access-token.guard.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/access-token/access-token.guard.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractTokenFromHeader(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/access-token/access-token.guard.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ConfigType } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport jwtConfig from 'src/auth/config/jwt.config';\nimport { Request } from 'express';\nimport { REQUEST_USER_KEY } from 'src/auth/constants/auth.constants';\n\n@Injectable()\nexport class AccessTokenGuard implements CanActivate {\n  constructor(\n    private readonly jwtService: JwtService,\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConfiguration: ConfigType,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    // Extract the request from the execution context\n    const request = context.switchToHttp().getRequest();\n    // Extract the token from the header\n    const token = this.extractTokenFromHeader(request);\n\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n    try {\n      const payload = await this.jwtService.verifyAsync(\n        token,\n        this.jwtConfiguration,\n      );\n      request[REQUEST_USER_KEY] = payload;\n    } catch {\n      throw new UnauthorizedException();\n    }\n    return true;\n  }\n\n  private extractTokenFromHeader(request: Request): string | undefined {\n    const [_, token] = request.headers.authorization?.split(' ') ?? [];\n    return token;\n  }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActiveUserData.html":{"url":"interfaces/ActiveUserData.html","title":"interface - ActiveUserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActiveUserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/active-user-data.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's email address\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of the user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ActiveUserData {\n  /**\n   * The ID of the user\n   */\n  sub: number;\n\n  /**\n   * User's email address\n   */\n  email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nAppModule -->\n\nEmployeeModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            EmployeeModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AuthModule } from './auth/auth.module';\nimport { UserModule } from './user/user.module';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { EmployeeModule } from './employee/employee.module';\nimport { ProductModule } from './product/product.module';\nimport { APP_GUARD } from '@nestjs/core';\nimport { AuthenticationGuard } from './auth/guards/authentication/authentication.guard';\nimport { AccessTokenGuard } from './auth/guards/access-token/access-token.guard';\nimport { JwtModule } from '@nestjs/jwt';\nimport jwtConfig from './auth/config/jwt.config';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: ['.env', '.env.local'], \n    }),\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'public'),\n      exclude: ['/api*'], \n    }),\n    MongooseModule.forRootAsync({ \n      imports: [\n        ConfigModule\n      ],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGODB_URI'),\n        dbName: configService.get('MONGODB_NAME'),\n      }),\n      inject: [ConfigService],\n    }),\n    ConfigModule.forFeature(jwtConfig), \n    JwtModule.registerAsync(jwtConfig.asProvider()),\n    AuthModule,\n    UserModule,\n    EmployeeModule,\n    ProductModule\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_GUARD,\n      useClass: AuthenticationGuard,\n    },\n    AccessTokenGuard,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello KoKo Shine!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                register\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiOperation({summary: 'User Registration'})@ApiBody({type: CreateUserDto})@ApiResponse({status: 201, description: 'User registered successfully'})@ApiResponse({status: 409, description: 'User with this email already exists'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signIn')@Auth(AuthType.None)@ApiOperation({summary: 'User Sign In'})@ApiBody({type: SignInDto})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Inject, Post } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { ApiBody, ApiOperation, ApiResponse } from '@nestjs/swagger';\nimport { SignInDto } from './dtos/signin.dto';\nimport { UserInterface } from 'src/user/interfaces/user.interface';\nimport { CreateUserDto } from 'src/user/dtos/create-user.dto';\nimport { Auth } from './decorators/auth.decorator';\nimport { AuthType } from './enums/auth-type.enum';\n\n@Controller('auth')\nexport class AuthController {\n    constructor(\n        private readonly authService: AuthService,\n\n        @Inject('UserInterface')\n        private readonly userInterface: UserInterface\n    ){}\n\n    @Post('register')\n    @ApiOperation({ summary: 'User Registration' })\n    @ApiBody({ type: CreateUserDto })\n    @ApiResponse({ status: 201, description: 'User registered successfully' })\n    @ApiResponse({ status: 409, description: 'User with this email already exists' })\n    async register(@Body() createUserDto: CreateUserDto){\n        return await this.userInterface.createUser(createUserDto);\n    }\n\n    @Post('signIn')\n    @Auth(AuthType.None)\n    @ApiOperation({ summary: 'User Sign In' })\n    @ApiBody({ type: SignInDto })\n    async signIn(@Body() signInDto: any) {\n        return this.authService.signIn(signInDto);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthInterface.html":{"url":"interfaces/AuthInterface.html","title":"interface - AuthInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/auth.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        signIn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(signInDto: SignInDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/auth.interface.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { User } from \"src/user/user.schema\";\nimport { SignInDto } from \"../dtos/signin.dto\";\n\nexport interface AuthInterface {\n    signIn(signInDto: SignInDto): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthInterface \n\nAuthInterface \n\n\n\nAuthService \n\nAuthService \n\n\n\nHashingProvider \n\nHashingProvider \n\n\n\nAuthModule\n\nAuthModule\n\nAuthInterface  -->\n\nAuthModule->AuthInterface \n\n\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nHashingProvider  -->\n\nAuthModule->HashingProvider \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nSignInProvider\n\nSignInProvider\n\nAuthModule -->\n\nSignInProvider->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            SignInProvider\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthInterface\n                        \n                        \n                            AuthService\n                        \n                        \n                            HashingProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { HashingProvider } from './providers/hashing.provider';\nimport { BcryptProvider } from './providers/bcrypt.provider';\nimport { UserModule } from 'src/user/user.module';\nimport { SignInProvider } from './providers/signin.provider';\nimport { ConfigModule } from '@nestjs/config';\nimport jwtConfig from './config/jwt.config';\nimport { JwtModule } from '@nestjs/jwt';\n\n@Module({\n  providers: [\n    AuthService,\n    SignInProvider,\n    {\n      provide: HashingProvider,\n      useClass: BcryptProvider,\n    },\n    {\n      provide: 'AuthInterface',\n      useExisting: AuthService,\n    },\n  ],\n  controllers: [AuthController],\n  exports: [\n    AuthService,\n    HashingProvider,\n    'AuthInterface'\n  ],\n  imports: [\n    forwardRef(() => UserModule),\n    ConfigModule.forFeature(jwtConfig),\n    JwtModule.registerAsync(jwtConfig.asProvider())\n  ], \n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(signInProvider: SignInProvider)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        signInProvider\n                                                  \n                                                        \n                                                                        SignInProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { SignInDto } from './dtos/signin.dto';\nimport { SignInProvider } from './providers/signin.provider';\nimport { AuthInterface } from './interfaces/auth.interface';\nimport { User } from 'src/user/user.schema';\n\n@Injectable()\nexport class AuthService implements AuthInterface {\n    constructor(\n        private readonly signInProvider: SignInProvider,\n    ){}\n\n    async signIn(signInDto: SignInDto): Promise {\n        return await this.signInProvider.signIn(signInDto);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/authentication/authentication.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authTypeGuardMap\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                defaultAuthType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, accessTokenGuard: AccessTokenGuard)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/authentication/authentication.guard.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessTokenGuard\n                                                  \n                                                        \n                                                                        AccessTokenGuard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/authentication/authentication.guard.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\n\nimport { AUTH_TYPE_KEY } from 'src/auth/decorators/auth.decorator';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\nimport { Observable } from 'rxjs';\nimport { Reflector } from '@nestjs/core';\nimport { AccessTokenGuard } from '../access-token/access-token.guard';\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  // Set the default Auth Type\n  private static readonly defaultAuthType = AuthType.None;\n\n  private readonly authTypeGuardMap: Record;\n\n  constructor(\n    private readonly reflector: Reflector,\n    private readonly accessTokenGuard: AccessTokenGuard,\n  ) {\n    this.authTypeGuardMap = {\n      [AuthType.Bearer]: this.accessTokenGuard,\n      [AuthType.None]: { canActivate: () => true },\n    }\n  }\n\n  // private readonly authTypeGuardMap: Record = {\n  //   [AuthType.Bearer]: this.accessTokenGuard,\n  //   [AuthType.None]: { canActivate: () => true },\n  // };\n\n  async canActivate(context: ExecutionContext): Promise {\n    const authTypes = this.reflector.getAllAndOverride(\n      AUTH_TYPE_KEY,\n      [context.getHandler(), context.getClass()],\n    ) ?? [AuthenticationGuard.defaultAuthType];\n\n    const guards = authTypes.map((type) => this.authTypeGuardMap[type]).flat();\n\n    // Declare the default error\n    let error = new UnauthorizedException();\n\n    for (const instance of guards) {\n      // Decalre a new constant\n      const canActivate = await Promise.resolve(\n        // Here the AccessToken Guard Will be fired and check if user has permissions to acces\n        // Later Multiple AuthTypes can be used even if one of them returns true\n        // The user is Authorised to access the resource\n        instance.canActivate(context),\n      ).catch((err) => {\n        error = err;\n      });\n\n      if (canActivate) {\n        return true;\n      }\n    }\n\n    throw error;\n  }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BcryptProvider.html":{"url":"injectables/BcryptProvider.html","title":"injectable - BcryptProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BcryptProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/bcrypt.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                comparePassword\n                            \n                            \n                                    Public\n                                    Async\n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        comparePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    comparePassword(data: string | Buffer, encrypted: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/bcrypt.provider.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                encrypted\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPassword(data: string | Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/bcrypt.provider.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as bcrypt from 'bcrypt';\nimport { Injectable } from '@nestjs/common';\nimport { HashingProvider } from './hashing.provider';\n\n@Injectable()\nexport class BcryptProvider implements HashingProvider {\n  public async hashPassword(data: string | Buffer): Promise {\n    // Generate the salt\n    const salt = await bcrypt.genSalt();\n    return bcrypt.hash(data, salt);\n  }\n\n  public async comparePassword(\n    data: string | Buffer,\n    encrypted: string,\n  ): Promise {\n    return bcrypt.compare(data, encrypted);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEmployeeDto.html":{"url":"classes/CreateEmployeeDto.html","title":"class - CreateEmployeeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEmployeeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/dtos/create-employee.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                joinedDate\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                position\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dtos/create-employee.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        joinedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dtos/create-employee.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dtos/create-employee.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dtos/create-employee.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dtos/create-employee.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsDateString, IsNotEmpty, IsString } from \"class-validator\";\n\nexport class CreateEmployeeDto {\n\n    @ApiProperty()\n    @IsNotEmpty()\n    @IsString()\n    name: string;\n\n    @ApiProperty()\n    @IsNotEmpty()\n    @IsString()\n    phoneNumber: string;\n\n    @ApiProperty()\n    @IsNotEmpty()\n    @IsString()\n    address: string;\n\n    @ApiProperty()\n    @IsNotEmpty()\n    @IsString()\n    position: string;\n\n    @ApiProperty()\n    @IsNotEmpty()\n    @IsDateString()\n    joinedDate: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dtos/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dtos/create-product.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'The price of per product'})@IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dtos/create-product.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsNotEmpty, IsNumber, IsPositive, IsString } from \"class-validator\";\n\nexport class CreateProductDto {\n    @ApiProperty()\n    @IsNotEmpty()\n    @IsString()\n    name: string;\n\n    @ApiProperty({type: Number, description: 'The price of per product'})\n    @IsNumber()\n    @IsPositive()\n    price: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                dateOfBirth\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsDateString, IsEmail, IsNotEmpty, IsString, MinLength } from \"class-validator\";\n\nexport class CreateUserDto {\n    @ApiProperty()\n    @IsNotEmpty()\n    @IsString()\n    username: string;\n\n    @ApiProperty()\n    @IsEmail()\n    email: string;\n\n    @ApiProperty()\n    @IsNotEmpty()\n    @MinLength(6)\n    password: string;\n\n    @ApiProperty()\n    @IsDateString()\n    dateOfBirth: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUserProvider.html":{"url":"injectables/CreateUserProvider.html","title":"injectable - CreateUserProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateUserProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/providers/create-user.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, hashingProvider: HashingProvider)\n                    \n                \n                        \n                            \n                                Defined in src/user/providers/create-user.provider.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hashingProvider\n                                                  \n                                                        \n                                                                        HashingProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/providers/create-user.provider.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, forwardRef, Inject, Injectable, InternalServerErrorException } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { User } from \"../user.schema\";\nimport { Model } from \"mongoose\";\nimport { HashingProvider } from \"src/auth/providers/hashing.provider\";\nimport { CreateUserDto } from \"../dtos/create-user.dto\";\n\n@Injectable()\nexport class CreateUserProvider {\n    constructor(\n        @InjectModel(User.name)\n        private readonly userModel: Model,\n\n        @Inject(forwardRef(() => HashingProvider))\n        private readonly hashingProvider: HashingProvider,\n    ) {}\n\n    async createUser(createUserDto: CreateUserDto): Promise {\n        const {email} = createUserDto;\n        const existingUser = await this.userModel.findOne({email}).exec();\n\n        if (existingUser) {\n            throw new ConflictException('User with this email already exists')\n        }\n\n        try {\n            const hashedPassword = await this.hashingProvider.hashPassword(createUserDto.password);\n            const newUser = new this.userModel({\n                ...createUserDto,\n                password: hashedPassword,\n            });\n            return await newUser.save();\n        } catch (error) {\n            throw new InternalServerErrorException('Failed to create a user: ', error);\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Employee.html":{"url":"classes/Employee.html","title":"class - Employee","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Employee\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/employee.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                joinedDate\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                position\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/employee.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/employee.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/employee.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/employee.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/employee.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from 'mongoose';\n\n@Schema()\nexport class Employee extends Document {\n    @Prop({\n        type: String,\n        required: true,\n    })\n    name: string;\n\n    @Prop({\n        type: String,\n        required: true,\n    })\n    phoneNumber: string;\n\n    @Prop({\n        type: String,\n        required: true,\n    })\n    address: string;\n\n    @Prop({\n        type: String,\n        required: true,\n    })\n    position: string;\n\n    @Prop({\n        type: Date,\n        required: true,\n    })\n    joinedDate: Date;\n}\n\nexport const EmployeeSchema = SchemaFactory.createForClass(Employee);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EmployeeController.html":{"url":"controllers/EmployeeController.html","title":"controller - EmployeeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EmployeeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/employee.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                employee\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createEmployee\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteEmployee\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAllEmployees\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findEmployeeById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateEmployee\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createEmployee\n                        \n                    \n                \n            \n            \n                \n                        \n                    createEmployee(createEmployeeDto: CreateEmployeeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Auth(AuthType.Bearer)@ApiBearerAuth('bearer-token')@ApiOperation({summary: 'Create a new employee'})@ApiBody({type: CreateEmployeeDto})@ApiResponse({status: 201, description: 'Employee created successfully'})@ApiResponse({status: 400, description: 'Bad Request'})\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createEmployeeDto\n                                            \n                                                            CreateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteEmployee\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteEmployee(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@Auth(AuthType.Bearer)@ApiBearerAuth('bearer-token')@ApiOperation({summary: 'Delete an employee by ID'})@ApiResponse({status: 200, description: 'Employee deleted successfully'})@ApiResponse({status: 404, description: 'Employee not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findAllEmployees\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllEmployees()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Find all employees'})@ApiResponse({status: 200, description: 'Employees found successfully'})\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        findEmployeeById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findEmployeeById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({summary: 'Find an employee by ID'})@ApiResponse({status: 200, description: 'Employee found successfully'})@ApiResponse({status: 404, description: 'Employee not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        updateEmployee\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEmployee(id: string, updateEmployeeDto: UpdateEmployeeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')@Auth(AuthType.Bearer)@ApiBearerAuth('bearer-token')@ApiOperation({summary: 'Update an employee by ID'})@ApiBody({type: UpdateEmployeeDto})@ApiResponse({status: 200, description: 'Employee updated successfully'})@ApiResponse({status: 404, description: 'Employee not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateEmployeeDto\n                                            \n                                                            UpdateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Inject, NotFoundException, UseGuards } from '@nestjs/common';\nimport { CreateEmployeeDto } from './dtos/create-employee.dto';\nimport { UpdateEmployeeDto } from './dtos/update-employee.dto';\nimport { EmployeeInterface } from './interface/employee.interface';\nimport { ApiBearerAuth, ApiBody, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Auth } from 'src/auth/decorators/auth.decorator';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\n\n@ApiTags('Employee')  \n@Controller('employee')\nexport class EmployeeController {\n  constructor(\n    @Inject('EmployeeInterface')\n    private readonly employeeInterface: EmployeeInterface\n  ) {}\n\n  @Post()\n  @Auth(AuthType.Bearer)\n  @ApiBearerAuth('bearer-token')\n  @ApiOperation({ summary: 'Create a new employee' })\n  @ApiBody({ type: CreateEmployeeDto })\n  @ApiResponse({ status: 201, description: 'Employee created successfully' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  async createEmployee(@Body() createEmployeeDto: CreateEmployeeDto) {\n    return await this.employeeInterface.createEmployee(createEmployeeDto);\n  }\n\n  @Get('/:id')\n  @ApiOperation({ summary: 'Find an employee by ID' })\n  @ApiResponse({ status: 200, description: 'Employee found successfully' })\n  @ApiResponse({ status: 404, description: 'Employee not found' })\n  async findEmployeeById(@Param('id') id: string) {\n    const employee = await this.employeeInterface.findEmployeeById(id);\n    if (!employee) {\n      throw new NotFoundException('Employee not found');\n    }\n    return employee;\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Find all employees' })\n  @ApiResponse({ status: 200, description: 'Employees found successfully' })\n  async findAllEmployees() {  \n    const employees = await this.employeeInterface.findAllEmployees();\n    if (!employees || employees.length === 0) {\n      throw new NotFoundException('No employees found');\n    }\n    return employees;\n  }\n\n  @Patch('/:id')\n  @Auth(AuthType.Bearer)\n  @ApiBearerAuth('bearer-token')\n  @ApiOperation({ summary: 'Update an employee by ID' })\n  @ApiBody({ type: UpdateEmployeeDto })\n  @ApiResponse({ status: 200, description: 'Employee updated successfully' })\n  @ApiResponse({ status: 404, description: 'Employee not found' })  \n  async updateEmployee(@Param('id') id: string, @Body() updateEmployeeDto: UpdateEmployeeDto) {\n    try {\n      const updatedEmployee = await this.employeeInterface.updateEmployee(id, updateEmployeeDto);\n      if (!updatedEmployee) {\n        throw new NotFoundException('Employee not found');\n      }\n      return updatedEmployee;\n    } catch (err) {\n      console.error('Update error:', err); \n      throw err;\n    }\n  }\n\n  @Delete('/:id')\n  @Auth(AuthType.Bearer)\n  @ApiBearerAuth('bearer-token')\n  @ApiOperation({ summary: 'Delete an employee by ID' })\n  @ApiResponse({ status: 200, description: 'Employee deleted successfully' })\n  @ApiResponse({ status: 404, description: 'Employee not found' })\n  async deleteEmployee(@Param('id') id: string) {\n    const deletedEmployee = await this.employeeInterface.deleteEmployee(id);\n    if (!deletedEmployee) {\n      throw new NotFoundException('Employee not found');\n    }\n    return {\n      message: 'Employee deleted successfully',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmployeeInterface.html":{"url":"interfaces/EmployeeInterface.html","title":"interface - EmployeeInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EmployeeInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/interface/employee.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createEmployee\n                                    \n                                \n                                \n                                    \n                                        deleteEmployee\n                                    \n                                \n                                \n                                    \n                                        findAllEmployees\n                                    \n                                \n                                \n                                    \n                                        findEmployeeById\n                                    \n                                \n                                \n                                    \n                                        updateEmployee\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createEmployee\n                        \n                    \n                \n            \n            \n                \ncreateEmployee(createEmployeeDto: CreateEmployeeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/interface/employee.interface.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createEmployeeDto\n                                            \n                                                            CreateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEmployee\n                        \n                    \n                \n            \n            \n                \ndeleteEmployee(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/interface/employee.interface.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllEmployees\n                        \n                    \n                \n            \n            \n                \nfindAllEmployees()\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/interface/employee.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findEmployeeById\n                        \n                    \n                \n            \n            \n                \nfindEmployeeById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/interface/employee.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEmployee\n                        \n                    \n                \n            \n            \n                \nupdateEmployee(id: string, updateEmployeeDto: UpdateEmployeeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/interface/employee.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateEmployeeDto\n                                            \n                                                            UpdateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CreateEmployeeDto } from \"../dtos/create-employee.dto\";\nimport { UpdateEmployeeDto } from \"../dtos/update-employee.dto\";\nimport { Employee } from \"../employee.schema\";\n\nexport interface EmployeeInterface {\n    createEmployee(createEmployeeDto: CreateEmployeeDto): Promise;\n    findEmployeeById(id: string): Promise;\n    findAllEmployees(): Promise;\n    updateEmployee(id: string, updateEmployeeDto: UpdateEmployeeDto): Promise;\n    deleteEmployee(id: string): Promise;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmployeeModule.html":{"url":"modules/EmployeeModule.html","title":"module - EmployeeModule","body":"\n                   \n\n\n\n\n    Modules\n    EmployeeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EmployeeModule\n\n\n\ncluster_EmployeeModule_providers\n\n\n\n\nEmployeeServiceImpl\n\nEmployeeServiceImpl\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nEmployeeModule -->\n\nEmployeeServiceImpl->EmployeeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/employee/employee.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmployeeServiceImpl\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EmployeeController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { EmployeeServiceImpl } from './employee.service';\nimport { EmployeeController } from './employee.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Employee, EmployeeSchema } from './employee.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Employee.name,\n        schema: EmployeeSchema,\n      },\n    ])\n  ],\n  controllers: [EmployeeController],\n  providers: [\n    EmployeeServiceImpl,\n    {\n      provide: 'EmployeeInterface',\n      useExisting: EmployeeServiceImpl,\n    }\n  ],\n})\nexport class EmployeeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmployeeServiceImpl.html":{"url":"injectables/EmployeeServiceImpl.html","title":"injectable - EmployeeServiceImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmployeeServiceImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/employee.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createEmployee\n                            \n                            \n                                deleteEmployee\n                            \n                            \n                                    Async\n                                findAllEmployees\n                            \n                            \n                                    Async\n                                findEmployeeById\n                            \n                            \n                                    Async\n                                updateEmployee\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(employeeModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/employee/employee.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        employeeModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createEmployee\n                        \n                    \n                \n            \n            \n                \n                        \n                    createEmployee(createEmployeeDto: CreateEmployeeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/employee.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createEmployeeDto\n                                            \n                                                            CreateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEmployee\n                        \n                    \n                \n            \n            \n                \ndeleteEmployee(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/employee.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllEmployees\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllEmployees()\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/employee.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findEmployeeById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findEmployeeById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/employee.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateEmployee\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEmployee(id: string, updateEmployeeDto: UpdateEmployeeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/employee.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateEmployeeDto\n                                            \n                                                            UpdateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateEmployeeDto } from './dtos/create-employee.dto';\nimport { UpdateEmployeeDto } from './dtos/update-employee.dto';\nimport { EmployeeInterface } from './interface/employee.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Employee } from './employee.schema';\nimport { Model } from 'mongoose';\n\n@Injectable()\nexport class EmployeeServiceImpl implements EmployeeInterface {\n  \n  constructor(\n    @InjectModel(Employee.name)\n    private readonly employeeModel: Model,\n  ) {}\n  async createEmployee(createEmployeeDto: CreateEmployeeDto): Promise {\n    const createdEmployee = new this.employeeModel(createEmployeeDto);\n    return createdEmployee.save();\n  }\n\n  async findEmployeeById(id: string): Promise {\n    return this.employeeModel.findById(id).exec();\n  }\n  async findAllEmployees(): Promise {\n    return this.employeeModel.find().exec();\n  }\n  async updateEmployee(id: string, updateEmployeeDto: UpdateEmployeeDto): Promise {\n    return this.employeeModel.findByIdAndUpdate(id, updateEmployeeDto, { new: true }).exec();\n  }\n  deleteEmployee(id: string): Promise {\n    return this.employeeModel.findByIdAndDelete(id).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HashingProvider.html":{"url":"injectables/HashingProvider.html","title":"injectable - HashingProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HashingProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/hashing.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                comparePassword\n                            \n                            \n                                    Abstract\n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        comparePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    comparePassword(data: string | Buffer, encrypted: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/hashing.provider.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                encrypted\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPassword(data: string | Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/hashing.provider.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport abstract class HashingProvider {\n  abstract hashPassword(data: string | Buffer): Promise;\n\n  abstract comparePassword(\n    data: string | Buffer,\n    encrypted: string,\n  ): Promise;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/product.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/product.schema.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from 'mongoose';\n\n@Schema()\nexport class Product extends Document {\n    @Prop({\n        type: String,\n        required: true,\n    })\n    name: string;\n\n    @Prop({\n        type: Number,\n        required: true,\n    })\n    price: number;\n}\n\nexport const ProductSchema = SchemaFactory.createForClass(Product);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createProduct\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAllProducts\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findProductById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProduct(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Auth(AuthType.Bearer)@ApiBearerAuth('bearer-token')@ApiOperation({summary: 'Create a new product'})@ApiResponse({status: 201, description: 'Product created successfully'})@ApiResponse({status: 400, description: 'Bad Request'})\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProduct(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@Auth(AuthType.Bearer)@ApiBearerAuth('bearer-token')@ApiOperation({summary: 'Delete a product by ID'})@ApiResponse({status: 200, description: 'Product deleted successfully'})@ApiResponse({status: 404, description: 'Product not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findAllProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllProducts()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Find all products'})@ApiResponse({status: 200, description: 'Products found successfully'})\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        findProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({summary: 'Find a product by ID'})@ApiResponse({status: 200, description: 'Product found successfully'})@ApiResponse({status: 404, description: 'Product not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProduct(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')@Auth(AuthType.Bearer)@ApiBearerAuth('bearer-token')@ApiOperation({summary: 'Update a product by ID'})@ApiResponse({status: 200, description: 'Product updated successfully'})@ApiResponse({status: 404, description: 'Product not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Inject, NotFoundException, Param, Patch, Post } from '@nestjs/common';\nimport { ApiBearerAuth, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { ProductInterface } from './interface/product.interface';\nimport { CreateProductDto } from './dtos/create-product.dto';\nimport { Auth } from 'src/auth/decorators/auth.decorator';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\nimport { UpdateProductDto } from './dtos/update-prodcut.dto';\n\n@ApiTags('Product')\n@Controller('product')\nexport class ProductController {\n    constructor(\n        @Inject('ProductInterface')\n        private readonly productInterface: ProductInterface,\n    ){}\n\n    @Post()\n    @Auth(AuthType.Bearer)\n    @ApiBearerAuth('bearer-token')\n    @ApiOperation({ summary: 'Create a new product' })\n    @ApiResponse({ status: 201, description: 'Product created successfully' })\n    @ApiResponse({ status: 400, description: 'Bad Request' })\n    async createProduct(@Body() createProductDto: CreateProductDto) {\n        return this.productInterface.createProduct(createProductDto);\n    }\n\n    @Get('/:id')\n    @ApiOperation({ summary: 'Find a product by ID' })\n    @ApiResponse({ status: 200, description: 'Product found successfully' })\n    @ApiResponse({ status: 404, description: 'Product not found' })\n    async findProductById(@Param('id') id: string) {\n        const product = await this.productInterface.findProductById(id);\n        if (!product) {\n            throw new NotFoundException('Product not found');\n        }\n        return product;\n    }\n\n    @Get()\n    @ApiOperation({ summary: 'Find all products' })\n    @ApiResponse({ status: 200, description: 'Products found successfully' })\n    async findAllProducts() {\n        const products = await this.productInterface.findAllProducts();\n        if (!products || products.length === 0) {\n            throw new NotFoundException('No products found');\n        }\n        return products;\n    }\n\n    @Patch('/:id')\n    @Auth(AuthType.Bearer)\n    @ApiBearerAuth('bearer-token')\n    @ApiOperation({ summary: 'Update a product by ID' })\n    @ApiResponse({ status: 200, description: 'Product updated successfully' })\n    @ApiResponse({ status: 404, description: 'Product not found' })\n    async updateProduct(@Param('id') id: string, @Body() updateProductDto: UpdateProductDto) {\n        const updatedProduct = await this.productInterface.updateProduct(id, updateProductDto);\n        if (!updatedProduct) {\n            throw new NotFoundException('Product not found');\n        }\n        return updatedProduct;\n    }\n\n    @Delete('/:id')\n    @Auth(AuthType.Bearer)\n    @ApiBearerAuth('bearer-token')\n    @ApiOperation({ summary: 'Delete a product by ID' })\n    @ApiResponse({ status: 200, description: 'Product deleted successfully' })\n    @ApiResponse({ status: 404, description: 'Product not found' }) \n    async deleteProduct(@Param('id') id: string) {\n        const deletedProduct = await this.productInterface.deleteProduct(id);\n        if (!deletedProduct) {\n            throw new NotFoundException('Product not found');\n        }\n        return {\n            message: 'Product deleted successfully',\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProductInterface.html":{"url":"interfaces/ProductInterface.html","title":"interface - ProductInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProductInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/interface/product.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createProduct\n                                    \n                                \n                                \n                                    \n                                        deleteProduct\n                                    \n                                \n                                \n                                    \n                                        findAllProducts\n                                    \n                                \n                                \n                                    \n                                        findProductById\n                                    \n                                \n                                \n                                    \n                                        updateProduct\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createProduct\n                        \n                    \n                \n            \n            \n                \ncreateProduct(createProductDto: CreateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/interface/product.interface.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \ndeleteProduct(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/interface/product.interface.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllProducts\n                        \n                    \n                \n            \n            \n                \nfindAllProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/interface/product.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findProductById\n                        \n                    \n                \n            \n            \n                \nfindProductById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/interface/product.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProduct\n                        \n                    \n                \n            \n            \n                \nupdateProduct(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/interface/product.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CreateProductDto } from \"../dtos/create-product.dto\";\nimport { UpdateProductDto } from \"../dtos/update-prodcut.dto\";\nimport { Product } from \"../product.schema\";\n\nexport interface ProductInterface {\n    createProduct(createProductDto: CreateProductDto): Promise;\n    findProductById(id: string): Promise;\n    findAllProducts(): Promise;\n    updateProduct(id: string, updateProductDto: UpdateProductDto): Promise;\n    deleteProduct(id: string): Promise;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nProductServiceImpl\n\nProductServiceImpl\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nProductServiceImpl->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductServiceImpl\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductController } from './product.controller';\nimport { ProductServiceImpl } from './product.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Product, ProductSchema } from './product.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Product.name,\n        schema: ProductSchema,\n      }\n    ])\n  ],\n  controllers: [ProductController],\n  providers: [\n    ProductServiceImpl,\n    {\n      provide: 'ProductInterface',\n      useExisting: ProductServiceImpl,\n    }\n  ]\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductServiceImpl.html":{"url":"injectables/ProductServiceImpl.html","title":"injectable - ProductServiceImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductServiceImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProduct\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Async\n                                findAllProducts\n                            \n                            \n                                    Async\n                                findProductById\n                            \n                            \n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/product/product.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProduct(createProductDto: CreateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProduct(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProduct(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ProductInterface } from './interface/product.interface';\nimport { CreateProductDto } from './dtos/create-product.dto';\nimport { UpdateProductDto } from './dtos/update-prodcut.dto';\nimport { Product } from './product.schema';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\n\n@Injectable()\nexport class ProductServiceImpl implements ProductInterface {\n    constructor(\n        @InjectModel(Product.name) \n        private readonly productModel: Model,\n    ) {}\n\n    async createProduct(createProductDto: CreateProductDto): Promise {\n        const createdProduct = new this.productModel(createProductDto);\n        return createdProduct.save();\n    }\n\n    async findProductById(id: string): Promise {\n        return this.productModel.findById(id).exec();\n    }\n\n    async findAllProducts(): Promise {\n        return this.productModel.find().exec();\n    }\n\n    async updateProduct(id: string, updateProductDto: UpdateProductDto): Promise {\n        return this.productModel.findByIdAndUpdate(id, updateProductDto, { new: true }).exec();\n    }\n\n    async deleteProduct(id: string): Promise {\n        return this.productModel.findByIdAndDelete(id).exec();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/signin.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/signin.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/signin.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsEmail, IsNotEmpty, IsString } from \"class-validator\";\n\nexport class SignInDto {\n    @ApiProperty()\n    @IsEmail()\n    @IsNotEmpty()\n    email: string;\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SignInProvider.html":{"url":"injectables/SignInProvider.html","title":"injectable - SignInProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SignInProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/signin.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userInterface: UserInterface, hashingProvider: HashingProvider, jwtService: JwtService, jwtConfiguration: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/signin.provider.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userInterface\n                                                  \n                                                        \n                                                                        UserInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hashingProvider\n                                                  \n                                                        \n                                                                        HashingProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/signin.provider.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, RequestTimeoutException, UnauthorizedException } from \"@nestjs/common\";\nimport { HashingProvider } from \"./hashing.provider\";\nimport { SignInDto } from \"../dtos/signin.dto\";\nimport { User } from \"src/user/user.schema\";\nimport { UserInterface } from \"src/user/interfaces/user.interface\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport jwtConfig from \"../config/jwt.config\";\nimport { ConfigType } from \"@nestjs/config\";\n\n@Injectable()\nexport class SignInProvider {\n    constructor(\n        @Inject('UserInterface')\n        private readonly userInterface: UserInterface,\n\n        private readonly hashingProvider: HashingProvider,\n\n        private readonly jwtService: JwtService,\n\n        @Inject(jwtConfig.KEY)\n        private readonly jwtConfiguration: ConfigType\n    ){}\n\n    async signIn(signInDto: SignInDto): Promise {\n        const user = await this.userInterface.findUserByEmail(signInDto.email);\n\n        if (!user) {\n            throw new UnauthorizedException('Invalid email or password');\n        }\n\n        let isEqualPassword: boolean = false;\n\n        try {\n            isEqualPassword = await this.hashingProvider.comparePassword(\n                signInDto.password,\n                user.password,\n            );\n        } catch (error) {\n            throw new RequestTimeoutException('Password comparison failed');\n        }\n\n        if (!isEqualPassword) {\n            throw new UnauthorizedException('Invalid email or password');\n        }\n\n        const accessToken = await this.jwtService.signAsync(\n            {\n                sub: user._id,\n                email: user.email,\n            },\n            {\n                audience: this.jwtConfiguration.audience,\n                issuer: this.jwtConfiguration.issuer,\n                secret: this.jwtConfiguration.secret,\n                expiresIn: this.jwtConfiguration.accessTokenTtl,\n            }\n        )\n\n        const userObject = user.toObject();\n        delete userObject.password; \n\n        return {\n            accessToken,\n            ...userObject,\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEmployeeDto.html":{"url":"classes/UpdateEmployeeDto.html","title":"class - UpdateEmployeeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEmployeeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/dtos/update-employee.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateEmployeeDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateEmployeeDto } from './create-employee.dto';\n\nexport class UpdateEmployeeDto extends PartialType(CreateEmployeeDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dtos/update-prodcut.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateProductDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreateProductDto } from \"./create-product.dto\";\n\nexport class UpdateProductDto extends PartialType(CreateProductDto){}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dateOfBirth\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, minlength: 6, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.schema.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from 'mongoose';\n\n@Schema()\nexport class User extends Document {\n    @Prop({\n        type: String,\n        required: true,\n    })\n    username: string;\n\n    @Prop({ \n        required: true,\n        unique: true \n    })\n    email: string;\n\n    @Prop({ \n        type: String,\n        minlength: 6,\n        required: true,\n    })\n    password: string;\n\n    @Prop({ \n        type: Date,\n        required: true \n    })\n    dateOfBirth: Date;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                findAllUsers\n                            \n                            \n                                    \n                                    Async\n                                findUserById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('findAll')@Auth(AuthType.None)\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('findById')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Inject, NotFoundException, Post, Query } from '@nestjs/common';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { UserInterface } from './interfaces/user.interface';\nimport { ApiBody, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Auth } from 'src/auth/decorators/auth.decorator';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\n\n@ApiTags('User')\n@Controller('user')\nexport class UserController {\n    constructor(\n        @Inject('UserInterface')\n        private readonly userInterface: UserInterface\n    ){} \n\n    // @Get('findByEmail')\n    // async findUser(@Query('id') email: string) {\n    //     console.log('Finding user by email:', email);\n    //     const user = await this.userInterface.findUserByEmail(email);\n    //     if (!user) {\n    //         throw new NotFoundException('User not found');\n    //     }\n    //     return user;\n    // }\n\n    @Get('findById')\n    async findUserById(@Query('id') id: string) {\n        console.log('Finding user by ID:', id);\n        const user = await this.userInterface.findUserById(id);\n        if (!user) {\n            throw new NotFoundException('User not found');\n        }\n        return user;\n    }\n\n    @Get('findAll')\n    @Auth(AuthType.None)\n    async findAllUsers() {\n        console.log('Finding all users');\n        const users = await this.userInterface.findAllUsers();\n        if (!users || users.length === 0) {\n            throw new NotFoundException('No users found');\n        }\n        return users;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInterface.html":{"url":"interfaces/UserInterface.html","title":"interface - UserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createUser\n                                    \n                                \n                                \n                                    \n                                        findAllUsers\n                                    \n                                \n                                \n                                    \n                                        findUserByEmail\n                                    \n                                \n                                \n                                    \n                                        findUserById\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/interfaces/user.interface.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllUsers\n                        \n                    \n                \n            \n            \n                \nfindAllUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/interfaces/user.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByEmail\n                        \n                    \n                \n            \n            \n                \nfindUserByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/interfaces/user.interface.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findUserById\n                        \n                    \n                \n            \n            \n                \nfindUserById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/interfaces/user.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CreateUserDto } from \"../dtos/create-user.dto\";\nimport { User } from \"../user.schema\";\n\nexport interface UserInterface {\n    createUser(createUserDto: CreateUserDto): Promise;\n    findUserByEmail(email: string): Promise;\n    findUserById(id: string): Promise | null>;\n    findAllUsers(): Promise;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserInterface \n\nUserInterface \n\n\n\nUserServiceImpl \n\nUserServiceImpl \n\n\n\nUserModule\n\nUserModule\n\nUserInterface  -->\n\nUserModule->UserInterface \n\n\n\nUserServiceImpl  -->\n\nUserModule->UserServiceImpl \n\n\n\n\n\nCreateUserProvider\n\nCreateUserProvider\n\nUserModule -->\n\nCreateUserProvider->UserModule\n\n\n\n\n\nUserServiceImpl\n\nUserServiceImpl\n\nUserModule -->\n\nUserServiceImpl->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateUserProvider\n                        \n                        \n                            UserServiceImpl\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserInterface\n                        \n                        \n                            UserServiceImpl\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './user.schema';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { UserController } from './user.controller';\nimport { UserServiceImpl } from './user.service';\nimport { CreateUserProvider } from './providers/create-user.provider';\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: User.name,\n                schema: UserSchema\n            }\n        ]),\n        forwardRef(() => AuthModule),\n    ],\n    providers: [\n        {\n            provide: 'UserInterface',    \n            useExisting: UserServiceImpl,        \n        },\n        UserServiceImpl,\n        CreateUserProvider\n    ],\n    controllers: [UserController],\n    exports: [\n        UserServiceImpl,\n        'UserInterface'\n    ],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserServiceImpl.html":{"url":"injectables/UserServiceImpl.html","title":"injectable - UserServiceImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserServiceImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                findAllUsers\n                            \n                            \n                                    Async\n                                findUserByEmail\n                            \n                            \n                                    Async\n                                findUserById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, createUserProvider: CreateUserProvider)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createUserProvider\n                                                  \n                                                        \n                                                                        CreateUserProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, forwardRef, Inject, Injectable, InternalServerErrorException, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User } from './user.schema';\nimport { Model } from 'mongoose';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { HashingProvider } from 'src/auth/providers/hashing.provider';\nimport { read } from 'fs';\nimport { UserInterface } from './interfaces/user.interface';\nimport { CreateUserProvider } from './providers/create-user.provider';\n\n@Injectable()\nexport class UserServiceImpl implements UserInterface {\n\n    constructor(\n        @InjectModel(User.name)\n        private readonly userModel: Model,\n\n        /**\n         * The provider responsible for creating users.\n         */\n        private readonly createUserProvider: CreateUserProvider,\n    ) {}\n\n    async createUser(createUserDto: CreateUserDto): Promise {\n        return await this.createUserProvider.createUser(createUserDto);\n    }\n\n    async findUserByEmail(email: string): Promise {\n        email = email.replace(\"%40\", \"@\"); \n        const user = await this.userModel.findOne({ email }).exec();\n        if (!user) {\n            throw new NotFoundException('User not found');\n        }\n        return user;\n    }\n\n    async findUserById(id: string): Promise | null> {\n        const user = await this.userModel.findById(id).exec();\n        if (!user) {\n            throw new NotFoundException('User not found');\n        }\n        const userObject = user.toObject() as Record;\n        delete userObject.password; \n        return userObject;\n    }\n    async findAllUsers(): Promise {\n        const users = await this.userModel.find().exec();\n        if (!users || users.length === 0) {\n            throw new NotFoundException('No users found');\n        }\n        return users;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/auth/constants/auth.constants.ts\n            \n            variable\n            REQUEST_USER_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/decorators/active-user.decorator.ts\n            \n            variable\n            ActiveUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/decorators/auth.decorator.ts\n            \n            variable\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/decorators/auth.decorator.ts\n            \n            variable\n            AUTH_TYPE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dtos/signin.dto.ts\n            \n            class\n            SignInDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/access-token/access-token.guard.ts\n            \n            guard\n            AccessTokenGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/guards/authentication/authentication.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/interfaces/active-user-data.interface.ts\n            \n            interface\n            ActiveUserData\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/auth/interfaces/auth.interface.ts\n            \n            interface\n            AuthInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/providers/bcrypt.provider.ts\n            \n            injectable\n            BcryptProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/providers/hashing.provider.ts\n            \n            injectable\n            HashingProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/providers/signin.provider.ts\n            \n            injectable\n            SignInProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/employee/dtos/create-employee.dto.ts\n            \n            class\n            CreateEmployeeDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/employee/dtos/update-employee.dto.ts\n            \n            class\n            UpdateEmployeeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/employee/employee.controller.ts\n            \n            controller\n            EmployeeController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/employee/employee.schema.ts\n            \n            class\n            Employee\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/employee/employee.schema.ts\n            \n            variable\n            EmployeeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/employee/employee.service.ts\n            \n            injectable\n            EmployeeServiceImpl\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/employee/interface/employee.interface.ts\n            \n            interface\n            EmployeeInterface\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/dtos/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/product/dtos/update-prodcut.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/interface/product.interface.ts\n            \n            interface\n            ProductInterface\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product/product.schema.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/product/product.schema.ts\n            \n            variable\n            ProductSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/product.service.ts\n            \n            injectable\n            ProductServiceImpl\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/swagger/swagger.config.ts\n            \n            variable\n            swaggerConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/swagger/swagger.ts\n            \n            function\n            setupSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/interfaces/user.interface.ts\n            \n            interface\n            UserInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/providers/create-user.provider.ts\n            \n            injectable\n            CreateUserProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/user/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserServiceImpl\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.26\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/mapped-types : ^2.1.0\n        \n            @nestjs/mongoose : ^11.0.3\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/serve-static : ^5.0.3\n        \n            @nestjs/swagger : ^11.2.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            bcrypt : ^6.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.2\n        \n            mongoose : ^8.15.1\n        \n            pg : ^8.16.0\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.24\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthType   (src/.../auth-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/enums/auth-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthType\n                    \n                \n                        \n                            \n                                 Bearer\n                            \n                        \n                        \n                            \n                                 None\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            setupSwagger   (src/.../swagger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/swagger/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupSwagger\n                        \n                    \n                \n            \n            \n                \nsetupSwagger(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g @nestjs/mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmployeeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_EmployeeModule\n\n\n\ncluster_EmployeeModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthInterface \n\nAuthInterface \n\nAuthInterface  -->\n\nAuthModule->AuthInterface \n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nHashingProvider \n\nHashingProvider \n\nHashingProvider  -->\n\nAuthModule->HashingProvider \n\n\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nAppModule -->\n\nEmployeeModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserInterface \n\nUserInterface \n\nUserInterface  -->\n\nUserModule->UserInterface \n\n\n\n\n\nUserServiceImpl \n\nUserServiceImpl \n\nUserServiceImpl  -->\n\nUserModule->UserServiceImpl \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nSignInProvider\n\nSignInProvider\n\nAuthModule -->\n\nSignInProvider->AuthModule\n\n\n\n\n\nEmployeeServiceImpl\n\nEmployeeServiceImpl\n\nEmployeeModule -->\n\nEmployeeServiceImpl->EmployeeModule\n\n\n\n\n\nProductServiceImpl\n\nProductServiceImpl\n\nProductModule -->\n\nProductServiceImpl->ProductModule\n\n\n\n\n\nCreateUserProvider\n\nCreateUserProvider\n\nUserModule -->\n\nCreateUserProvider->UserModule\n\n\n\n\n\nUserServiceImpl\n\nUserServiceImpl\n\nUserModule -->\n\nUserServiceImpl->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActiveUser   (src/.../active-user.decorator.ts)\n                        \n                        \n                            Auth   (src/.../auth.decorator.ts)\n                        \n                        \n                            AUTH_TYPE_KEY   (src/.../auth.decorator.ts)\n                        \n                        \n                            EmployeeSchema   (src/.../employee.schema.ts)\n                        \n                        \n                            ProductSchema   (src/.../product.schema.ts)\n                        \n                        \n                            REQUEST_USER_KEY   (src/.../auth.constants.ts)\n                        \n                        \n                            swaggerConfig   (src/.../swagger.config.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/decorators/active-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ActiveUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (field: keyof ActiveUserData | undefined, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user: ActiveUserData = request[REQUEST_USER_KEY];\n\n    // If a user passes a field to the decorator use only that field\n    return field ? user?.[field] : user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/auth/decorators/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...authTypes: AuthType[]) =>\n  SetMetadata(AUTH_TYPE_KEY, authTypes)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_TYPE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'authType'\n                    \n                \n\n\n        \n    \n\n    src/employee/employee.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmployeeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Employee)\n                    \n                \n\n\n        \n    \n\n    src/product/product.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProductSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Product)\n                    \n                \n\n\n        \n    \n\n    src/auth/constants/auth.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REQUEST_USER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n\n\n        \n    \n\n    src/swagger/swagger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        swaggerConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder()\n  .setTitle('TDA API')\n  .setDescription('Use the base API URL as http://localhost:3000')\n  .setVersion('1.0')\n  .setLicense(\n    'MIT License',\n    'https://github.com/git/git-scm.com/blob/main/MIT-LICENSE.txt',\n  )\n  .addBearerAuth(\n    {\n      type: 'http',\n      scheme: 'bearer',\n      bearerFormat: 'JWT',\n      name: 'Authorization',\n      description: 'Enter JWT token',\n      in: 'header',\n    },\n    'bearer-token',\n  )\n  .build()\n                    \n                \n\n\n        \n    \n\n    src/user/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
