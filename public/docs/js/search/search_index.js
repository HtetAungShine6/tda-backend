var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AccessTokenGuard.html",[0,2.541,1,2.335]],["body/guards/AccessTokenGuard.html",[1,3.015,2,2.58,3,0.182,4,0.162,5,0.162,6,5.07,7,4.1,8,2.897,9,0.295,10,1.098,11,1.806,12,5.07,13,2.284,14,4.731,15,1.736,16,3.379,17,5.531,18,4.68,19,5.07,20,0.682,21,3.379,22,1.333,23,0.02,24,0.821,25,0.597,26,1.333,27,4.056,28,4.515,29,3.379,30,4.056,31,1.098,32,1.565,33,4.731,34,4.221,35,3.379,36,0.798,37,3.015,38,0.389,39,1.38,40,1.098,41,4.168,42,0.708,43,2.154,44,2.154,45,2.343,46,3.379,47,2.897,48,2.58,49,3.379,50,0.182,51,0.009,52,1.743,53,1.648,54,2.897,55,4.731,56,3.379,57,1.859,58,3.379,59,4.112,60,2.897,61,3.379,62,2.162,63,1.648,64,1.743,65,4.731,66,1.38,67,3.379,68,3.379,69,2.897,70,1.743,71,1.414,72,1.24,73,3.379,74,3.379,75,0.012,76,0.012]],["title/interfaces/ActiveUserData.html",[77,1.417,78,2.541]],["body/interfaces/ActiveUserData.html",[3,0.267,4,0.237,5,0.237,9,0.432,23,0.02,25,0.665,36,1.111,50,0.267,75,0.016,76,0.016,77,1.916,78,4.218,79,2.728,80,4.246,81,2.293,82,4.246,83,2.119,84,3.279,85,5.888,86,6.083,87,4.644,88,3.89,89,2.353]],["title/controllers/AppController.html",[90,1.417,91,2.541]],["body/controllers/AppController.html",[3,0.271,4,0.24,5,0.24,9,0.438,10,1.424,20,0.627,23,0.02,31,1.165,36,1.035,38,0.37,42,1.051,50,0.271,51,0.013,53,1.748,71,1.5,75,0.016,76,0.016,90,2.372,91,4.252,92,1.941,93,4.302,94,5.915,95,1.578,96,5.017,97,3.913,98,4.302,99,5.017,100,5.017]],["title/modules/AppModule.html",[101,1.417,102,2.541]],["body/modules/AppModule.html",[1,2.889,3,0.172,4,0.152,5,0.152,7,2.205,11,1.052,23,0.02,38,0.438,39,1.298,42,0.666,43,2.027,44,2.027,45,2.205,50,0.172,51,0.008,72,1.167,75,0.012,76,0.012,91,3.661,92,1.753,97,3.737,98,2.727,101,2.043,102,5.004,103,1.542,104,1.542,105,1.752,106,1.752,107,1.542,108,2.909,109,1.752,110,2.727,111,2.727,112,2.727,113,3.737,114,3.737,115,4.031,116,3.737,117,3.737,118,2.497,119,1.752,120,1.641,121,3.18,122,3.12,123,3.18,124,2.027,125,1.052,126,3.18,127,3.18,128,3.886,129,5.755,130,3.18,131,2.727,132,2.428,133,2.727,134,3.18,135,3.18,136,3.18,137,4.532,138,2.428,139,3.143,140,3.18,141,3.18,142,2.727,143,2.727,144,1,145,1.752,146,3.18,147,3.18,148,3.18,149,3.18,150,3.18,151,3.18,152,3.18,153,3.18,154,3.18,155,3.18,156,2.727,157,3.18,158,2.727,159,3.18,160,3.18,161,3.18,162,3.18,163,3.18,164,3.18,165,2.727,166,2.727,167,1.879,168,2.727]],["title/injectables/AppService.html",[40,0.851,97,2.165]],["body/injectables/AppService.html",[3,0.28,4,0.248,5,0.248,9,0.453,10,1.453,20,0.649,23,0.019,31,1.205,36,1.056,38,0.313,40,1.453,42,1.087,50,0.28,51,0.013,71,1.551,75,0.016,76,0.016,94,5.983,97,3.698,169,2.24,170,4.45,171,5.19,172,5.19,173,5.19,174,5.19]],["title/controllers/AuthController.html",[90,1.417,175,2.541]],["body/controllers/AuthController.html",[3,0.185,4,0.163,5,0.163,9,0.298,10,1.107,11,2.142,13,1.749,15,1.254,20,0.596,22,1.165,23,0.02,24,0.717,25,0.649,26,1.165,31,1.107,38,0.409,39,1.395,42,0.716,50,0.185,51,0.009,53,1.661,71,1.425,75,0.012,76,0.012,81,2.36,84,2.179,90,1.322,92,1.322,95,1.499,175,3.306,176,2.93,177,2.178,178,2.46,179,4.768,180,3.306,181,3.417,182,3.428,183,3.417,184,3.417,185,3.417,186,3.306,187,2.715,188,4.768,189,2.37,190,4.768,191,4.088,192,4.088,193,3.417,194,3.039,195,2.37,196,3.417,197,4.768,198,3.417,199,3.443,200,3.417,201,2.178,202,2.178,203,2.93,204,3.417,205,3.244,206,2.93,207,3.808,208,3.5,209,3.5,210,1.19,211,2.37,212,2.663,213,2.93,214,2.609,215,2.178,216,3.417,217,1.763,218,3.417,219,2.019,220,3.417,221,2.609,222,3.417,223,3.306,224,3.417,225,2.312,226,2.37,227,3.417,228,3.417,229,3.417,230,2.93,231,3.417,232,3.417]],["title/interfaces/AuthInterface.html",[77,1.417,233,2.165]],["body/interfaces/AuthInterface.html",[3,0.274,4,0.242,5,0.242,9,0.442,10,1.432,20,0.634,22,1.238,23,0.019,24,0.762,25,0.554,26,1.238,31,1.177,32,2.041,38,0.372,50,0.274,75,0.016,76,0.016,77,1.96,79,2.792,81,1.765,180,4.278,195,4.278,199,3.909,211,3.514,233,3.645,234,4.345,235,5.068,236,3.87]],["title/modules/AuthModule.html",[101,1.417,113,2.165]],["body/modules/AuthModule.html",[3,0.202,4,0.179,5,0.179,23,0.02,38,0.428,42,0.783,43,2.383,44,2.383,45,2.592,50,0.202,51,0.01,75,0.013,76,0.013,92,1.962,101,2.227,103,1.813,104,1.813,105,2.06,106,2.06,107,1.813,108,3.171,109,3.171,113,4.231,117,2.997,118,2.794,119,2.06,120,1.929,122,2.209,128,3.206,143,3.206,165,3.206,166,3.206,167,2.997,168,3.206,175,3.992,205,4.292,206,3.206,233,4.021,237,3.206,238,3.206,239,3.206,240,3.358,241,3.931,242,3.739,243,2.997,244,3.739,245,3.739,246,3.517,247,3.739,248,3.739,249,3.206,250,3.206,251,2.383]],["title/injectables/AuthService.html",[40,0.851,205,2.165]],["body/injectables/AuthService.html",[3,0.229,4,0.203,5,0.203,9,0.37,10,1.281,11,2.028,13,1.557,15,2.024,20,0.69,22,1.348,23,0.02,24,0.83,25,0.603,26,1.348,31,0.985,32,1.825,38,0.406,39,1.732,40,1.281,42,0.888,50,0.229,51,0.011,52,2.189,53,1.478,62,1.939,63,1.478,64,2.189,66,1.732,70,2.189,71,1.268,75,0.014,76,0.014,81,1.478,169,1.831,180,3.825,195,3.825,199,3.707,205,3.259,211,2.942,233,3.259,236,3.239,241,4.075,243,2.506,249,3.638,252,3.638,253,4.242,254,4.242,255,4.242,256,3.638,257,4.242,258,4.242,259,2.189,260,4.242,261,2.506]],["title/guards/AuthenticationGuard.html",[0,2.541,139,2.541]],["body/guards/AuthenticationGuard.html",[0,2.129,1,4.106,2,3.953,3,0.166,4,0.147,5,0.147,7,2.129,9,0.268,10,1.026,11,1.713,12,5.652,13,2.363,15,1.621,20,0.553,22,1.08,23,0.02,24,0.665,25,0.566,26,1.08,27,3.789,28,4.325,30,2.632,31,1.026,32,1.462,38,0.377,40,1.026,41,3.374,42,0.643,50,0.166,51,0.008,52,1.584,53,2.243,57,1.781,62,1.403,63,1.539,66,1.254,71,0.918,72,2.078,75,0.011,76,0.011,81,1.539,83,1.069,132,3.374,138,2.344,139,3.064,142,2.632,178,1.584,217,1.584,219,1.814,259,2.922,262,2.632,263,5.178,264,4.419,265,3.07,266,6.25,267,3.07,268,3.07,269,3.374,270,1.957,271,1.814,272,3.07,273,2.632,274,4.419,275,3.07,276,2.817,277,5.178,278,3.789,279,3.07,280,4.419,281,4.419,282,3.789,283,3.07,284,3.07,285,3.07,286,3.07,287,3.07,288,3.07,289,3.07,290,3.07,291,3.07,292,3.07,293,3.07,294,2.632,295,2.632,296,3.07,297,2.632,298,3.07,299,3.07,300,3.07,301,3.07,302,3.07,303,3.07,304,3.07,305,3.07,306,3.07,307,3.07,308,3.07,309,3.07]],["title/injectables/BcryptProvider.html",[40,0.851,246,2.541]],["body/injectables/BcryptProvider.html",[3,0.218,4,0.193,5,0.193,9,0.352,10,1.24,11,2.251,20,0.668,22,1.305,23,0.02,24,0.803,25,0.584,26,1.305,31,1.24,32,2.107,36,1.203,38,0.361,40,1.24,42,0.846,50,0.218,51,0.01,52,2.084,57,1.27,66,1.649,71,1.597,75,0.014,76,0.014,156,5.834,169,1.743,240,2.59,246,3.704,310,3.463,311,5.131,312,4.58,313,3.463,314,5.834,315,5.46,316,4.038,317,5.131,318,4.58,319,4.038,320,4.58,321,3.463,322,4.038,323,5.984,324,4.038,325,4.038,326,4.038]],["title/classes/CreateEmployeeDto.html",[51,0.009,327,2.018]],["body/classes/CreateEmployeeDto.html",[3,0.195,4,0.172,5,0.172,9,0.315,20,0.823,23,0.02,24,0.85,25,0.719,36,1.158,38,0.341,50,0.195,51,0.013,72,2.415,75,0.013,76,0.013,83,1.723,87,4.313,95,2.07,144,1.556,187,2.261,210,1.256,225,3.089,327,2.725,328,1.256,329,5.78,330,2.752,331,4.844,332,4.844,333,4.844,334,6.371,335,6.371,336,3.605,337,2.923,338,3.605,339,3.605,340,3.605,341,3.605,342,3.764,343,3.091,344,3.478,345,3.605,346,3.605,347,3.713,348,2.752,349,2.752,350,3.889,351,3.889,352,1.86,353,2.298,354,2.298,355,2.752,356,3.091]],["title/classes/CreateEmployeeProductDto.html",[51,0.009,357,2.018]],["body/classes/CreateEmployeeProductDto.html",[3,0.241,4,0.213,5,0.213,9,0.389,20,0.784,23,0.019,25,0.686,36,1.115,38,0.344,50,0.241,51,0.015,75,0.015,76,0.015,83,1.983,88,3.364,95,1.973,144,2.079,210,1.552,328,1.552,347,3.642,350,3.906,351,3.707,352,2.299,357,3.136,358,3.021,359,5.669,360,3.089,361,3.707,362,3.999,363,5.38,364,4.882,365,3.82,366,3.82,367,4.455,368,4.455,369,4.882]],["title/classes/CreateProductDto.html",[51,0.009,370,2.018]],["body/classes/CreateProductDto.html",[3,0.25,4,0.221,5,0.221,9,0.404,20,0.73,23,0.019,24,0.961,25,0.638,36,0.985,38,0.352,50,0.25,51,0.015,75,0.015,76,0.015,83,2.033,88,3.963,95,1.835,187,2.667,210,1.614,328,1.614,347,3.215,350,3.448,351,3.448,352,2.39,360,3.212,365,3.972,366,3.972,369,5.004,370,3.215,371,5.478,372,5.928,373,3.972,374,5.836,375,5.836,376,4.633,377,5.836,378,1.999]],["title/classes/CreateUserDto.html",[51,0.009,182,1.89]],["body/classes/CreateUserDto.html",[3,0.235,4,0.208,5,0.208,9,0.38,20,0.819,23,0.019,25,0.716,36,1.208,38,0.338,50,0.235,51,0.014,75,0.015,76,0.015,83,1.953,84,2.836,95,2.061,182,2.894,210,1.516,214,5.179,328,1.516,347,3.737,348,4.282,350,3.666,351,3.314,352,2.246,373,3.732,379,3.732,380,5.321,381,3.956,382,5.321,383,4.352,384,4.352,385,4.352,386,4.352,387,4.352,388,4.352,389,4.352,390,4.809,391,3.732,392,4.352]],["title/injectables/CreateUserProvider.html",[40,0.851,393,2.165]],["body/injectables/CreateUserProvider.html",[3,0.198,4,0.175,5,0.175,9,0.32,10,1.162,11,1.885,13,1.836,15,1.836,20,0.626,22,1.223,23,0.02,24,0.753,25,0.547,26,1.223,31,0.851,32,1.656,38,0.399,39,1.497,40,1.162,42,0.768,50,0.198,51,0.009,53,1.743,57,1.925,62,2.287,63,1.985,64,1.891,66,2.327,70,1.891,71,1.096,75,0.013,76,0.013,81,1.743,84,2.287,125,1.213,169,1.582,182,3.493,191,3.143,192,3.143,215,2.337,240,3.342,243,2.166,259,2.582,381,2.337,393,2.957,394,4.886,395,3.143,396,3.821,397,3.143,398,3.903,399,3.666,400,4.291,401,3.821,402,3.666,403,3.143,404,2.337,405,2.337,406,2.542,407,1.582,408,3.143,409,1.418,410,3.143,411,3.666,412,5.005,413,3.666,414,3.666,415,5.005,416,3.666,417,3.666,418,3.666,419,3.666,420,3.143,421,1.582]],["title/classes/Employee.html",[51,0.009,144,1.152]],["body/classes/Employee.html",[3,0.19,4,0.168,5,0.168,9,0.307,20,0.817,23,0.02,24,0.839,25,0.781,36,1.244,37,3.103,38,0.337,50,0.263,51,0.009,57,1.107,72,2.622,75,0.013,76,0.013,83,1.695,87,4.26,95,2.055,125,1.165,144,1.531,225,2.705,276,3.103,328,1.226,331,4.784,332,4.784,333,4.784,337,3.556,342,3.296,344,3.687,353,2.244,354,2.244,355,3.717,407,1.52,422,2.688,423,4.165,424,3.521,425,3.521,426,3.521,427,3.521,428,3.521,429,3.521,430,4.27,431,2.36,432,2.244,433,3.103,434,1.817,435,3.521,436,3.521,437,2.441,438,3.019]],["title/controllers/EmployeeController.html",[90,1.417,439,2.541]],["body/controllers/EmployeeController.html",[3,0.099,4,0.087,5,0.087,9,0.159,10,0.688,11,2.202,13,0.669,15,0.669,20,0.634,22,1.157,23,0.02,24,0.866,25,0.609,26,1.157,31,1.178,34,1.889,36,1.042,38,0.336,39,0.745,42,0.382,50,0.099,51,0.005,53,0.635,57,0.574,59,2.746,63,1.032,66,0.745,71,1.517,72,2.044,75,0.008,76,0.008,89,2.65,90,0.706,92,0.706,95,1.596,144,2.252,177,1.163,178,0.941,186,2.055,187,3.244,189,3.285,194,3.235,201,2.385,202,1.889,203,1.564,207,2.987,208,3.408,209,3.936,210,0.635,217,0.941,219,1.078,223,3.519,225,3.13,226,3.708,270,1.163,271,1.078,327,2.946,344,2.874,409,0.706,421,1.279,439,2.055,440,1.564,441,2.263,442,2.263,443,3.289,444,2.263,445,2.857,446,4.083,447,1.393,448,1.393,449,3.289,450,3.742,451,1.825,452,2.263,453,2.263,454,2.263,455,1.825,456,1.393,457,1.393,458,1.931,459,3.693,460,4.777,461,4.777,462,2.541,463,4.519,464,2.263,465,4.254,466,3.186,467,1.825,468,1.393,469,2.373,470,1.825,471,3.208,472,1.825,473,1.393,474,1.393,475,1.825,476,1.393,477,3.497,478,1.393,479,2.545,480,1.825,481,3.289,482,1.825,483,1.393,484,2.799,485,1.825,486,1.825,487,1.825,488,1.393,489,1.393,490,1.005,491,1.393,492,1.825,493,2.055,494,1.437,495,1.931,496,1.564,497,1.393,498,4.062,499,1.265,500,1.393,501,1.825,502,1.564,503,1.564,504,3.289,505,3.289,506,1.825,507,1.825,508,1.393,509,1.825,510,1.825,511,1.825,512,1.393,513,2.263,514,1.564,515,1.825,516,1.825,517,1.825,518,1.825,519,1.393,520,1.825,521,1.825]],["title/interfaces/EmployeeInterface.html",[77,1.417,495,1.89]],["body/interfaces/EmployeeInterface.html",[3,0.199,4,0.176,5,0.176,9,0.321,10,1.166,20,0.828,22,1.568,23,0.019,24,0.966,25,0.702,26,1.568,31,1.538,32,2.382,36,1.215,38,0.37,50,0.199,75,0.013,76,0.013,77,1.425,79,2.029,89,2.373,144,1.579,225,2.77,327,3.537,409,1.425,441,3.834,442,3.834,443,4.685,444,3.834,445,3.834,446,3.834,447,3.834,456,3.834,473,3.834,476,3.834,477,4.005,483,3.834,484,3.625,493,3.482,494,2.435,495,2.591,500,2.813,522,3.159,523,3.684,524,3.684,525,3.684,526,3.684,527,3.684,528,3.684,529,2.813]],["title/modules/EmployeeModule.html",[101,1.417,114,2.165]],["body/modules/EmployeeModule.html",[3,0.227,4,0.201,5,0.201,23,0.02,24,0.631,38,0.405,42,0.878,50,0.227,51,0.011,75,0.014,76,0.014,92,2.119,101,2.359,103,2.034,104,2.034,105,2.311,106,2.311,107,2.034,108,3.359,109,3.359,114,4.197,118,3.017,119,2.311,120,2.165,122,2.479,124,2.674,125,1.388,144,1.319,167,2.479,251,2.674,431,2.034,437,3.797,439,4.228,495,3.614,529,3.203,530,3.597,531,3.597,532,3.597,533,4.707,534,4.195,535,4.195,536,4.195,537,2.909,538,4.195]],["title/classes/EmployeePayroll.html",[51,0.009,539,2.541]],["body/classes/EmployeePayroll.html",[3,0.2,4,0.177,5,0.177,9,0.324,20,0.805,23,0.02,25,0.775,36,1.038,37,2.366,38,0.305,50,0.272,51,0.009,57,1.167,72,2.536,75,0.013,76,0.013,83,1.758,88,4.084,95,2.024,125,1.228,276,4.232,328,1.293,337,4.084,344,3.566,358,3.034,361,3.388,407,1.602,423,4.103,430,4.232,431,2.447,432,2.366,433,3.217,434,1.915,539,3.499,540,2.834,541,5.734,542,5.734,543,5.734,544,4.379,545,3.711,546,3.711,547,3.39,548,3.711,549,3.711,550,3.711,551,3.182,552,2.834,553,3.182]],["title/classes/EmployeeProduct.html",[51,0.009,554,2.165]],["body/classes/EmployeeProduct.html",[3,0.193,4,0.171,5,0.171,9,0.312,20,0.795,23,0.019,25,0.769,36,1.156,37,2.281,38,0.297,50,0.266,51,0.009,57,1.125,72,2.515,75,0.013,76,0.013,83,1.715,88,4.049,95,1.998,125,1.184,144,1.548,145,3.618,276,4.186,328,1.247,337,3.581,344,3.536,358,3.001,361,3.325,362,3.587,363,4.825,378,2.125,407,1.545,423,4.051,430,4.186,431,2.387,432,2.281,433,3.138,434,1.847,544,4.297,547,3.339,551,3.069,554,2.909,555,2.733,556,4.825,557,6.061,558,3.579,559,3.579,560,3.579,561,3.579,562,3.579,563,2.482,564,3.069]],["title/controllers/EmployeeProductController.html",[90,1.417,565,2.541]],["body/controllers/EmployeeProductController.html",[3,0.085,4,0.075,5,0.075,9,0.137,10,0.607,11,2.188,13,0.575,15,0.575,20,0.625,22,1.152,23,0.02,24,0.868,25,0.645,26,1.152,31,1.162,34,1.667,36,1.097,38,0.302,39,0.64,42,0.328,50,0.085,51,0.004,53,0.546,59,2.144,63,0.911,71,1.496,72,2.062,75,0.007,76,0.007,89,2.492,90,0.606,92,0.606,95,1.573,144,2.304,145,2.888,177,0.999,178,0.809,186,1.813,187,3.257,189,3.469,194,3.189,201,2.144,202,1.667,207,2.333,208,3.342,209,3.961,210,0.546,217,0.809,219,0.926,223,3.469,225,2.968,226,3.469,270,0.999,271,0.926,344,2.899,357,3,358,2.396,361,2.32,362,2.503,378,2.974,409,0.606,421,1.128,448,1.197,449,2.569,452,1.996,453,1.996,454,1.996,457,1.197,458,1.736,459,1.344,460,4.818,461,4.818,462,2.242,463,4.506,464,1.996,465,4.506,466,3.385,468,1.197,469,2.888,474,1.197,478,1.197,479,1.545,481,1.996,488,1.197,489,1.197,491,1.197,494,0.76,497,1.197,498,3.367,499,1.087,502,1.344,504,2.569,505,2.569,508,1.197,512,1.197,513,1.197,519,1.197,565,1.813,566,1.344,567,2.569,568,1.996,569,2.998,570,1.996,571,1.996,572,1.996,573,2.569,574,1.197,575,2.615,576,2.615,577,1.567,578,1.197,579,2.615,580,1.567,581,1.344,582,4.419,583,1.567,584,1.197,585,2.242,586,1.567,587,1.344,588,3.927,589,2.615,590,2.615,591,1.567,592,1.197,593,1.567,594,1.197,595,3.097,596,1.567,597,3.364,598,1.988,599,1.344,600,1.344,601,1.349,602,1.567,603,1.567,604,1.567,605,1.567,606,1.567,607,1.567,608,1.567,609,1.567,610,1.567,611,1.567,612,1.567,613,1.567,614,1.567]],["title/interfaces/EmployeeProductInterface.html",[77,1.417,598,2.165]],["body/interfaces/EmployeeProductInterface.html",[3,0.187,4,0.166,5,0.166,9,0.303,10,1.119,20,0.834,22,1.589,23,0.019,24,0.979,25,0.711,26,1.589,31,1.549,32,2.391,36,1.226,38,0.334,50,0.187,75,0.013,76,0.013,77,1.343,79,1.913,89,2.143,144,1.741,357,3.463,358,3.109,361,2.051,362,2.213,409,1.343,494,1.684,554,2.051,567,3.681,568,3.681,569,4.569,570,3.681,571,3.681,572,3.681,573,3.681,574,3.681,578,3.681,584,3.681,587,4.134,592,3.681,594,3.681,595,3.942,598,2.848,601,2.487,615,5.834,616,2.977,617,3.472,618,3.472,619,3.472,620,3.472,621,3.472,622,3.472,623,3.472,624,2.051]],["title/modules/EmployeeProductModule.html",[101,1.417,115,2.335]],["body/modules/EmployeeProductModule.html",[3,0.225,4,0.199,5,0.199,23,0.02,24,0.626,38,0.422,42,0.871,50,0.225,51,0.011,75,0.014,76,0.014,92,2.107,101,2.349,103,2.018,104,2.018,105,2.292,106,2.292,107,2.018,108,3.345,109,2.292,114,3.218,115,4.373,116,3.218,118,3.001,119,2.292,120,2.147,122,2.458,124,2.652,125,1.377,144,1.909,145,2.292,167,2.458,243,3.588,251,2.652,358,1.901,431,2.018,537,2.885,554,2.458,563,3.777,565,4.211,598,2.458,624,2.458,625,3.568,626,3.568,627,4.456,628,4.161,629,3.568,630,3.568,631,4.161,632,4.161,633,4.161]],["title/injectables/EmployeeProductServiceImpl.html",[40,0.851,627,2.335]],["body/injectables/EmployeeProductServiceImpl.html",[3,0.089,4,0.079,5,0.079,9,0.145,10,0.636,11,2.212,13,1.491,15,1.005,20,0.671,22,1.253,23,0.02,24,0.771,25,0.561,26,1.253,31,1.191,32,2.056,36,1.064,38,0.346,39,0.676,40,0.636,42,0.347,50,0.089,51,0.004,52,0.855,53,1.416,57,1.923,62,2.95,63,2.329,64,2.646,66,2.399,70,2.646,71,1.533,72,1.005,75,0.007,76,0.007,89,2.322,125,0.548,144,2.069,145,3.063,169,0.715,259,2.646,261,3.03,337,0.979,357,2.955,358,2.541,361,2.067,362,3.269,378,2.536,398,3.269,404,3.419,405,1.056,407,0.715,409,0.641,421,0.715,458,0.855,466,2.956,469,2.67,479,1.617,490,0.913,494,0.803,495,2.646,503,1.42,539,1.149,544,1.265,547,1.928,554,2.401,556,2.347,567,2.672,568,2.09,569,3.103,570,2.09,571,2.672,572,2.672,573,2.672,574,1.265,578,2.09,582,3.361,584,2.09,592,1.265,594,1.265,595,3.169,598,1.617,599,1.42,600,1.42,601,1.413,624,0.979,627,1.745,634,1.42,635,1.656,636,3.499,637,2.646,638,1.656,639,2.738,640,1.656,641,1.656,642,1.656,643,1.656,644,1.656,645,1.656,646,3.499,647,1.656,648,1.656,649,1.42,650,1.656,651,1.656,652,1.656,653,1.656,654,1.656,655,1.42,656,1.656,657,2.738,658,2.738,659,2.738,660,1.656,661,1.656,662,1.656,663,4.847,664,1.656,665,3.557,666,1.656,667,3.121,668,3,669,1.656,670,5.129,671,1.656,672,3.499,673,2.426,674,1.656,675,3.499,676,1.265,677,1.265,678,3.499,679,1.42,680,1.656]],["title/injectables/EmployeeServiceImpl.html",[40,0.851,533,2.335]],["body/injectables/EmployeeServiceImpl.html",[3,0.117,4,0.104,5,0.104,9,0.19,10,0.791,11,2.276,13,0.798,15,1.25,20,0.717,22,1.34,23,0.02,24,0.825,25,0.599,26,1.34,31,1.273,32,2.14,36,1.091,38,0.368,40,0.791,42,0.455,50,0.117,51,0.006,52,1.121,53,0.757,57,1.724,62,2.908,63,2.312,64,2.829,66,2.11,70,2.829,71,1.639,72,1.542,75,0.009,76,0.009,89,2.218,125,0.719,144,1.963,169,0.938,225,2.506,259,2.829,261,2.483,327,3.02,342,1.284,353,1.385,354,1.385,398,3.033,404,3.033,405,1.385,407,0.938,409,0.841,420,3.604,421,0.938,441,3.209,442,2.602,443,3.633,444,2.602,445,3.209,446,3.209,447,1.66,456,2.602,458,1.121,466,2.667,469,1.877,471,4.432,473,2.602,476,1.66,477,2.811,479,2.013,483,1.66,484,2.811,490,1.197,493,2.363,494,1.652,495,1.758,496,1.864,500,1.66,514,3.604,529,1.66,533,2.172,547,1.197,665,3.802,667,2.915,668,4.08,673,1.507,676,2.602,677,1.66,679,1.864,681,1.864,682,2.174,683,2.174,684,3.408,685,2.174,686,2.174,687,2.174,688,2.174,689,4.758,690,2.174,691,2.174,692,2.174,693,2.174,694,2.174,695,2.174,696,2.174,697,2.174,698,2.174,699,4.203,700,4.203,701,4.203]],["title/injectables/HashingProvider.html",[40,0.851,240,1.777]],["body/injectables/HashingProvider.html",[3,0.24,4,0.212,5,0.212,9,0.388,10,1.319,20,0.71,22,1.388,23,0.02,24,0.855,25,0.621,26,1.388,31,1.319,32,2.185,36,1.225,38,0.268,40,1.319,42,0.93,50,0.24,51,0.011,75,0.015,76,0.015,169,1.917,240,2.755,311,5.372,312,4.872,313,3.809,314,5.987,315,5.372,317,5.372,318,4.872,702,3.809,703,7.098,704,4.442,705,4.442]],["title/classes/Product.html",[51,0.009,378,1.581]],["body/classes/Product.html",[3,0.246,4,0.218,5,0.218,9,0.398,20,0.723,23,0.02,24,0.954,25,0.729,36,1.125,38,0.349,50,0.312,51,0.012,57,1.435,72,2.447,75,0.015,76,0.015,83,2.013,88,3.941,95,1.817,125,1.51,328,1.589,344,3.441,372,5.44,378,2.495,407,1.969,423,3.684,430,4.044,431,2.803,432,2.908,433,3.684,434,2.354,706,3.484,707,4.563,708,4.563,709,3.164,710,3.912]],["title/controllers/ProductController.html",[90,1.417,711,2.541]],["body/controllers/ProductController.html",[3,0.127,4,0.112,5,0.112,9,0.205,10,0.841,11,2.255,13,0.863,15,0.863,20,0.67,22,1.213,23,0.02,24,0.747,25,0.543,26,1.213,31,1.245,34,2.31,36,1.055,38,0.356,39,0.961,42,0.493,50,0.127,51,0.006,53,0.82,59,2.818,63,1.262,71,1.603,75,0.009,76,0.009,89,2.418,90,0.91,92,0.91,95,1.686,177,1.5,178,1.214,186,2.513,187,3.187,189,3.443,194,3.418,201,2.31,202,2.31,208,3.611,209,4.069,210,0.82,217,1.214,219,1.39,223,3.719,225,3.031,226,3.928,270,1.5,271,1.39,370,3.12,378,3.074,409,0.91,421,1.564,448,1.797,449,3.375,452,2.767,453,2.767,454,2.767,457,1.797,458,2.281,463,4.653,464,2.767,465,4.325,466,3.293,468,1.797,469,2.735,474,1.797,478,1.797,479,2.141,481,2.767,488,1.797,489,1.797,490,1.296,494,1.141,497,1.797,499,1.632,504,3.375,505,3.375,508,1.797,512,1.797,513,1.797,519,1.797,581,2.018,582,3.065,585,2.018,601,1.214,637,2.281,655,2.018,711,2.513,712,2.018,713,2.767,714,2.767,715,3.792,716,2.767,717,3.375,718,1.797,719,2.353,720,1.797,721,4.42,722,2.353,723,2.353,724,1.797,725,2.353,726,1.797,727,3.6,728,2.353,729,2.018,730,1.797,731,2.353,732,2.353,733,2.353,734,2.353,735,2.353,736,2.353,737,2.353,738,2.353,739,2.353,740,2.353]],["title/interfaces/ProductInterface.html",[77,1.417,637,1.89]],["body/interfaces/ProductInterface.html",[3,0.216,4,0.191,5,0.191,9,0.349,10,1.231,20,0.825,22,1.549,23,0.019,24,0.954,25,0.693,26,1.549,31,1.532,32,2.377,36,1.2,38,0.359,50,0.216,75,0.014,76,0.014,77,1.546,79,2.201,89,2.303,370,3.635,378,1.725,409,1.546,494,1.938,601,2.062,624,2.361,637,2.736,713,4.049,714,4.049,715,4.842,716,4.049,717,4.049,718,4.049,720,4.049,724,4.049,726,4.049,727,4.089,730,3.051,741,3.426,742,3.996,743,3.996,744,3.996,745,3.996,746,3.996]],["title/modules/ProductModule.html",[101,1.417,116,2.165]],["body/modules/ProductModule.html",[3,0.227,4,0.201,5,0.201,23,0.02,24,0.631,38,0.405,42,0.878,50,0.227,51,0.011,75,0.014,76,0.014,92,2.119,101,2.359,103,2.034,104,2.034,105,2.311,106,2.311,107,2.034,108,3.359,109,3.359,116,4.197,118,3.017,119,2.311,120,2.165,122,2.479,124,2.674,125,1.388,167,2.479,251,2.674,378,1.811,431,2.034,537,2.909,624,2.479,629,3.597,630,3.597,637,3.614,709,3.797,711,4.228,747,3.597,748,3.597,749,3.597,750,4.707,751,4.195,752,4.195]],["title/injectables/ProductServiceImpl.html",[40,0.851,750,2.335]],["body/injectables/ProductServiceImpl.html",[3,0.132,4,0.117,5,0.117,9,0.213,10,0.866,11,2.271,13,0.897,15,1.369,20,0.719,22,1.333,23,0.02,24,0.821,25,0.596,26,1.333,31,1.267,32,2.134,36,1.066,38,0.372,40,0.866,42,0.512,50,0.132,51,0.006,52,1.261,53,0.851,57,1.715,62,2.889,63,2.284,64,2.815,66,2.228,70,2.815,71,1.631,72,1.369,75,0.01,76,0.01,89,2.111,125,0.809,169,1.055,259,2.815,261,3.223,370,3.005,378,2.662,398,3.229,404,3.666,405,1.558,407,1.055,409,0.946,421,1.055,458,1.261,466,2.614,469,2.056,479,1.444,490,1.347,494,1.185,547,1.347,582,3.783,601,1.261,624,1.444,637,1.925,665,3.783,667,1.695,673,1.695,676,1.866,677,1.866,713,2.849,714,2.849,715,3.868,716,2.849,717,3.456,718,2.849,720,2.849,724,2.849,726,1.866,727,3.644,729,2.096,730,1.866,750,2.379,753,2.096,754,2.444,755,2.444,756,3.732,757,2.444,758,2.444,759,2.444,760,2.444,761,2.444,762,2.096,763,2.444,764,2.444,765,2.444,766,2.444,767,2.444,768,4.526,769,2.444,770,2.444,771,4.526,772,2.444,773,4.526,774,2.444]],["title/classes/SignInDto.html",[51,0.009,199,2.018]],["body/classes/SignInDto.html",[3,0.261,4,0.231,5,0.231,9,0.422,20,0.75,23,0.019,25,0.656,36,1.149,38,0.362,50,0.261,51,0.015,75,0.016,76,0.016,83,2.089,84,2.979,95,1.886,199,3.304,210,1.686,328,1.686,347,3.591,350,3.851,351,3.544,352,2.497,364,4.15,381,4.155,390,5.143,775,4.15,776,4.84,777,4.84,778,4.84]],["title/injectables/SignInProvider.html",[40,0.851,241,2.165]],["body/injectables/SignInProvider.html",[3,0.179,4,0.158,5,0.158,9,0.289,10,1.083,11,1.787,13,2.151,15,1.712,17,5.647,18,4.63,19,5.026,20,0.583,22,1.14,23,0.02,24,0.702,25,0.51,26,1.14,31,0.769,32,1.543,38,0.406,39,1.353,40,1.083,41,2.529,42,0.694,43,2.111,44,2.111,45,2.297,50,0.179,51,0.008,53,2.042,54,2.84,57,1.698,62,2.468,63,1.881,64,1.709,66,2.205,70,1.709,71,0.99,75,0.012,76,0.012,81,1.881,84,2.468,85,2.84,169,1.43,180,3.235,195,3.235,199,3.404,211,2.297,212,3.108,213,2.84,221,2.529,236,2.529,240,3.193,241,2.756,250,2.84,256,2.84,259,1.709,261,1.957,295,4,321,2.84,381,2.974,458,1.709,779,2.84,780,3.312,781,3.312,782,3.312,783,3.312,784,4.665,785,5.4,786,3.312,787,3.312,788,3.312,789,3.312,790,3.312,791,3.312,792,3.312,793,3.312,794,3.312,795,3.312,796,3.312,797,3.312,798,3.312,799,3.312,800,3.312,801,3.312,802,3.312,803,3.312,804,4,805,2.84,806,2.84]],["title/classes/UpdateEmployeeDto.html",[51,0.009,477,2.165]],["body/classes/UpdateEmployeeDto.html",[3,0.274,4,0.242,5,0.242,23,0.019,38,0.418,50,0.274,51,0.016,75,0.016,76,0.016,210,1.765,327,2.792,328,1.765,330,3.87,342,2.994,347,2.792,348,3.87,349,3.87,350,2.994,351,2.994,352,2.615,353,3.23,354,3.23,421,2.187,434,3.183,477,3.645,493,3.514,807,3.87,808,6.17,809,3.87,810,5.068]],["title/classes/UpdateEmployeeProductDto.html",[51,0.009,595,2.165]],["body/classes/UpdateEmployeeProductDto.html",[3,0.288,4,0.255,5,0.255,23,0.019,38,0.384,50,0.288,51,0.014,75,0.017,76,0.017,144,2.001,210,1.859,328,1.859,357,2.94,358,2.439,360,3.7,421,2.303,434,3.284,595,3.76,601,2.753,809,4.075,811,4.576,812,6.365]],["title/classes/UpdateEmployeeStatusDto.html",[51,0.009,484,2.165]],["body/classes/UpdateEmployeeStatusDto.html",[3,0.255,4,0.226,5,0.226,9,0.412,20,0.59,23,0.019,25,0.516,38,0.389,50,0.255,51,0.015,75,0.015,76,0.015,83,2.057,95,1.484,144,2.123,187,2.698,210,1.644,225,3.371,328,1.644,342,4.107,343,4.047,347,3.253,349,3.604,352,2.435,353,3.008,354,3.008,355,3.604,356,4.047,484,3.488,807,4.508,813,4.047,814,5.063,815,5.063,816,4.72,817,4.72,818,4.047]],["title/classes/UpdateProductDto.html",[51,0.009,727,2.165]],["body/classes/UpdateProductDto.html",[3,0.291,4,0.258,5,0.258,23,0.019,38,0.386,50,0.291,51,0.014,75,0.017,76,0.017,210,1.879,328,1.879,370,2.971,421,2.328,434,3.305,601,2.783,727,3.784,809,4.118,819,4.625,820,4.625,821,6.405]],["title/classes/User.html",[51,0.009,81,1.276]],["body/classes/User.html",[3,0.216,4,0.191,5,0.191,9,0.35,20,0.794,23,0.02,25,0.757,36,1.213,38,0.321,50,0.287,51,0.01,57,1.26,72,2.637,75,0.014,76,0.014,81,1.85,83,1.85,84,2.724,95,1.996,125,1.325,328,1.395,337,3.75,344,3.574,380,5.111,381,3.8,382,5.111,391,4.555,407,1.729,423,3.8,430,4.21,431,2.576,432,2.554,433,3.386,434,2.067,822,3.059,823,4.006,824,4.006,825,5.313,826,4.006,827,4.555,828,4.006,829,4.006,830,2.778,831,3.435]],["title/controllers/UserController.html",[90,1.417,832,2.541]],["body/controllers/UserController.html",[3,0.201,4,0.178,5,0.178,9,0.325,10,1.174,11,2.249,13,1.365,15,1.365,20,0.632,22,0.909,23,0.02,24,0.56,25,0.407,26,0.909,31,1.174,36,1.039,38,0.401,39,1.519,42,0.779,50,0.201,51,0.009,53,1.296,57,1.17,62,1.7,63,1.296,66,1.519,71,1.716,75,0.013,76,0.013,81,2.244,84,2.624,89,1.956,90,1.439,92,1.439,95,1.589,177,2.371,178,1.919,182,1.919,194,3.222,201,2.371,202,2.371,207,2.58,208,2.371,209,2.371,210,1.296,212,2.784,215,2.371,217,1.919,219,2.198,221,2.841,230,3.19,270,2.371,271,2.198,409,1.439,466,1.919,490,2.049,491,2.841,499,2.58,832,3.505,833,3.19,834,4.704,835,3.86,836,3.72,837,3.72,838,2.841,839,5.055,840,3.72,841,3.19,842,3.72,843,3.72,844,3.72,845,3.72,846,3.72,847,3.72,848,3.19,849,3.72,850,3.72,851,3.72,852,3.72]],["title/interfaces/UserInterface.html",[77,1.417,212,1.777]],["body/interfaces/UserInterface.html",[3,0.234,4,0.207,5,0.207,9,0.378,10,1.297,20,0.818,22,1.512,23,0.019,24,0.931,25,0.676,26,1.512,31,1.518,32,2.365,36,1.17,38,0.337,50,0.234,75,0.015,76,0.015,77,1.674,79,2.384,81,1.507,84,1.978,89,1.674,182,3.493,212,2.71,215,2.758,396,4.267,401,4.267,406,3.001,409,1.674,834,4.994,835,4.267,838,4.267,853,3.711,854,4.791,855,4.328,856,4.328,857,4.791,858,4.328,859,4.328,860,3.711]],["title/modules/UserModule.html",[101,1.417,117,2.165]],["body/modules/UserModule.html",[3,0.213,4,0.188,5,0.188,23,0.02,24,0.593,38,0.416,42,0.826,50,0.213,51,0.01,75,0.014,76,0.014,81,1.374,92,2.034,101,2.288,103,1.912,104,1.912,105,2.172,106,2.172,107,1.912,108,3.258,109,3.258,113,3.106,117,4.235,118,2.896,119,2.172,120,2.035,122,2.33,124,2.514,125,1.305,167,2.33,212,3.345,243,3.106,251,2.514,393,3.993,406,2.735,431,1.912,537,2.735,830,3.646,832,4.101,861,3.381,862,3.381,863,3.381,864,4.667,865,3.944,866,3.944,867,3.944,868,3.944,869,3.381,870,3.381,871,3.944]],["title/injectables/UserServiceImpl.html",[40,0.851,864,2.335]],["body/injectables/UserServiceImpl.html",[3,0.142,4,0.125,5,0.125,9,0.229,10,0.914,11,2.235,13,1.444,15,1.444,20,0.703,22,1.283,23,0.02,24,0.79,25,0.574,26,1.283,31,1.219,32,2.085,36,0.997,38,0.389,39,1.071,40,0.914,42,0.549,50,0.142,51,0.007,52,1.353,53,1.371,57,1.651,62,2.8,63,2.134,64,2.709,66,2.144,70,2.709,71,1.569,75,0.01,76,0.01,81,2.245,84,2.399,89,1.523,125,0.868,169,1.132,182,2.903,212,1.909,215,1.672,240,1.272,243,1.549,259,3.162,261,3.102,278,2.249,393,3.62,396,3.005,397,2.249,398,3.347,400,3.375,401,3.005,403,2.249,404,3.586,405,1.672,406,1.819,407,1.132,408,2.249,409,1.015,410,2.249,421,1.132,458,1.353,466,2.438,469,2.603,490,1.445,547,1.445,665,1.819,667,1.819,673,1.819,804,3.375,805,2.249,806,2.249,834,4.009,835,3.005,838,3.005,841,2.249,848,3.375,854,3.375,857,3.375,860,2.249,864,2.509,869,2.249,870,2.249,872,2.249,873,2.623,874,2.623,875,2.623,876,2.623,877,2.623,878,2.249,879,2.623,880,2.623,881,2.623,882,2.623,883,5.908,884,2.623,885,2.623,886,2.623,887,2.623,888,2.623,889,2.623]],["title/coverage.html",[890,3.82]],["body/coverage.html",[0,2.663,1,1.618,5,0.121,6,2.177,7,1.76,8,2.177,23,0.02,25,0.277,40,1.512,48,1.939,51,0.017,63,0.884,75,0.01,76,0.01,77,2.258,78,1.76,80,2.177,81,1.338,82,2.177,90,2.258,91,1.76,93,2.177,97,1.5,107,1.231,139,1.76,144,1.624,145,2.845,170,2.177,175,1.76,176,2.177,178,1.31,182,1.31,199,1.399,205,1.5,212,1.231,214,1.939,233,1.5,234,2.177,240,1.231,241,1.5,246,1.76,252,2.177,262,2.177,269,1.939,310,2.177,327,1.399,329,2.177,330,2.933,357,1.399,358,2.92,359,2.177,360,3.212,370,1.399,371,2.177,378,1.096,379,2.177,393,1.5,394,2.177,395,2.177,422,2.933,437,1.76,439,1.76,440,2.177,477,1.5,484,1.5,495,1.31,522,2.177,533,1.618,539,1.76,540,2.933,547,4.164,552,1.939,554,1.5,555,2.933,563,1.76,565,1.76,566,2.177,595,1.5,598,1.5,615,2.177,616,2.177,627,1.618,634,2.177,637,1.31,681,2.177,702,2.177,706,2.933,709,1.76,711,1.76,712,2.177,727,1.5,741,2.177,750,1.618,753,2.177,775,2.177,779,2.177,807,2.933,811,2.177,813,2.177,819,2.177,820,2.177,822,2.933,830,1.76,832,1.76,833,2.177,853,2.177,864,1.618,872,2.177,890,1.939,891,2.177,892,2.539,893,2.539,894,5.165,895,6.513,896,2.177,897,6.513,898,6.913,899,2.177,900,2.177,901,2.177,902,3.293,903,3.841,904,5.165,905,2.539,906,2.539,907,4.633,908,5.548,909,2.539,910,5.548,911,2.177,912,3.841,913,2.177,914,2.177,915,2.177,916,2.177,917,2.539,918,2.539]],["title/dependencies.html",[104,2.137,919,2.622]],["body/dependencies.html",[23,0.02,42,0.991,43,3.018,44,3.018,47,4.059,51,0.015,75,0.015,76,0.015,104,2.296,125,1.566,131,4.059,132,3.615,138,3.615,210,1.649,273,4.059,320,4.059,352,2.443,407,2.043,649,4.059,762,4.059,920,4.734,921,4.734,922,6.453,923,4.734,924,5.916,925,4.734,926,4.734,927,4.734,928,4.734,929,4.734,930,4.734,931,4.734,932,4.734,933,4.734,934,4.734,935,4.734,936,4.734,937,4.734,938,4.734,939,4.734,940,4.734,941,4.734,942,4.734,943,4.734]],["title/miscellaneous/enumerations.html",[944,1.807,945,3.779]],["body/miscellaneous/enumerations.html",[9,0.458,23,0.019,75,0.016,76,0.016,217,3.25,271,3.098,342,3.721,814,5.4,815,5.4,818,5.4,944,3.098,945,4.496,946,5.244,947,6.298,948,5.244,949,6.298,950,4.496,951,5.244,952,5.244,953,6.004,954,6.298]],["title/miscellaneous/functions.html",[944,1.807,955,3.779]],["body/miscellaneous/functions.html",[9,0.477,22,1.337,23,0.018,24,0.823,25,0.598,26,1.337,75,0.017,76,0.017,107,3.333,911,4.692,915,4.692,916,5.539,944,3.233,955,4.692,956,5.471,957,5.471,958,5.471,959,6.46,960,5.471]],["title/index.html",[9,0.267,961,3.058,962,3.058]],["body/index.html",[4,0.146,23,0.019,75,0.011,76,0.011,120,3.218,133,2.617,187,1.394,294,2.617,297,5.348,878,2.617,890,2.33,891,3.773,963,3.052,964,3.052,965,5.16,966,4.4,967,3.052,968,3.052,969,3.052,970,3.052,971,4.4,972,5.16,973,3.052,974,3.052,975,3.052,976,5.648,977,3.052,978,5.648,979,6.581,980,3.052,981,6.429,982,3.052,983,3.052,984,3.052,985,4.4,986,3.052,987,4.4,988,3.052,989,5.16,990,3.052,991,4.4,992,3.052,993,3.052,994,3.052,995,3.052,996,3.052,997,5.648,998,6.581,999,6.238,1000,3.052,1001,4.4,1002,3.052,1003,3.052,1004,3.052,1005,3.052,1006,3.052,1007,4.4,1008,5.648,1009,3.052,1010,4.4,1011,3.052,1012,3.052,1013,4.4,1014,5.987,1015,5.648,1016,3.052,1017,4.4,1018,3.052,1019,3.052,1020,3.052,1021,3.052,1022,5.648,1023,3.052,1024,3.052,1025,3.052,1026,3.052,1027,3.052,1028,4.4,1029,3.052,1030,3.052,1031,3.052,1032,3.052,1033,3.052,1034,4.4,1035,3.052,1036,3.052,1037,3.052,1038,4.4,1039,3.052,1040,3.052,1041,4.843,1042,4.4,1043,3.052,1044,3.052,1045,3.052,1046,3.052,1047,3.052,1048,3.052,1049,3.052,1050,3.052,1051,4.4,1052,3.052,1053,3.052,1054,3.052,1055,3.052,1056,5.16,1057,3.052,1058,3.052,1059,3.052,1060,3.052,1061,3.052,1062,3.052,1063,4.4,1064,3.052,1065,3.052,1066,3.052,1067,3.052,1068,3.052,1069,4.4,1070,3.052,1071,3.052,1072,3.052,1073,3.773,1074,4.4,1075,3.052,1076,3.052,1077,3.052,1078,3.052,1079,3.052,1080,3.052,1081,3.052,1082,3.052,1083,2.617,1084,3.052,1085,3.052,1086,3.052,1087,3.052,1088,3.052,1089,3.052,1090,2.33]],["title/modules.html",[103,2.426]],["body/modules.html",[23,0.016,75,0.016,76,0.016,102,3.661,103,2.56,113,3.12,114,3.12,115,3.366,116,3.12,117,3.12,1041,6.247,1091,7.285,1092,7.285,1093,7.285]],["title/overview.html",[1094,4.29]],["body/overview.html",[2,2.682,23,0.019,75,0.013,76,0.013,79,1.935,92,1.359,97,3.292,101,1.359,102,5.021,103,1.703,104,1.703,105,1.935,106,1.935,107,1.703,108,1.935,109,1.935,110,3.012,111,3.012,112,3.012,113,4.142,114,3.955,115,4.024,116,3.955,117,4.092,118,2.677,119,1.935,120,1.812,169,1.516,205,3.955,212,2.916,233,3.553,237,3.012,238,3.012,239,3.012,240,2.916,241,3.292,328,1.223,393,3.292,495,3.102,530,3.012,531,3.012,532,3.012,533,4.267,625,3.012,626,3.012,627,3.552,637,3.102,747,3.012,748,3.012,749,3.012,750,4.267,827,4.778,861,3.012,862,3.012,863,3.012,864,4.267,1094,3.012,1095,3.513,1096,3.513,1097,3.513]],["title/properties.html",[83,1.535,919,2.622]],["body/properties.html",[23,0.019,75,0.017,76,0.017,83,1.977,187,2.594,1083,4.868,1090,4.335,1098,5.677,1099,5.677,1100,5.677]],["title/miscellaneous/variables.html",[944,1.807,1101,3.779]],["body/miscellaneous/variables.html",[9,0.312,23,0.02,24,0.538,25,0.615,28,2.733,34,2.281,36,0.831,37,2.281,48,3.759,57,1.548,59,3.138,60,3.069,63,1.247,69,3.069,71,1.07,75,0.013,76,0.013,78,3.414,81,2.111,145,1.972,158,4.221,178,2.54,187,1.636,217,2.54,269,3.759,276,4.486,282,4.221,358,2.25,422,2.733,437,3.414,438,3.069,540,2.733,552,3.759,553,3.069,555,3.759,563,3.414,564,3.069,706,2.733,709,3.414,710,3.069,822,2.733,830,3.414,831,3.069,896,3.069,899,3.069,900,4.221,901,4.221,902,3.069,913,3.069,914,4.221,944,2.115,950,4.221,953,6.034,1073,3.069,1090,2.733,1101,3.069,1102,3.579,1103,4.923,1104,3.579,1105,3.579,1106,3.579,1107,3.579,1108,3.579,1109,3.579,1110,3.579,1111,3.579,1112,6.061,1113,3.579,1114,3.579,1115,3.579,1116,3.579,1117,3.579,1118,3.579,1119,3.579,1120,3.579,1121,3.579,1122,3.579,1123,3.579,1124,3.579,1125,3.579,1126,3.579,1127,3.579,1128,3.579,1129,3.579,1130,3.579,1131,3.579,1132,3.579,1133,3.579,1134,3.579,1135,3.579,1136,4.923,1137,3.579,1138,3.579,1139,3.579]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"modules/EmployeeProductModule.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeProductDto.html":{},"classes/UpdateEmployeeStatusDto.html":{},"classes/UpdateProductDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":547,"title":{},"body":{"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/ProductServiceImpl.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1099,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":935,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":941,"title":{},"body":{"dependencies.html":{}}}],["0.3.24",{"_index":943,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":934,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":898,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":894,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":895,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":903,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":904,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":908,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":910,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":907,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":909,"title":{},"body":{"coverage.html":{}}}],["1.1.26",{"_index":921,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1095,"title":{},"body":{"overview.html":{}}}],["11.0.0",{"_index":924,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":922,"title":{},"body":{"dependencies.html":{}}}],["11.0.3",{"_index":927,"title":{},"body":{"dependencies.html":{}}}],["11.2.0",{"_index":930,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":1096,"title":{},"body":{"overview.html":{}}}],["2",{"_index":1097,"title":{},"body":{"overview.html":{}}}],["2.1.0",{"_index":926,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":906,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":463,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["201",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["4.0.2",{"_index":923,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":453,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["404",{"_index":465,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["409",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["5.0.3",{"_index":929,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":827,"title":{},"body":{"classes/User.html":{},"overview.html":{}}}],["6.0.0",{"_index":932,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":905,"title":{},"body":{"coverage.html":{}}}],["7.8.1",{"_index":942,"title":{},"body":{"dependencies.html":{}}}],["8.15.1",{"_index":936,"title":{},"body":{"dependencies.html":{}}}],["8.16.0",{"_index":938,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":73,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["_id",{"_index":461,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{}}}],["abstract",{"_index":703,"title":{},"body":{"injectables/HashingProvider.html":{}}}],["acces",{"_index":299,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["access",{"_index":274,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["accesstoken",{"_index":295,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/SignInProvider.html":{}}}],["accesstokenguard",{"_index":1,"title":{"guards/AccessTokenGuard.html":{}},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["active",{"_index":814,"title":{},"body":{"classes/UpdateEmployeeStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["activeuser",{"_index":901,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["activeuserdata",{"_index":78,"title":{"interfaces/ActiveUserData.html":{}},"body":{"interfaces/ActiveUserData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["addbearerauth",{"_index":1132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["address",{"_index":87,"title":{},"body":{"interfaces/ActiveUserData.html":{},"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{}}}],["allowing",{"_index":1029,"title":{},"body":{"index.html":{}}}],["already",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CreateUserProvider.html":{}}}],["amazing",{"_index":1079,"title":{},"body":{"index.html":{}}}],["api",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":497,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["apibearerauth('bearer",{"_index":505,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["apibody",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["apiparam",{"_index":498,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{}}}],["apiproperty",{"_index":347,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeStatusDto.html":{}}}],["apiproperty()@isdatestring",{"_index":383,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isemail",{"_index":385,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isemail()@isnotempty",{"_index":776,"title":{},"body":{"classes/SignInDto.html":{}}}],["apiproperty()@isnotempty()@isstring",{"_index":373,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["apiproperty()@isnotempty()@minlength(6",{"_index":387,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isnumber()@isnotempty",{"_index":367,"title":{},"body":{"classes/CreateEmployeeProductDto.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":364,"title":{},"body":{"classes/CreateEmployeeProductDto.html":{},"classes/SignInDto.html":{}}}],["apiproperty({enum",{"_index":343,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeStatusDto.html":{}}}],["apiproperty({required",{"_index":334,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["apiproperty({type",{"_index":374,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["apiquery",{"_index":597,"title":{},"body":{"controllers/EmployeeProductController.html":{}}}],["apiresponse",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["apitags",{"_index":499,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["apitags('employee",{"_index":501,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["apitags('employeeproduct",{"_index":602,"title":{},"body":{"controllers/EmployeeProductController.html":{}}}],["apitags('product",{"_index":731,"title":{},"body":{"controllers/ProductController.html":{}}}],["apitags('user",{"_index":842,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":960,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app.controller",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":98,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":91,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":999,"title":{},"body":{"index.html":{}}}],["applications",{"_index":971,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":102,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":97,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":11,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"controllers/ProductController.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{}}}],["audience",{"_index":796,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["auth",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth(authtype.bearer",{"_index":504,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["auth(authtype.none",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["auth.controller",{"_index":244,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/config/jwt.config",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/access",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/authentication/authentication.guard",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["auth_type_key",{"_index":269,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":175,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticationguard",{"_index":139,"title":{"guards/AuthenticationGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["authenticationguard.defaultauthtype",{"_index":286,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authinterface",{"_index":233,"title":{"interfaces/AuthInterface.html":{}},"body":{"interfaces/AuthInterface.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authmodule",{"_index":113,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1083,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorised",{"_index":305,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authorization",{"_index":1137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice",{"_index":205,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authtype",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["authtype.bearer",{"_index":280,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtype.none",{"_index":277,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtypeguardmap",{"_index":263,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtypes",{"_index":282,"title":{},"body":{"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["authtypes.map((type",{"_index":287,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["await",{"_index":66,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{}}}],["aws",{"_index":1017,"title":{},"body":{"index.html":{}}}],["backers",{"_index":1080,"title":{},"body":{"index.html":{}}}],["bad",{"_index":454,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["base",{"_index":1124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["based",{"_index":1012,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":320,"title":{},"body":{"injectables/BcryptProvider.html":{},"dependencies.html":{}}}],["bcrypt.compare(data",{"_index":326,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["bcrypt.gensalt",{"_index":324,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["bcrypt.hash(data",{"_index":325,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["bcryptprovider",{"_index":246,"title":{"injectables/BcryptProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/BcryptProvider.html":{},"coverage.html":{}}}],["bearer",{"_index":950,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":1135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["board",{"_index":1072,"title":{},"body":{"index.html":{}}}],["body",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":786,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["bootstrap",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeProductModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1093,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1091,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":314,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["build",{"_index":1139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":966,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":12,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["canactivate(context",{"_index":27,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["catch",{"_index":70,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AuthService.html":{},"injectables/CreateUserProvider.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"injectables/UserServiceImpl.html":{}}}],["catch((err",{"_index":308,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["channel",{"_index":1044,"title":{},"body":{"index.html":{}}}],["check",{"_index":297,"title":{},"body":{"guards/AuthenticationGuard.html":{},"index.html":{}}}],["class",{"_index":51,"title":{"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/Employee.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"classes/Product.html":{},"classes/SignInDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeProductDto.html":{},"classes/UpdateEmployeeStatusDto.html":{},"classes/UpdateProductDto.html":{},"classes/User.html":{}},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"controllers/EmployeeProductController.html":{},"modules/EmployeeProductModule.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeProductDto.html":{},"classes/UpdateEmployeeStatusDto.html":{},"classes/UpdateProductDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":328,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/Employee.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"classes/Product.html":{},"classes/SignInDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeProductDto.html":{},"classes/UpdateEmployeeStatusDto.html":{},"classes/UpdateProductDto.html":{},"classes/User.html":{},"overview.html":{}}}],["clicks",{"_index":1028,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":1011,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":238,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_employeemodule",{"_index":530,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["cluster_employeemodule_exports",{"_index":531,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["cluster_employeemodule_providers",{"_index":532,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["cluster_employeeproductmodule",{"_index":625,"title":{},"body":{"modules/EmployeeProductModule.html":{},"overview.html":{}}}],["cluster_employeeproductmodule_providers",{"_index":626,"title":{},"body":{"modules/EmployeeProductModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":747,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_exports",{"_index":749,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_providers",{"_index":748,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":861,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":862,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":863,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["come",{"_index":1035,"title":{},"body":{"index.html":{}}}],["comparepassword",{"_index":311,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["comparepassword(data",{"_index":313,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["comparison",{"_index":792,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["compodoc/compodoc",{"_index":920,"title":{},"body":{"dependencies.html":{}}}],["config/jwt.config",{"_index":250,"title":{},"body":{"modules/AuthModule.html":{},"injectables/SignInProvider.html":{}}}],["configmodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forfeature(jwtconfig",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mongodb_name",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mongodb_uri",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["configtype",{"_index":19,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/SignInProvider.html":{}}}],["conflictexception",{"_index":403,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/UserServiceImpl.html":{}}}],["conflictexception('user",{"_index":414,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["console.log('finding",{"_index":846,"title":{},"body":{"controllers/UserController.html":{}}}],["const",{"_index":57,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"classes/Product.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{},"miscellaneous/variables.html":{}}}],["constant",{"_index":292,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["constructor",{"_index":15,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"controllers/ProductController.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{}}}],["constructor(employeemodel",{"_index":682,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["constructor(employeeproductmodel",{"_index":635,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["constructor(jwtservice",{"_index":16,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["constructor(private",{"_index":99,"title":{},"body":{"controllers/AppController.html":{}}}],["constructor(productmodel",{"_index":754,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["constructor(reflector",{"_index":265,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["constructor(signinprovider",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(userinterface",{"_index":780,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["constructor(usermodel",{"_index":397,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/UserServiceImpl.html":{}}}],["context",{"_index":30,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["context.getclass",{"_index":285,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["context.gethandler",{"_index":284,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":58,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["controller",{"_index":90,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('employee",{"_index":502,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{}}}],["controller('product",{"_index":732,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('user",{"_index":843,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":92,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"controllers/EmployeeProductController.html":{},"modules/EmployeeProductModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["courses",{"_index":1050,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":890,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":421,"title":{},"body":{"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"controllers/ProductController.html":{},"injectables/ProductServiceImpl.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeProductDto.html":{},"classes/UpdateProductDto.html":{},"injectables/UserServiceImpl.html":{}}}],["created",{"_index":452,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["createdemployee",{"_index":693,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["createdemployee.save",{"_index":695,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["createdemployeeproduct",{"_index":662,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["createdemployeeproduct.save",{"_index":664,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["createdproduct",{"_index":764,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["createdproduct.save",{"_index":766,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["createemployee",{"_index":441,"title":{},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["createemployee(@body",{"_index":506,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["createemployee(createemployeedto",{"_index":447,"title":{},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["createemployeedto",{"_index":327,"title":{"classes/CreateEmployeeDto.html":{}},"body":{"classes/CreateEmployeeDto.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{},"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["createemployeedto})@apiresponse({status",{"_index":451,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["createemployeeproduct",{"_index":567,"title":{},"body":{"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{}}}],["createemployeeproduct(createemployeeproductdto",{"_index":574,"title":{},"body":{"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{}}}],["createemployeeproductdto",{"_index":357,"title":{"classes/CreateEmployeeProductDto.html":{}},"body":{"classes/CreateEmployeeProductDto.html":{},"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{},"classes/UpdateEmployeeProductDto.html":{},"coverage.html":{}}}],["createemployeeproductdto.quantity",{"_index":661,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["createemployeeproductdto})@apiresponse({status",{"_index":576,"title":{},"body":{"controllers/EmployeeProductController.html":{}}}],["createparamdecorator",{"_index":1111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproduct",{"_index":713,"title":{},"body":{"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{}}}],["createproduct(@body",{"_index":733,"title":{},"body":{"controllers/ProductController.html":{}}}],["createproduct(createproductdto",{"_index":718,"title":{},"body":{"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{}}}],["createproductdto",{"_index":370,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["createuser",{"_index":396,"title":{},"body":{"injectables/CreateUserProvider.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["createuser(createuserdto",{"_index":401,"title":{},"body":{"injectables/CreateUserProvider.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["createuserdto",{"_index":182,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{}}}],["createuserdto})@apiresponse({status",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{}}}],["createuserprovider",{"_index":393,"title":{"injectables/CreateUserProvider.html":{}},"body":{"injectables/CreateUserProvider.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{},"overview.html":{}}}],["creating",{"_index":882,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["ctx",{"_index":1114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":317,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["data.interface.ts",{"_index":82,"title":{},"body":{"interfaces/ActiveUserData.html":{},"coverage.html":{}}}],["date",{"_index":337,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"injectables/EmployeeProductServiceImpl.html":{},"classes/User.html":{}}}],["date.now",{"_index":551,"title":{},"body":{"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{}}}],["dateofbirth",{"_index":380,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["dbname",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["decalre",{"_index":291,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["declarations",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeProductModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["declare",{"_index":289,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["decorator",{"_index":1117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":95,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"controllers/EmployeeProductController.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"classes/SignInDto.html":{},"classes/UpdateEmployeeStatusDto.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["decorators/auth.decorator",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["deeper",{"_index":1046,"title":{},"body":{"index.html":{}}}],["default",{"_index":276,"title":{},"body":{"guards/AuthenticationGuard.html":{},"classes/Employee.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"miscellaneous/variables.html":{}}}],["defaultauthtype",{"_index":264,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["defined",{"_index":20,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/UpdateEmployeeStatusDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["delete",{"_index":458,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"controllers/ProductController.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"injectables/UserServiceImpl.html":{}}}],["delete('/:id",{"_index":519,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["delete('/:id')@auth(authtype.bearer)@apibearerauth('bearer",{"_index":457,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["deleted",{"_index":464,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["deletedemployeeproduct",{"_index":678,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["deleteemployee",{"_index":442,"title":{},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["deleteemployee(@param('id",{"_index":520,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["deleteemployee(id",{"_index":456,"title":{},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["deleteemployeeproduct",{"_index":568,"title":{},"body":{"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{}}}],["deleteemployeeproduct(@param('id",{"_index":613,"title":{},"body":{"controllers/EmployeeProductController.html":{}}}],["deleteemployeeproduct(id",{"_index":578,"title":{},"body":{"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{}}}],["deleteproduct",{"_index":714,"title":{},"body":{"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{}}}],["deleteproduct(@param('id",{"_index":739,"title":{},"body":{"controllers/ProductController.html":{}}}],["deleteproduct(id",{"_index":720,"title":{},"body":{"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{}}}],["deletion",{"_index":680,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["dependencies",{"_index":104,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeProductModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":997,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":1016,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":1007,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":1027,"title":{},"body":{"index.html":{}}}],["description",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{},"classes/UpdateEmployeeStatusDto.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":982,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1058,"title":{},"body":{"index.html":{}}}],["discord",{"_index":1043,"title":{},"body":{"index.html":{}}}],["dive",{"_index":1045,"title":{},"body":{"index.html":{}}}],["document",{"_index":433,"title":{},"body":{"classes/Employee.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["documentation",{"_index":891,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documentbuilder",{"_index":1121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dtos/create",{"_index":409,"title":{},"body":{"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["dtos/signin.dto",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["dtos/update",{"_index":494,"title":{},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{}}}],["e2e",{"_index":992,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":967,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":1005,"title":{},"body":{"index.html":{}}}],["email",{"_index":84,"title":{},"body":{"interfaces/ActiveUserData.html":{},"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["email.replace('%40",{"_index":885,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["empid",{"_index":646,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["employee",{"_index":144,"title":{"classes/Employee.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeProductDto.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"classes/EmployeeProduct.html":{},"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"modules/EmployeeProductModule.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"classes/UpdateEmployeeProductDto.html":{},"classes/UpdateEmployeeStatusDto.html":{},"coverage.html":{}}}],["employee'})@apibody({type",{"_index":450,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["employee'})@apiresponse({status",{"_index":462,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{}}}],["employee.controller",{"_index":536,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["employee.dto",{"_index":493,"title":{},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{},"classes/UpdateEmployeeDto.html":{}}}],["employee.dto.ts",{"_index":330,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["employee.dto.ts:14",{"_index":340,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:19",{"_index":336,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:24",{"_index":341,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:28",{"_index":346,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:33",{"_index":338,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:9",{"_index":339,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.name",{"_index":538,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["employee.payroll.schema",{"_index":652,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["employee.schema",{"_index":529,"title":{},"body":{"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["employee.service",{"_index":535,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["employee/employee.module",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["employeecontroller",{"_index":439,"title":{"controllers/EmployeeController.html":{}},"body":{"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"coverage.html":{}}}],["employeeid",{"_index":361,"title":{},"body":{"classes/CreateEmployeeProductDto.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{}}}],["employeeinterface",{"_index":495,"title":{"interfaces/EmployeeInterface.html":{}},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"coverage.html":{},"overview.html":{}}}],["employeemodel",{"_index":684,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["employeemodule",{"_index":114,"title":{"modules/EmployeeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeProductModule.html":{},"modules.html":{},"overview.html":{}}}],["employeepayroll",{"_index":539,"title":{"classes/EmployeePayroll.html":{}},"body":{"classes/EmployeePayroll.html":{},"injectables/EmployeeProductServiceImpl.html":{},"coverage.html":{}}}],["employeepayrollmodel",{"_index":636,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["employeepayrollschema",{"_index":552,"title":{},"body":{"classes/EmployeePayroll.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["employeeproduct",{"_index":554,"title":{"classes/EmployeeProduct.html":{}},"body":{"classes/EmployeeProduct.html":{},"interfaces/EmployeeProductInterface.html":{},"modules/EmployeeProductModule.html":{},"injectables/EmployeeProductServiceImpl.html":{},"coverage.html":{}}}],["employeeproduct.name",{"_index":633,"title":{},"body":{"modules/EmployeeProductModule.html":{}}}],["employeeproductcontroller",{"_index":565,"title":{"controllers/EmployeeProductController.html":{}},"body":{"controllers/EmployeeProductController.html":{},"modules/EmployeeProductModule.html":{},"coverage.html":{}}}],["employeeproductinterface",{"_index":598,"title":{"interfaces/EmployeeProductInterface.html":{}},"body":{"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"modules/EmployeeProductModule.html":{},"injectables/EmployeeProductServiceImpl.html":{},"coverage.html":{}}}],["employeeproductmodel",{"_index":639,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["employeeproductmodule",{"_index":115,"title":{"modules/EmployeeProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EmployeeProductModule.html":{},"modules.html":{},"overview.html":{}}}],["employeeproducts",{"_index":670,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["employeeproducts.length",{"_index":672,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["employeeproductschema",{"_index":563,"title":{},"body":{"classes/EmployeeProduct.html":{},"modules/EmployeeProductModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["employeeproductserviceimpl",{"_index":627,"title":{"injectables/EmployeeProductServiceImpl.html":{}},"body":{"modules/EmployeeProductModule.html":{},"injectables/EmployeeProductServiceImpl.html":{},"coverage.html":{},"overview.html":{}}}],["employees",{"_index":471,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["employees'})@apiresponse({status",{"_index":470,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["employees.length",{"_index":698,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["employeeschema",{"_index":437,"title":{},"body":{"classes/Employee.html":{},"modules/EmployeeModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["employeeserviceimpl",{"_index":533,"title":{"injectables/EmployeeServiceImpl.html":{}},"body":{"modules/EmployeeModule.html":{},"injectables/EmployeeServiceImpl.html":{},"coverage.html":{},"overview.html":{}}}],["employeestatus",{"_index":701,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["employeetodelete",{"_index":700,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["empstatus",{"_index":342,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"injectables/EmployeeServiceImpl.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["empstatus.active",{"_index":436,"title":{},"body":{"classes/Employee.html":{}}}],["encrypted",{"_index":315,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["ensure",{"_index":1003,"title":{},"body":{"index.html":{}}}],["enter",{"_index":1138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enterprise",{"_index":1062,"title":{},"body":{"index.html":{}}}],["enum",{"_index":355,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"classes/UpdateEmployeeStatusDto.html":{}}}],["enumerations",{"_index":945,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/auth",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["enums/emp",{"_index":353,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"injectables/EmployeeServiceImpl.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeStatusDto.html":{}}}],["env",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["env.local",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":309,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["error",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateUserProvider.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"injectables/UserServiceImpl.html":{}}}],["error.message",{"_index":665,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/ProductServiceImpl.html":{},"injectables/UserServiceImpl.html":{}}}],["even",{"_index":303,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["example",{"_index":978,"title":{},"body":{"index.html":{}}}],["exclude",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["exec",{"_index":667,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/ProductServiceImpl.html":{},"injectables/UserServiceImpl.html":{}}}],["execution",{"_index":56,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["executioncontext",{"_index":28,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["existingproduct",{"_index":771,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["existinguser",{"_index":412,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["exists",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CreateUserProvider.html":{}}}],["experience",{"_index":1048,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":802,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["export",{"_index":50,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"modules/EmployeeProductModule.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeProductDto.html":{},"classes/UpdateEmployeeStatusDto.html":{},"classes/UpdateProductDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{}}}],["exports",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeProductModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":47,"title":{},"body":{"guards/AccessTokenGuard.html":{},"dependencies.html":{}}}],["extends",{"_index":434,"title":{},"body":{"classes/Employee.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"classes/Product.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeProductDto.html":{},"classes/UpdateProductDto.html":{},"classes/User.html":{}}}],["extract",{"_index":55,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["extracttokenfromheader",{"_index":14,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["extracttokenfromheader(request",{"_index":33,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["failed",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"injectables/UserServiceImpl.html":{}}}],["false",{"_index":787,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["fast",{"_index":1020,"title":{},"body":{"index.html":{}}}],["features",{"_index":1031,"title":{},"body":{"index.html":{}}}],["few",{"_index":1022,"title":{},"body":{"index.html":{}}}],["field",{"_index":1112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"modules/EmployeeProductModule.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeProductDto.html":{},"classes/UpdateEmployeeStatusDto.html":{},"classes/UpdateProductDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{}}}],["find",{"_index":469,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"controllers/ProductController.html":{},"injectables/ProductServiceImpl.html":{},"injectables/UserServiceImpl.html":{}}}],["findallemployeeproducts",{"_index":569,"title":{},"body":{"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{}}}],["findallemployees",{"_index":443,"title":{},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["findallproducts",{"_index":715,"title":{},"body":{"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{}}}],["findallusers",{"_index":834,"title":{},"body":{"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["findbyid(id",{"_index":666,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["findbyidanddelete(id",{"_index":679,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["findbyidandupdate(id",{"_index":676,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/ProductServiceImpl.html":{}}}],["findemployeebyid",{"_index":444,"title":{},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["findemployeebyid(@param('id",{"_index":509,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["findemployeebyid(id",{"_index":473,"title":{},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["findemployeeproductbyid",{"_index":570,"title":{},"body":{"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{}}}],["findemployeeproductbyid(@param('id",{"_index":609,"title":{},"body":{"controllers/EmployeeProductController.html":{}}}],["findemployeeproductbyid(id",{"_index":584,"title":{},"body":{"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{}}}],["findemployeeproductsbyemployeeid",{"_index":571,"title":{},"body":{"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{}}}],["findemployeeproductsbyemployeeid(@query('employeeid",{"_index":605,"title":{},"body":{"controllers/EmployeeProductController.html":{}}}],["findemployeeproductsbyemployeeid(empid",{"_index":644,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["findemployeeproductsbyemployeeid(employeeid",{"_index":587,"title":{},"body":{"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{}}}],["findemployeeproductsbyproductid",{"_index":572,"title":{},"body":{"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{}}}],["findemployeeproductsbyproductid(@query('productid",{"_index":607,"title":{},"body":{"controllers/EmployeeProductController.html":{}}}],["findemployeeproductsbyproductid(productid",{"_index":592,"title":{},"body":{"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{}}}],["findproductbyid",{"_index":716,"title":{},"body":{"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{}}}],["findproductbyid(@param('id",{"_index":735,"title":{},"body":{"controllers/ProductController.html":{}}}],["findproductbyid(id",{"_index":724,"title":{},"body":{"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{}}}],["finduser(@query('id",{"_index":845,"title":{},"body":{"controllers/UserController.html":{}}}],["finduserbyemail",{"_index":854,"title":{},"body":{"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["finduserbyemail(email",{"_index":857,"title":{},"body":{"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["finduserbyid",{"_index":835,"title":{},"body":{"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["finduserbyid(@query('id",{"_index":849,"title":{},"body":{"controllers/UserController.html":{}}}],["finduserbyid(id",{"_index":838,"title":{},"body":{"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["fired",{"_index":296,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["focus",{"_index":1030,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1066,"title":{},"body":{"index.html":{}}}],["forwardref",{"_index":243,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CreateUserProvider.html":{},"modules/EmployeeProductModule.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{}}}],["found",{"_index":466,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"controllers/ProductController.html":{},"injectables/ProductServiceImpl.html":{},"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{}}}],["framework",{"_index":965,"title":{},"body":{"index.html":{}}}],["fs",{"_index":879,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["full",{"_index":1061,"title":{},"body":{"index.html":{}}}],["function",{"_index":912,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":955,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":1025,"title":{},"body":{"index.html":{}}}],["generate",{"_index":322,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["get('/:id",{"_index":508,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["get('/:id')@apioperation({summary",{"_index":474,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["get('/get",{"_index":588,"title":{},"body":{"controllers/EmployeeProductController.html":{}}}],["get('findall",{"_index":851,"title":{},"body":{"controllers/UserController.html":{}}}],["get('findall')@auth(authtype.none",{"_index":836,"title":{},"body":{"controllers/UserController.html":{}}}],["get('findbyemail",{"_index":844,"title":{},"body":{"controllers/UserController.html":{}}}],["get('findbyid",{"_index":839,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@apioperation({summary",{"_index":468,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["gethello",{"_index":94,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":961,"title":{"index.html":{}},"body":{}}],["graph",{"_index":1053,"title":{},"body":{"index.html":{}}}],["grow",{"_index":1076,"title":{},"body":{"index.html":{}}}],["guard",{"_index":0,"title":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"overview.html":{}}}],["hands",{"_index":1047,"title":{},"body":{"index.html":{}}}],["handy",{"_index":1036,"title":{},"body":{"index.html":{}}}],["hashedpassword",{"_index":415,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["hashing.provider",{"_index":321,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/SignInProvider.html":{}}}],["hashingprovider",{"_index":240,"title":{"injectables/HashingProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/HashingProvider.html":{},"injectables/SignInProvider.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{},"overview.html":{}}}],["hashpassword",{"_index":312,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["hashpassword(data",{"_index":318,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["header",{"_index":60,"title":{},"body":{"guards/AccessTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["hello",{"_index":172,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":1051,"title":{},"body":{"index.html":{}}}],["here",{"_index":294,"title":{},"body":{"guards/AuthenticationGuard.html":{},"index.html":{}}}],["http",{"_index":1133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:3000",{"_index":1126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/git/git",{"_index":1129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":1087,"title":{},"body":{"index.html":{}}}],["id",{"_index":89,"title":{},"body":{"interfaces/ActiveUserData.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["id')@apioperation({summary",{"_index":589,"title":{},"body":{"controllers/EmployeeProductController.html":{}}}],["id'})@apiparam({name",{"_index":459,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{}}}],["id'})@apiquery({name",{"_index":590,"title":{},"body":{"controllers/EmployeeProductController.html":{}}}],["id'})@apiresponse({status",{"_index":721,"title":{},"body":{"controllers/ProductController.html":{}}}],["identifier",{"_index":892,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":52,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/ProductServiceImpl.html":{},"injectables/UserServiceImpl.html":{}}}],["import",{"_index":38,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"modules/EmployeeProductModule.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeProductDto.html":{},"classes/UpdateEmployeeStatusDto.html":{},"classes/UpdateProductDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{}}}],["imports",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeProductModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["in'})@apibody({type",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["inactive",{"_index":815,"title":{},"body":{"classes/UpdateEmployeeStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/UpdateEmployeeStatusDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":959,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"modules/EmployeeProductModule.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeProductDto.html":{},"classes/UpdateEmployeeStatusDto.html":{},"classes/UpdateProductDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{}}}],["information",{"_index":1009,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":1033,"title":{},"body":{"index.html":{}}}],["inject",{"_index":39,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"injectables/EmployeeProductServiceImpl.html":{},"controllers/ProductController.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{}}}],["inject('employeeinterface",{"_index":503,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeProductServiceImpl.html":{}}}],["inject('employeeproductinterface",{"_index":603,"title":{},"body":{"controllers/EmployeeProductController.html":{}}}],["inject('productinterface",{"_index":655,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{},"controllers/ProductController.html":{}}}],["inject('userinterface",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{}}}],["inject(forwardref",{"_index":411,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["inject(jwtconfig.key",{"_index":54,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/SignInProvider.html":{}}}],["injectable",{"_index":40,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"injectables/UserServiceImpl.html":{}},"body":{"guards/AccessTokenGuard.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{}}}],["injectables",{"_index":169,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"injectables/UserServiceImpl.html":{},"overview.html":{}}}],["injectmodel",{"_index":405,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/ProductServiceImpl.html":{},"injectables/UserServiceImpl.html":{}}}],["injectmodel(employee.name",{"_index":692,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["injectmodel(employeepayroll.name",{"_index":654,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["injectmodel(employeeproduct.name",{"_index":653,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["injectmodel(product.name",{"_index":763,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["injectmodel(user.name",{"_index":410,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/UserServiceImpl.html":{}}}],["install",{"_index":1024,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":980,"title":{},"body":{"index.html":{}}}],["instance",{"_index":290,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["instance.canactivate(context",{"_index":307,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["interact",{"_index":1054,"title":{},"body":{"index.html":{}}}],["interface",{"_index":77,"title":{"interfaces/ActiveUserData.html":{},"interfaces/AuthInterface.html":{},"interfaces/EmployeeInterface.html":{},"interfaces/EmployeeProductInterface.html":{},"interfaces/ProductInterface.html":{},"interfaces/UserInterface.html":{}},"body":{"interfaces/ActiveUserData.html":{},"interfaces/AuthInterface.html":{},"interfaces/EmployeeInterface.html":{},"interfaces/EmployeeProductInterface.html":{},"interfaces/ProductInterface.html":{},"interfaces/UserInterface.html":{},"coverage.html":{}}}],["interface/employee",{"_index":599,"title":{},"body":{"controllers/EmployeeProductController.html":{},"injectables/EmployeeProductServiceImpl.html":{}}}],["interface/employee.interface",{"_index":496,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["interface/product.interface",{"_index":729,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductServiceImpl.html":{}}}],["interfaces",{"_index":79,"title":{},"body":{"interfaces/ActiveUserData.html":{},"interfaces/AuthInterface.html":{},"interfaces/EmployeeInterface.html":{},"interfaces/EmployeeProductInterface.html":{},"interfaces/ProductInterface.html":{},"interfaces/UserInterface.html":{},"overview.html":{}}}],["interfaces/auth.interface",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["interfaces/user.interface",{"_index":841,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{}}}],["internalservererrorexception",{"_index":404,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/ProductServiceImpl.html":{},"injectables/UserServiceImpl.html":{}}}],["internalservererrorexception('failed",{"_index":420,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["isdatestring",{"_index":348,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["isemail",{"_index":390,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["isenum",{"_index":349,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeStatusDto.html":{}}}],["isenum(empstatus",{"_index":356,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeStatusDto.html":{}}}],["isequalpassword",{"_index":785,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["isglobal",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":350,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["isnumber",{"_index":369,"title":{},"body":{"classes/CreateEmployeeProductDto.html":{},"classes/CreateProductDto.html":{}}}],["isoptional",{"_index":810,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["ispositive",{"_index":377,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isstring",{"_index":351,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["issuer",{"_index":798,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["job",{"_index":1069,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":1071,"title":{},"body":{"index.html":{}}}],["join",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["joineddate",{"_index":331,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{}}}],["jwt",{"_index":1136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtconfig",{"_index":45,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/SignInProvider.html":{}}}],["jwtconfiguration",{"_index":18,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/SignInProvider.html":{}}}],["jwtmodule",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtmodule.registerasync(jwtconfig.asprovider",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtservice",{"_index":17,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/SignInProvider.html":{}}}],["kamil",{"_index":1084,"title":{},"body":{"index.html":{}}}],["key",{"_index":1000,"title":{},"body":{"index.html":{}}}],["keyof",{"_index":1113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["koko",{"_index":173,"title":{},"body":{"injectables/AppService.html":{}}}],["later",{"_index":300,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["learn",{"_index":1039,"title":{},"body":{"index.html":{}}}],["legend",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeProductModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":1090,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["license.txt",{"_index":1131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["licensed",{"_index":1074,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":1068,"title":{},"body":{"index.html":{}}}],["looking",{"_index":1010,"title":{},"body":{"index.html":{}}}],["loop",{"_index":1064,"title":{},"body":{"index.html":{}}}],["makes",{"_index":1018,"title":{},"body":{"index.html":{}}}],["managing",{"_index":1032,"title":{},"body":{"index.html":{}}}],["matching",{"_index":76,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"modules/EmployeeProductModule.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeProductDto.html":{},"classes/UpdateEmployeeStatusDto.html":{},"classes/UpdateProductDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mau",{"_index":1014,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":940,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":10,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["minlength",{"_index":391,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["minlength(6",{"_index":392,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":944,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1073,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":985,"title":{},"body":{"index.html":{}}}],["model",{"_index":398,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/ProductServiceImpl.html":{},"injectables/UserServiceImpl.html":{}}}],["module",{"_index":101,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeProductModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeProductModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":103,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeProductModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":460,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{}}}],["mongoose",{"_index":407,"title":{},"body":{"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"classes/Product.html":{},"injectables/ProductServiceImpl.html":{},"classes/User.html":{},"injectables/UserServiceImpl.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeProductModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature",{"_index":537,"title":{},"body":{"modules/EmployeeModule.html":{},"modules/EmployeeProductModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":1008,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":301,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["myśliwiec",{"_index":1085,"title":{},"body":{"index.html":{}}}],["name",{"_index":24,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"modules/EmployeeProductModule.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["need",{"_index":1059,"title":{},"body":{"index.html":{}}}],["nest",{"_index":972,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1089,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":998,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":42,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"controllers/EmployeeProductController.html":{},"modules/EmployeeProductModule.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":43,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/SignInProvider.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":44,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/SignInProvider.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":925,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mau",{"_index":1026,"title":{},"body":{"index.html":{}}}],["nestjs/mongoose",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"modules/EmployeeProductModule.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":928,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{},"classes/SignInDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeProductDto.html":{},"classes/UpdateEmployeeStatusDto.html":{},"classes/UpdateProductDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":931,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":63,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"controllers/ProductController.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newuser",{"_index":417,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["newuser.save",{"_index":419,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["node.js",{"_index":964,"title":{},"body":{"index.html":{}}}],["none",{"_index":951,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notfoundexception",{"_index":490,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"controllers/ProductController.html":{},"injectables/ProductServiceImpl.html":{},"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{}}}],["notfoundexception('employee",{"_index":668,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["notfoundexception('no",{"_index":673,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/ProductServiceImpl.html":{},"injectables/UserServiceImpl.html":{}}}],["notfoundexception('product",{"_index":768,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["notfoundexception('user",{"_index":848,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{}}}],["notfoundexception(`employee",{"_index":657,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["notfoundexception(`product",{"_index":659,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["npm",{"_index":979,"title":{},"body":{"index.html":{}}}],["null",{"_index":860,"title":{},"body":{"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["number",{"_index":88,"title":{},"body":{"interfaces/ActiveUserData.html":{},"classes/CreateEmployeeProductDto.html":{},"classes/CreateProductDto.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"classes/Product.html":{}}}],["object.values(empstatus",{"_index":435,"title":{},"body":{"classes/Employee.html":{}}}],["observable",{"_index":272,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["offer",{"_index":1070,"title":{},"body":{"index.html":{}}}],["official",{"_index":1015,"title":{},"body":{"index.html":{}}}],["on_leave",{"_index":818,"title":{},"body":{"classes/UpdateEmployeeStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["on_leave'})@isenum(empstatus",{"_index":816,"title":{},"body":{"classes/UpdateEmployeeStatusDto.html":{}}}],["one",{"_index":304,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["open",{"_index":1075,"title":{},"body":{"index.html":{}}}],["optional",{"_index":26,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeProductModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1094,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":919,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":489,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["param('id",{"_index":513,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["parameters",{"_index":22,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":1060,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":809,"title":{},"body":{"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["partialtype(createemployeedto",{"_index":808,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["partialtype(createemployeeproductdto",{"_index":812,"title":{},"body":{"classes/UpdateEmployeeProductDto.html":{}}}],["partialtype(createproductdto",{"_index":821,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["passes",{"_index":1116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["password",{"_index":381,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/User.html":{}}}],["patch",{"_index":488,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["patch('/:id",{"_index":512,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["patch('/:id')@auth(authtype.bearer)@apibearerauth('bearer",{"_index":478,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["patch('/:id/status",{"_index":517,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["patch('/:id/status')@auth(authtype.bearer)@apibearerauth('bearer",{"_index":485,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["path",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":65,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["payrolldate",{"_index":541,"title":{},"body":{"classes/EmployeePayroll.html":{}}}],["per",{"_index":375,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["permissions",{"_index":298,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["pg",{"_index":937,"title":{},"body":{"dependencies.html":{}}}],["phonenumber",{"_index":332,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{}}}],["platform",{"_index":1013,"title":{},"body":{"index.html":{}}}],["please",{"_index":1042,"title":{},"body":{"index.html":{}}}],["position",{"_index":333,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{}}}],["possible",{"_index":1006,"title":{},"body":{"index.html":{}}}],["post",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["post('register",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@apioperation({summary",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signin",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signin')@auth(authtype.none)@apioperation({summary",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@auth(authtype.bearer)@apibearerauth('bearer",{"_index":448,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["prefix",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["price",{"_index":372,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["private",{"_index":13,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"controllers/ProductController.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{}}}],["prodcut.dto",{"_index":730,"title":{},"body":{"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{}}}],["prodcut.dto.ts",{"_index":820,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product",{"_index":378,"title":{"classes/Product.html":{}},"body":{"classes/CreateProductDto.html":{},"classes/EmployeeProduct.html":{},"controllers/EmployeeProductController.html":{},"injectables/EmployeeProductServiceImpl.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"coverage.html":{}}}],["product'})@apibody({type",{"_index":575,"title":{},"body":{"controllers/EmployeeProductController.html":{}}}],["product'})@apiparam({name",{"_index":579,"title":{},"body":{"controllers/EmployeeProductController.html":{}}}],["product'})@apiresponse({status",{"_index":585,"title":{},"body":{"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["product'})@isnumber()@ispositive",{"_index":376,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.controller",{"_index":629,"title":{},"body":{"modules/EmployeeProductModule.html":{},"modules/ProductModule.html":{}}}],["product.controller.ts",{"_index":566,"title":{},"body":{"controllers/EmployeeProductController.html":{},"coverage.html":{}}}],["product.controller.ts:110",{"_index":583,"title":{},"body":{"controllers/EmployeeProductController.html":{}}}],["product.controller.ts:129",{"_index":596,"title":{},"body":{"controllers/EmployeeProductController.html":{}}}],["product.controller.ts:153",{"_index":580,"title":{},"body":{"controllers/EmployeeProductController.html":{}}}],["product.controller.ts:45",{"_index":577,"title":{},"body":{"controllers/EmployeeProductController.html":{}}}],["product.controller.ts:66",{"_index":591,"title":{},"body":{"controllers/EmployeeProductController.html":{}}}],["product.controller.ts:83",{"_index":593,"title":{},"body":{"controllers/EmployeeProductController.html":{}}}],["product.controller.ts:99",{"_index":586,"title":{},"body":{"controllers/EmployeeProductController.html":{}}}],["product.dto",{"_index":601,"title":{},"body":{"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"classes/UpdateEmployeeProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":360,"title":{},"body":{"classes/CreateEmployeeProductDto.html":{},"classes/CreateProductDto.html":{},"classes/UpdateEmployeeProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:13",{"_index":366,"title":{},"body":{"classes/CreateEmployeeProductDto.html":{},"classes/CreateProductDto.html":{}}}],["product.dto.ts:18",{"_index":368,"title":{},"body":{"classes/CreateEmployeeProductDto.html":{}}}],["product.dto.ts:8",{"_index":365,"title":{},"body":{"classes/CreateEmployeeProductDto.html":{},"classes/CreateProductDto.html":{}}}],["product.interface",{"_index":600,"title":{},"body":{"controllers/EmployeeProductController.html":{},"injectables/EmployeeProductServiceImpl.html":{}}}],["product.interface.ts",{"_index":616,"title":{},"body":{"interfaces/EmployeeProductInterface.html":{},"coverage.html":{}}}],["product.interface.ts:10",{"_index":622,"title":{},"body":{"interfaces/EmployeeProductInterface.html":{}}}],["product.interface.ts:11",{"_index":623,"title":{},"body":{"interfaces/EmployeeProductInterface.html":{}}}],["product.interface.ts:12",{"_index":618,"title":{},"body":{"interfaces/EmployeeProductInterface.html":{}}}],["product.interface.ts:6",{"_index":617,"title":{},"body":{"interfaces/EmployeeProductInterface.html":{}}}],["product.interface.ts:7",{"_index":620,"title":{},"body":{"interfaces/EmployeeProductInterface.html":{}}}],["product.interface.ts:8",{"_index":619,"title":{},"body":{"interfaces/EmployeeProductInterface.html":{}}}],["product.interface.ts:9",{"_index":621,"title":{},"body":{"interfaces/EmployeeProductInterface.html":{}}}],["product.module",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["product.module.ts",{"_index":628,"title":{},"body":{"modules/EmployeeProductModule.html":{}}}],["product.name",{"_index":752,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.price",{"_index":660,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["product.schema",{"_index":624,"title":{},"body":{"interfaces/EmployeeProductInterface.html":{},"modules/EmployeeProductModule.html":{},"injectables/EmployeeProductServiceImpl.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{}}}],["product.schema.ts",{"_index":555,"title":{},"body":{"classes/EmployeeProduct.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["product.schema.ts:12",{"_index":558,"title":{},"body":{"classes/EmployeeProduct.html":{}}}],["product.schema.ts:19",{"_index":559,"title":{},"body":{"classes/EmployeeProduct.html":{}}}],["product.schema.ts:26",{"_index":560,"title":{},"body":{"classes/EmployeeProduct.html":{}}}],["product.schema.ts:33",{"_index":561,"title":{},"body":{"classes/EmployeeProduct.html":{}}}],["product.schema.ts:39",{"_index":562,"title":{},"body":{"classes/EmployeeProduct.html":{}}}],["product.service",{"_index":630,"title":{},"body":{"modules/EmployeeProductModule.html":{},"modules/ProductModule.html":{}}}],["product.service.ts",{"_index":634,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{},"coverage.html":{}}}],["product.service.ts:104",{"_index":647,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["product.service.ts:127",{"_index":642,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["product.service.ts:141",{"_index":648,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["product.service.ts:163",{"_index":641,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["product.service.ts:18",{"_index":638,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["product.service.ts:33",{"_index":640,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["product.service.ts:65",{"_index":643,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["product.service.ts:81",{"_index":645,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["product/dtos/create",{"_index":359,"title":{},"body":{"classes/CreateEmployeeProductDto.html":{},"coverage.html":{}}}],["product/dtos/update",{"_index":811,"title":{},"body":{"classes/UpdateEmployeeProductDto.html":{},"coverage.html":{}}}],["product/employee",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"classes/EmployeeProduct.html":{},"controllers/EmployeeProductController.html":{},"modules/EmployeeProductModule.html":{},"injectables/EmployeeProductServiceImpl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["product/employee.payroll.schema.ts",{"_index":540,"title":{},"body":{"classes/EmployeePayroll.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["product/employee.payroll.schema.ts:10",{"_index":545,"title":{},"body":{"classes/EmployeePayroll.html":{}}}],["product/employee.payroll.schema.ts:17",{"_index":549,"title":{},"body":{"classes/EmployeePayroll.html":{}}}],["product/employee.payroll.schema.ts:24",{"_index":548,"title":{},"body":{"classes/EmployeePayroll.html":{}}}],["product/employee.payroll.schema.ts:30",{"_index":550,"title":{},"body":{"classes/EmployeePayroll.html":{}}}],["product/employee.payroll.schema.ts:36",{"_index":546,"title":{},"body":{"classes/EmployeePayroll.html":{}}}],["product/interface/employee",{"_index":615,"title":{},"body":{"interfaces/EmployeeProductInterface.html":{},"coverage.html":{}}}],["product/product.module",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["productcontroller",{"_index":711,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productid",{"_index":362,"title":{},"body":{"classes/CreateEmployeeProductDto.html":{},"classes/EmployeeProduct.html":{},"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{}}}],["productinterface",{"_index":637,"title":{"interfaces/ProductInterface.html":{}},"body":{"injectables/EmployeeProductServiceImpl.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"coverage.html":{},"overview.html":{}}}],["production",{"_index":987,"title":{},"body":{"index.html":{}}}],["productmodel",{"_index":756,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["productmodule",{"_index":116,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EmployeeProductModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["products",{"_index":582,"title":{},"body":{"controllers/EmployeeProductController.html":{},"injectables/EmployeeProductServiceImpl.html":{},"controllers/ProductController.html":{},"injectables/ProductServiceImpl.html":{}}}],["products'})@apiresponse({status",{"_index":581,"title":{},"body":{"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["products.length",{"_index":770,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["productschema",{"_index":709,"title":{},"body":{"classes/Product.html":{},"modules/ProductModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productserviceimpl",{"_index":750,"title":{"injectables/ProductServiceImpl.html":{}},"body":{"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"coverage.html":{},"overview.html":{}}}],["producttodelete",{"_index":773,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["progressive",{"_index":963,"title":{},"body":{"index.html":{}}}],["project",{"_index":976,"title":{},"body":{"index.html":{}}}],["promise",{"_index":32,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"interfaces/EmployeeInterface.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["promise.resolve",{"_index":293,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["prop",{"_index":430,"title":{},"body":{"classes/Employee.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["prop({required",{"_index":824,"title":{},"body":{"classes/User.html":{}}}],["prop({type",{"_index":423,"title":{},"body":{"classes/Employee.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["properties",{"_index":83,"title":{"properties.html":{}},"body":{"interfaces/ActiveUserData.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/Employee.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"classes/Product.html":{},"classes/SignInDto.html":{},"classes/UpdateEmployeeStatusDto.html":{},"classes/User.html":{},"properties.html":{}}}],["provide",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeProductModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["provider",{"_index":880,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["providers",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeProductModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["providers/bcrypt.provider",{"_index":247,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/create",{"_index":869,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{}}}],["providers/hashing.provider",{"_index":245,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/signin.provider",{"_index":249,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["public",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"injectables/BcryptProvider.html":{}}}],["put",{"_index":492,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["quantity",{"_index":363,"title":{},"body":{"classes/CreateEmployeeProductDto.html":{},"classes/EmployeeProduct.html":{}}}],["query",{"_index":491,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/UserController.html":{}}}],["questions",{"_index":1040,"title":{},"body":{"index.html":{}}}],["read",{"_index":878,"title":{},"body":{"injectables/UserServiceImpl.html":{},"index.html":{}}}],["readonly",{"_index":53,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"controllers/ProductController.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{}}}],["ready",{"_index":996,"title":{},"body":{"index.html":{}}}],["real",{"_index":1055,"title":{},"body":{"index.html":{}}}],["record",{"_index":278,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/UserServiceImpl.html":{}}}],["ref",{"_index":557,"title":{},"body":{"classes/EmployeeProduct.html":{}}}],["reflect",{"_index":939,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":266,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["register",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(createuserdto",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["registered",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["registration",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["registration'})@apibody({type",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["repository",{"_index":975,"title":{},"body":{"index.html":{}}}],["request",{"_index":34,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{},"miscellaneous/variables.html":{}}}],["request.headers.authorization?.split",{"_index":74,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["request[request_user_key",{"_index":69,"title":{},"body":{"guards/AccessTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["request_user_key",{"_index":48,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requesttimeoutexception",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["requesttimeoutexception('password",{"_index":791,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["requesttimeoutexception('sign",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["required",{"_index":344,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"controllers/EmployeeProductController.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["requiring",{"_index":1021,"title":{},"body":{"index.html":{}}}],["reset",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeProductModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resigned",{"_index":954,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["resource",{"_index":306,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["resources",{"_index":1034,"title":{},"body":{"index.html":{}}}],["responsible",{"_index":881,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["results",{"_index":75,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"modules/EmployeeProductModule.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeProductDto.html":{},"classes/UpdateEmployeeStatusDto.html":{},"classes/UpdateProductDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":71,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"controllers/ProductController.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":31,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"injectables/CreateUserProvider.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["rootpath",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":981,"title":{},"body":{"index.html":{}}}],["runs",{"_index":1004,"title":{},"body":{"index.html":{}}}],["runvalidators",{"_index":677,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/ProductServiceImpl.html":{}}}],["rxjs",{"_index":273,"title":{},"body":{"guards/AuthenticationGuard.html":{},"dependencies.html":{}}}],["salt",{"_index":323,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["scalable",{"_index":968,"title":{},"body":{"index.html":{}}}],["schema",{"_index":431,"title":{},"body":{"classes/Employee.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"modules/EmployeeProductModule.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"classes/User.html":{},"modules/UserModule.html":{}}}],["schemafactory",{"_index":432,"title":{},"body":{"classes/Employee.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(employee",{"_index":438,"title":{},"body":{"classes/Employee.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(employeepayroll",{"_index":553,"title":{},"body":{"classes/EmployeePayroll.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(employeeproduct",{"_index":564,"title":{},"body":{"classes/EmployeeProduct.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(product",{"_index":710,"title":{},"body":{"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":831,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["scheme",{"_index":1134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scm.com/blob/main/mit",{"_index":1130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":800,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["server",{"_index":969,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":275,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["setdescription('use",{"_index":1123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setlicense",{"_index":1128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(auth_type_key",{"_index":1120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settitle('tda",{"_index":1122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":977,"title":{},"body":{"index.html":{}}}],["setupswagger",{"_index":916,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupswagger(app",{"_index":958,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setversion('1.0",{"_index":1127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shine",{"_index":174,"title":{},"body":{"injectables/AppService.html":{}}}],["side",{"_index":970,"title":{},"body":{"index.html":{}}}],["sign",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["signin(@body",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(signindto",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["signindto",{"_index":199,"title":{"classes/SignInDto.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"coverage.html":{}}}],["signindto.password",{"_index":789,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["signinprovider",{"_index":241,"title":{"injectables/SignInProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{},"coverage.html":{},"overview.html":{}}}],["simple",{"_index":1023,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"modules/EmployeeProductModule.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductServiceImpl.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeProductDto.html":{},"classes/UpdateEmployeeStatusDto.html":{},"classes/UpdateProductDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{},"index.html":{}}}],["sponsors",{"_index":1078,"title":{},"body":{"index.html":{}}}],["src/.../active",{"_index":1102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":946,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../auth.constants.ts",{"_index":1108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.decorator.ts",{"_index":1103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../emp",{"_index":948,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../employee",{"_index":1105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../employee.payroll.schema.ts",{"_index":1104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../employee.schema.ts",{"_index":1106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":956,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../product.schema.ts",{"_index":1107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.config.ts",{"_index":1109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.ts",{"_index":957,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.schema.ts",{"_index":1110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":93,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":96,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":170,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":171,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:24",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:32",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":866,"title":{},"body":{"modules/UserModule.html":{}}}],["src/auth/auth.module.ts",{"_index":242,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:8",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/config/jwt.config",{"_index":46,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["src/auth/constants/auth.constants",{"_index":49,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["src/auth/constants/auth.constants.ts",{"_index":896,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorators/active",{"_index":899,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorators/auth.decorator",{"_index":270,"title":{},"body":{"guards/AuthenticationGuard.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["src/auth/decorators/auth.decorator.ts",{"_index":902,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dtos/signin.dto.ts",{"_index":775,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["src/auth/dtos/signin.dto.ts:13",{"_index":778,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/dtos/signin.dto.ts:8",{"_index":777,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/enums/auth",{"_index":271,"title":{},"body":{"guards/AuthenticationGuard.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["src/auth/guards/access",{"_index":6,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{}}}],["src/auth/guards/authentication/authentication.guard.ts",{"_index":262,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/auth/guards/authentication/authentication.guard.ts:22",{"_index":267,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/authentication/authentication.guard.ts:42",{"_index":268,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/interfaces/active",{"_index":80,"title":{},"body":{"interfaces/ActiveUserData.html":{},"coverage.html":{}}}],["src/auth/interfaces/auth.interface.ts",{"_index":234,"title":{},"body":{"interfaces/AuthInterface.html":{},"coverage.html":{}}}],["src/auth/interfaces/auth.interface.ts:5",{"_index":235,"title":{},"body":{"interfaces/AuthInterface.html":{}}}],["src/auth/providers/bcrypt.provider.ts",{"_index":310,"title":{},"body":{"injectables/BcryptProvider.html":{},"coverage.html":{}}}],["src/auth/providers/bcrypt.provider.ts:13",{"_index":316,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["src/auth/providers/bcrypt.provider.ts:7",{"_index":319,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["src/auth/providers/hashing.provider",{"_index":408,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/UserServiceImpl.html":{}}}],["src/auth/providers/hashing.provider.ts",{"_index":702,"title":{},"body":{"injectables/HashingProvider.html":{},"coverage.html":{}}}],["src/auth/providers/hashing.provider.ts:5",{"_index":705,"title":{},"body":{"injectables/HashingProvider.html":{}}}],["src/auth/providers/hashing.provider.ts:7",{"_index":704,"title":{},"body":{"injectables/HashingProvider.html":{}}}],["src/auth/providers/signin.provider.ts",{"_index":779,"title":{},"body":{"injectables/SignInProvider.html":{},"coverage.html":{}}}],["src/auth/providers/signin.provider.ts:11",{"_index":781,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["src/auth/providers/signin.provider.ts:24",{"_index":782,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["src/employee",{"_index":358,"title":{},"body":{"classes/CreateEmployeeProductDto.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"modules/EmployeeProductModule.html":{},"injectables/EmployeeProductServiceImpl.html":{},"classes/UpdateEmployeeProductDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/employee/dtos/create",{"_index":329,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"coverage.html":{}}}],["src/employee/dtos/update",{"_index":807,"title":{},"body":{"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeStatusDto.html":{},"coverage.html":{}}}],["src/employee/employee.controller.ts",{"_index":440,"title":{},"body":{"controllers/EmployeeController.html":{},"coverage.html":{}}}],["src/employee/employee.controller.ts:107",{"_index":487,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:128",{"_index":467,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:45",{"_index":455,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:58",{"_index":475,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:65",{"_index":472,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:81",{"_index":482,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.module",{"_index":631,"title":{},"body":{"modules/EmployeeProductModule.html":{}}}],["src/employee/employee.module.ts",{"_index":534,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["src/employee/employee.schema.ts",{"_index":422,"title":{},"body":{"classes/Employee.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/employee/employee.schema.ts:11",{"_index":426,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/employee.schema.ts:17",{"_index":427,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/employee.schema.ts:23",{"_index":424,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/employee.schema.ts:29",{"_index":428,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/employee.schema.ts:37",{"_index":429,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/employee.schema.ts:43",{"_index":425,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/employee.service.ts",{"_index":681,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{},"coverage.html":{}}}],["src/employee/employee.service.ts:16",{"_index":683,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["src/employee/employee.service.ts:22",{"_index":685,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["src/employee/employee.service.ts:33",{"_index":688,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["src/employee/employee.service.ts:45",{"_index":687,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["src/employee/employee.service.ts:57",{"_index":690,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["src/employee/employee.service.ts:79",{"_index":686,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["src/employee/employee.service.ts:95",{"_index":691,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["src/employee/enums/emp",{"_index":952,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/employee/interface/employee.interface",{"_index":650,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["src/employee/interface/employee.interface.ts",{"_index":522,"title":{},"body":{"interfaces/EmployeeInterface.html":{},"coverage.html":{}}}],["src/employee/interface/employee.interface.ts:10",{"_index":527,"title":{},"body":{"interfaces/EmployeeInterface.html":{}}}],["src/employee/interface/employee.interface.ts:11",{"_index":524,"title":{},"body":{"interfaces/EmployeeInterface.html":{}}}],["src/employee/interface/employee.interface.ts:12",{"_index":528,"title":{},"body":{"interfaces/EmployeeInterface.html":{}}}],["src/employee/interface/employee.interface.ts:7",{"_index":523,"title":{},"body":{"interfaces/EmployeeInterface.html":{}}}],["src/employee/interface/employee.interface.ts:8",{"_index":526,"title":{},"body":{"interfaces/EmployeeInterface.html":{}}}],["src/employee/interface/employee.interface.ts:9",{"_index":525,"title":{},"body":{"interfaces/EmployeeInterface.html":{}}}],["src/main.ts",{"_index":911,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/product/dtos/create",{"_index":371,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/product/dtos/update",{"_index":819,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/product/interface/product.interface",{"_index":651,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["src/product/interface/product.interface.ts",{"_index":741,"title":{},"body":{"interfaces/ProductInterface.html":{},"coverage.html":{}}}],["src/product/interface/product.interface.ts:10",{"_index":743,"title":{},"body":{"interfaces/ProductInterface.html":{}}}],["src/product/interface/product.interface.ts:6",{"_index":742,"title":{},"body":{"interfaces/ProductInterface.html":{}}}],["src/product/interface/product.interface.ts:7",{"_index":745,"title":{},"body":{"interfaces/ProductInterface.html":{}}}],["src/product/interface/product.interface.ts:8",{"_index":744,"title":{},"body":{"interfaces/ProductInterface.html":{}}}],["src/product/interface/product.interface.ts:9",{"_index":746,"title":{},"body":{"interfaces/ProductInterface.html":{}}}],["src/product/product.controller.ts",{"_index":712,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/product/product.controller.ts:38",{"_index":719,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:46",{"_index":725,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:53",{"_index":723,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:63",{"_index":728,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:76",{"_index":722,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.module",{"_index":632,"title":{},"body":{"modules/EmployeeProductModule.html":{}}}],["src/product/product.module.ts",{"_index":751,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.schema.ts",{"_index":706,"title":{},"body":{"classes/Product.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/product/product.schema.ts:10",{"_index":707,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.schema.ts:16",{"_index":708,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.service.ts",{"_index":753,"title":{},"body":{"injectables/ProductServiceImpl.html":{},"coverage.html":{}}}],["src/product/product.service.ts:11",{"_index":755,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["src/product/product.service.ts:17",{"_index":757,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["src/product/product.service.ts:28",{"_index":760,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["src/product/product.service.ts:42",{"_index":759,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["src/product/product.service.ts:56",{"_index":761,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["src/product/product.service.ts:78",{"_index":758,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["src/swagger/swagger.config.ts",{"_index":913,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/swagger/swagger.ts",{"_index":915,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user/dtos/create",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/interfaces/user.interface",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SignInProvider.html":{}}}],["src/user/interfaces/user.interface.ts",{"_index":853,"title":{},"body":{"interfaces/UserInterface.html":{},"coverage.html":{}}}],["src/user/interfaces/user.interface.ts:5",{"_index":855,"title":{},"body":{"interfaces/UserInterface.html":{}}}],["src/user/interfaces/user.interface.ts:6",{"_index":858,"title":{},"body":{"interfaces/UserInterface.html":{}}}],["src/user/interfaces/user.interface.ts:7",{"_index":859,"title":{},"body":{"interfaces/UserInterface.html":{}}}],["src/user/interfaces/user.interface.ts:8",{"_index":856,"title":{},"body":{"interfaces/UserInterface.html":{}}}],["src/user/providers/create",{"_index":394,"title":{},"body":{"injectables/CreateUserProvider.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":833,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:35",{"_index":840,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:41",{"_index":837,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module",{"_index":248,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/user/user.module.ts",{"_index":865,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.schema",{"_index":236,"title":{},"body":{"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["src/user/user.schema.ts",{"_index":822,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.schema.ts:10",{"_index":829,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.schema.ts:16",{"_index":826,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.schema.ts:23",{"_index":828,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.schema.ts:29",{"_index":823,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.service.ts",{"_index":872,"title":{},"body":{"injectables/UserServiceImpl.html":{},"coverage.html":{}}}],["src/user/user.service.ts:19",{"_index":873,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["src/user/user.service.ts:30",{"_index":874,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["src/user/user.service.ts:41",{"_index":876,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["src/user/user.service.ts:57",{"_index":877,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["src/user/user.service.ts:73",{"_index":875,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["start",{"_index":983,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":986,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":988,"title":{},"body":{"index.html":{}}}],["started",{"_index":962,"title":{"index.html":{}},"body":{}}],["starter",{"_index":974,"title":{},"body":{"index.html":{}}}],["statements",{"_index":893,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"dependencies.html":{}}}],["status",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"controllers/EmployeeProductController.html":{},"injectables/EmployeeServiceImpl.html":{},"controllers/ProductController.html":{},"classes/UpdateEmployeeStatusDto.html":{}}}],["status.dto",{"_index":500,"title":{},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["status.dto.ts",{"_index":813,"title":{},"body":{"classes/UpdateEmployeeStatusDto.html":{},"coverage.html":{}}}],["status.dto.ts:8",{"_index":817,"title":{},"body":{"classes/UpdateEmployeeStatusDto.html":{}}}],["status.enum",{"_index":354,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"injectables/EmployeeServiceImpl.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeStatusDto.html":{}}}],["status.enum.ts",{"_index":949,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stay",{"_index":1063,"title":{},"body":{"index.html":{}}}],["steps",{"_index":1001,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":1019,"title":{},"body":{"index.html":{}}}],["string",{"_index":36,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"classes/SignInDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":85,"title":{},"body":{"interfaces/ActiveUserData.html":{},"injectables/SignInProvider.html":{}}}],["successfully",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["successfully'})@apiresponse({status",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["summary",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["support",{"_index":1041,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1092,"title":{},"body":{"modules.html":{}}}],["swaggerconfig",{"_index":914,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":918,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":917,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1002,"title":{},"body":{"index.html":{}}}],["test",{"_index":991,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":994,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":993,"title":{},"body":{"index.html":{}}}],["tests",{"_index":989,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1077,"title":{},"body":{"index.html":{}}}],["this.accesstokenguard",{"_index":281,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.appservice.gethello",{"_index":100,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.signin(signindto",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authtypeguardmap",{"_index":279,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.authtypeguardmap[type]).flat",{"_index":288,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.createuserprovider.createuser(createuserdto",{"_index":884,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["this.employeeinterface.createemployee(createemployeedto",{"_index":507,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeinterface.deleteemployee(id",{"_index":521,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeinterface.findallemployees",{"_index":511,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeinterface.findemployeebyid(empid",{"_index":669,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["this.employeeinterface.findemployeebyid(employeeid",{"_index":656,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["this.employeeinterface.findemployeebyid(id",{"_index":510,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeinterface.updateemployee",{"_index":515,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeinterface.updateemployee(id",{"_index":516,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeinterface.updateemployeestatus",{"_index":518,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeemodel",{"_index":699,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["this.employeemodel(createemployeedto",{"_index":694,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["this.employeemodel.find().exec",{"_index":697,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["this.employeemodel.findbyid(id).exec",{"_index":696,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["this.employeeproductinterface.createemployeeproduct",{"_index":604,"title":{},"body":{"controllers/EmployeeProductController.html":{}}}],["this.employeeproductinterface.deleteemployeeproduct(id",{"_index":614,"title":{},"body":{"controllers/EmployeeProductController.html":{}}}],["this.employeeproductinterface.findallemployeeproducts",{"_index":611,"title":{},"body":{"controllers/EmployeeProductController.html":{}}}],["this.employeeproductinterface.findemployeeproductbyid(id",{"_index":610,"title":{},"body":{"controllers/EmployeeProductController.html":{}}}],["this.employeeproductinterface.findemployeeproductsbyemployeeid(employeeid",{"_index":606,"title":{},"body":{"controllers/EmployeeProductController.html":{}}}],["this.employeeproductinterface.findemployeeproductsbyproductid(productid",{"_index":608,"title":{},"body":{"controllers/EmployeeProductController.html":{}}}],["this.employeeproductinterface.updateemployeeproduct",{"_index":612,"title":{},"body":{"controllers/EmployeeProductController.html":{}}}],["this.employeeproductmodel",{"_index":663,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["this.employeeproductmodel.find().exec",{"_index":674,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["this.extracttokenfromheader(request",{"_index":61,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.hashingprovider.comparepassword",{"_index":788,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.hashingprovider.hashpassword(createuserdto.password",{"_index":416,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["this.jwtconfiguration",{"_index":68,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.jwtconfiguration.accesstokenttl",{"_index":803,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.jwtconfiguration.audience",{"_index":797,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.jwtconfiguration.issuer",{"_index":799,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.jwtconfiguration.secret",{"_index":801,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.jwtservice.signasync",{"_index":793,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.jwtservice.verifyasync",{"_index":67,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.productinterface.createproduct(createproductdto",{"_index":734,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productinterface.deleteproduct(id",{"_index":740,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productinterface.findallproducts",{"_index":737,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productinterface.findproductbyid(id",{"_index":736,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productinterface.findproductbyid(productid",{"_index":658,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["this.productinterface.updateproduct(id",{"_index":738,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productmodel",{"_index":772,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["this.productmodel(createproductdto",{"_index":765,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["this.productmodel.find().exec",{"_index":769,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["this.productmodel.findbyid(id).exec",{"_index":767,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["this.productmodel.findbyidanddelete(id).exec",{"_index":774,"title":{},"body":{"injectables/ProductServiceImpl.html":{}}}],["this.reflector.getallandoverride",{"_index":283,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.signinprovider.signin(signindto",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userinterface.createuser(createuserdto",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userinterface.findallusers",{"_index":852,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userinterface.finduserbyemail(email",{"_index":847,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userinterface.finduserbyemail(signindto.email",{"_index":783,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.userinterface.finduserbyid(id",{"_index":850,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usermodel",{"_index":418,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["this.usermodel.find().exec",{"_index":888,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["this.usermodel.findbyid(id).exec",{"_index":887,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["this.usermodel.findone",{"_index":886,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["this.usermodel.findone({email}).exec",{"_index":413,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["throw",{"_index":62,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateUserProvider.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"injectables/UserServiceImpl.html":{}}}],["time",{"_index":1056,"title":{},"body":{"index.html":{}}}],["token",{"_index":59,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{},"miscellaneous/variables.html":{}}}],["token')@apioperation({summary",{"_index":449,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["token.guard",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{}}}],["token.guard.ts",{"_index":8,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{}}}],["token.guard.ts:15",{"_index":21,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard.ts:22",{"_index":29,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard.ts:43",{"_index":35,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token/access",{"_index":7,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["totalpayroll",{"_index":542,"title":{},"body":{"classes/EmployeePayroll.html":{}}}],["totalprice",{"_index":556,"title":{},"body":{"classes/EmployeeProduct.html":{},"injectables/EmployeeProductServiceImpl.html":{}}}],["totalquantity",{"_index":543,"title":{},"body":{"classes/EmployeePayroll.html":{}}}],["touch",{"_index":1082,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":933,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":72,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"controllers/EmployeeProductController.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"classes/Product.html":{},"injectables/ProductServiceImpl.html":{},"classes/User.html":{}}}],["true})@isenum(empstatus",{"_index":345,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["true})@isnotempty()@isstring",{"_index":335,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["try",{"_index":64,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AuthService.html":{},"injectables/CreateUserProvider.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/ProductServiceImpl.html":{},"injectables/SignInProvider.html":{},"injectables/UserServiceImpl.html":{}}}],["twitter",{"_index":1088,"title":{},"body":{"index.html":{}}}],["type",{"_index":25,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptProvider.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserProvider.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"injectables/HashingProvider.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"classes/UpdateEmployeeStatusDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["type.enum.ts",{"_index":947,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typeorm",{"_index":762,"title":{},"body":{"injectables/ProductServiceImpl.html":{},"dependencies.html":{}}}],["types",{"_index":649,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{},"dependencies.html":{}}}],["types.objectid(empid",{"_index":671,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["typescript",{"_index":973,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":41,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/SignInProvider.html":{}}}],["unauthorizedexception('invalid",{"_index":784,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["undefined",{"_index":37,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Employee.html":{},"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"miscellaneous/variables.html":{}}}],["unique",{"_index":825,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":990,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["unlicensed",{"_index":1100,"title":{},"body":{"properties.html":{}}}],["update",{"_index":479,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"injectables/EmployeeProductServiceImpl.html":{},"injectables/EmployeeServiceImpl.html":{},"controllers/ProductController.html":{},"injectables/ProductServiceImpl.html":{}}}],["updated",{"_index":481,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/EmployeeProductController.html":{},"controllers/ProductController.html":{}}}],["updatedat",{"_index":544,"title":{},"body":{"classes/EmployeePayroll.html":{},"classes/EmployeeProduct.html":{},"injectables/EmployeeProductServiceImpl.html":{}}}],["updatedemployee",{"_index":514,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["updatedemployeeproduct",{"_index":675,"title":{},"body":{"injectables/EmployeeProductServiceImpl.html":{}}}],["updatedto",{"_index":689,"title":{},"body":{"injectables/EmployeeServiceImpl.html":{}}}],["updateemployee",{"_index":445,"title":{},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["updateemployee(id",{"_index":476,"title":{},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["updateemployeedto",{"_index":477,"title":{"classes/UpdateEmployeeDto.html":{}},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{},"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["updateemployeedto})@apiresponse({status",{"_index":480,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["updateemployeeproduct",{"_index":573,"title":{},"body":{"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{}}}],["updateemployeeproduct(id",{"_index":594,"title":{},"body":{"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{}}}],["updateemployeeproductdto",{"_index":595,"title":{"classes/UpdateEmployeeProductDto.html":{}},"body":{"controllers/EmployeeProductController.html":{},"interfaces/EmployeeProductInterface.html":{},"injectables/EmployeeProductServiceImpl.html":{},"classes/UpdateEmployeeProductDto.html":{},"coverage.html":{}}}],["updateemployeestatus",{"_index":446,"title":{},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["updateemployeestatus(id",{"_index":483,"title":{},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{}}}],["updateemployeestatusdto",{"_index":484,"title":{"classes/UpdateEmployeeStatusDto.html":{}},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeServiceImpl.html":{},"classes/UpdateEmployeeStatusDto.html":{},"coverage.html":{}}}],["updateemployeestatusdto})@apiresponse({status",{"_index":486,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["updateproduct",{"_index":717,"title":{},"body":{"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{}}}],["updateproduct(id",{"_index":726,"title":{},"body":{"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{}}}],["updateproductdto",{"_index":727,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductServiceImpl.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updates",{"_index":1065,"title":{},"body":{"index.html":{}}}],["uri",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":1125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":1118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useclass",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["used",{"_index":302,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["useexisting",{"_index":251,"title":{},"body":{"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeProductModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["usefactory",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{}}}],["useinterceptors",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":81,"title":{"classes/User.html":{}},"body":{"interfaces/ActiveUserData.html":{},"controllers/AuthController.html":{},"interfaces/AuthInterface.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateUserProvider.html":{},"injectables/SignInProvider.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":86,"title":{},"body":{"interfaces/ActiveUserData.html":{}}}],["user._id",{"_index":794,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["user.controller",{"_index":867,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator.ts",{"_index":900,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CreateUserProvider.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserServiceImpl.html":{}}}],["user.dto.ts",{"_index":379,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":386,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:17",{"_index":388,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:21",{"_index":384,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":389,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":795,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["user.name",{"_index":871,"title":{},"body":{"modules/UserModule.html":{}}}],["user.password",{"_index":790,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["user.provider",{"_index":870,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{}}}],["user.provider.ts",{"_index":395,"title":{},"body":{"injectables/CreateUserProvider.html":{},"coverage.html":{}}}],["user.provider.ts:18",{"_index":402,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["user.provider.ts:9",{"_index":399,"title":{},"body":{"injectables/CreateUserProvider.html":{}}}],["user.schema",{"_index":406,"title":{},"body":{"injectables/CreateUserProvider.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{}}}],["user.service",{"_index":868,"title":{},"body":{"modules/UserModule.html":{}}}],["user.toobject",{"_index":805,"title":{},"body":{"injectables/SignInProvider.html":{},"injectables/UserServiceImpl.html":{}}}],["user/user.module",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["user?.[field",{"_index":1119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":832,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userinterface",{"_index":212,"title":{"interfaces/UserInterface.html":{}},"body":{"controllers/AuthController.html":{},"injectables/SignInProvider.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{},"overview.html":{}}}],["usermodel",{"_index":400,"title":{},"body":{"injectables/CreateUserProvider.html":{},"injectables/UserServiceImpl.html":{}}}],["usermodule",{"_index":117,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":382,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["userobject",{"_index":804,"title":{},"body":{"injectables/SignInProvider.html":{},"injectables/UserServiceImpl.html":{}}}],["userobject.password",{"_index":806,"title":{},"body":{"injectables/SignInProvider.html":{},"injectables/UserServiceImpl.html":{}}}],["users",{"_index":883,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["users.length",{"_index":889,"title":{},"body":{"injectables/UserServiceImpl.html":{}}}],["userschema",{"_index":830,"title":{},"body":{"classes/User.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userserviceimpl",{"_index":864,"title":{"injectables/UserServiceImpl.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserServiceImpl.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":1057,"title":{},"body":{"index.html":{}}}],["validator",{"_index":352,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeStatusDto.html":{},"dependencies.html":{}}}],["value",{"_index":953,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":897,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1101,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1098,"title":{},"body":{"properties.html":{}}}],["video",{"_index":1049,"title":{},"body":{"index.html":{}}}],["visit",{"_index":1038,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":1052,"title":{},"body":{"index.html":{}}}],["watch",{"_index":984,"title":{},"body":{"index.html":{}}}],["website",{"_index":1086,"title":{},"body":{"index.html":{}}}],["working",{"_index":1037,"title":{},"body":{"index.html":{}}}],["x",{"_index":1067,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":1081,"title":{},"body":{"index.html":{}}}],["you're",{"_index":995,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeProductModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AccessTokenGuard.html":{"url":"guards/AccessTokenGuard.html","title":"guard - AccessTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AccessTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/access-token/access-token.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConfiguration: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/access-token/access-token.guard.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/access-token/access-token.guard.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractTokenFromHeader(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/access-token/access-token.guard.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ConfigType } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport jwtConfig from 'src/auth/config/jwt.config';\nimport { Request } from 'express';\nimport { REQUEST_USER_KEY } from 'src/auth/constants/auth.constants';\n\n@Injectable()\nexport class AccessTokenGuard implements CanActivate {\n  constructor(\n    private readonly jwtService: JwtService,\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConfiguration: ConfigType,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    // Extract the request from the execution context\n    const request = context.switchToHttp().getRequest();\n    // Extract the token from the header\n    const token = this.extractTokenFromHeader(request);\n\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n    try {\n      const payload = await this.jwtService.verifyAsync(\n        token,\n        this.jwtConfiguration,\n      );\n      request[REQUEST_USER_KEY] = payload;\n    } catch {\n      throw new UnauthorizedException();\n    }\n    return true;\n  }\n\n  private extractTokenFromHeader(request: Request): string | undefined {\n    const [_, token] = request.headers.authorization?.split(' ') ?? [];\n    return token;\n  }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActiveUserData.html":{"url":"interfaces/ActiveUserData.html","title":"interface - ActiveUserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActiveUserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/active-user-data.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's email address\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of the user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ActiveUserData {\n  /**\n   * The ID of the user\n   */\n  sub: number;\n\n  /**\n   * User's email address\n   */\n  email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nAppModule -->\n\nEmployeeModule->AppModule\n\n\n\n\n\nEmployeeProductModule\n\nEmployeeProductModule\n\nAppModule -->\n\nEmployeeProductModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            EmployeeModule\n                        \n                        \n                            EmployeeProductModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AuthModule } from './auth/auth.module';\nimport { UserModule } from './user/user.module';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { EmployeeModule } from './employee/employee.module';\nimport { ProductModule } from './product/product.module';\nimport { APP_GUARD } from '@nestjs/core';\nimport { AuthenticationGuard } from './auth/guards/authentication/authentication.guard';\nimport { AccessTokenGuard } from './auth/guards/access-token/access-token.guard';\nimport { JwtModule } from '@nestjs/jwt';\nimport { EmployeeProductModule } from './employee-product/employee-product.module';\nimport jwtConfig from './auth/config/jwt.config';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: ['.env', '.env.local'], \n    }),\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'public'),\n      exclude: ['/api*'], \n    }),\n    MongooseModule.forRootAsync({ \n      imports: [\n        ConfigModule\n      ],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGODB_URI'),\n        dbName: configService.get('MONGODB_NAME'),\n      }),\n      inject: [ConfigService],\n    }),\n    ConfigModule.forFeature(jwtConfig), \n    JwtModule.registerAsync(jwtConfig.asProvider()),\n    AuthModule,\n    UserModule,\n    EmployeeModule,\n    ProductModule,\n    EmployeeProductModule\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_GUARD,\n      useClass: AuthenticationGuard,\n    },\n    AccessTokenGuard,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello KoKo Shine!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                register\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiOperation({summary: 'User Registration'})@ApiBody({type: CreateUserDto})@ApiResponse({status: 201, description: 'User registered successfully'})@ApiResponse({status: 409, description: 'User with this email already exists'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signIn')@Auth(AuthType.None)@ApiOperation({summary: 'User Sign In'})@ApiBody({type: SignInDto})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Inject, Post, UseGuards, UseInterceptors } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { ApiBody, ApiOperation, ApiResponse } from '@nestjs/swagger';\nimport { SignInDto } from './dtos/signin.dto';\nimport { UserInterface } from 'src/user/interfaces/user.interface';\nimport { CreateUserDto } from 'src/user/dtos/create-user.dto';\nimport { Auth } from './decorators/auth.decorator';\nimport { AuthType } from './enums/auth-type.enum';\n\n@Controller('auth')\nexport class AuthController {\n    constructor(\n        private readonly authService: AuthService,\n\n        @Inject('UserInterface')\n        private readonly userInterface: UserInterface\n    ){}\n\n    @Post('register')\n    @ApiOperation({ summary: 'User Registration' })\n    @ApiBody({ type: CreateUserDto })\n    @ApiResponse({ status: 201, description: 'User registered successfully' })\n    @ApiResponse({ status: 409, description: 'User with this email already exists' })\n    async register(@Body() createUserDto: CreateUserDto){\n        return this.userInterface.createUser(createUserDto);\n    }\n\n    @Post('signIn')\n    @Auth(AuthType.None)\n    @ApiOperation({ summary: 'User Sign In' })\n    @ApiBody({ type: SignInDto })\n    async signIn(@Body() signInDto: any) {\n        return this.authService.signIn(signInDto);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthInterface.html":{"url":"interfaces/AuthInterface.html","title":"interface - AuthInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/auth.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        signIn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(signInDto: SignInDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/auth.interface.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { User } from \"src/user/user.schema\";\nimport { SignInDto } from \"../dtos/signin.dto\";\n\nexport interface AuthInterface {\n    signIn(signInDto: SignInDto): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthInterface \n\nAuthInterface \n\n\n\nAuthService \n\nAuthService \n\n\n\nHashingProvider \n\nHashingProvider \n\n\n\nAuthModule\n\nAuthModule\n\nAuthInterface  -->\n\nAuthModule->AuthInterface \n\n\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nHashingProvider  -->\n\nAuthModule->HashingProvider \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nSignInProvider\n\nSignInProvider\n\nAuthModule -->\n\nSignInProvider->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            SignInProvider\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthInterface\n                        \n                        \n                            AuthService\n                        \n                        \n                            HashingProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { HashingProvider } from './providers/hashing.provider';\nimport { BcryptProvider } from './providers/bcrypt.provider';\nimport { UserModule } from 'src/user/user.module';\nimport { SignInProvider } from './providers/signin.provider';\nimport { ConfigModule } from '@nestjs/config';\nimport jwtConfig from './config/jwt.config';\nimport { JwtModule } from '@nestjs/jwt';\n\n@Module({\n  providers: [\n    AuthService,\n    SignInProvider,\n    {\n      provide: HashingProvider,\n      useClass: BcryptProvider,\n    },\n    {\n      provide: 'AuthInterface',\n      useExisting: AuthService,\n    },\n  ],\n  controllers: [AuthController],\n  exports: [\n    AuthService,\n    HashingProvider,\n    'AuthInterface'\n  ],\n  imports: [\n    forwardRef(() => UserModule),\n    ConfigModule.forFeature(jwtConfig),\n    JwtModule.registerAsync(jwtConfig.asProvider())\n  ], \n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(signInProvider: SignInProvider)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        signInProvider\n                                                  \n                                                        \n                                                                        SignInProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { SignInDto } from './dtos/signin.dto';\nimport { SignInProvider } from './providers/signin.provider';\nimport { AuthInterface } from './interfaces/auth.interface';\nimport { User } from 'src/user/user.schema';\n\n@Injectable()\nexport class AuthService implements AuthInterface {\n    constructor(\n        private readonly signInProvider: SignInProvider,\n    ){}\n\n    async signIn(signInDto: SignInDto): Promise {\n        try {\n            return await this.signInProvider.signIn(signInDto);\n        } catch (error) {\n            throw new RequestTimeoutException('Sign in failed');\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/authentication/authentication.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authTypeGuardMap\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                defaultAuthType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, accessTokenGuard: AccessTokenGuard)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/authentication/authentication.guard.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessTokenGuard\n                                                  \n                                                        \n                                                                        AccessTokenGuard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/authentication/authentication.guard.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\n\nimport { AUTH_TYPE_KEY } from 'src/auth/decorators/auth.decorator';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\nimport { Observable } from 'rxjs';\nimport { Reflector } from '@nestjs/core';\nimport { AccessTokenGuard } from '../access-token/access-token.guard';\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  // Set the default Auth Type\n  private static readonly defaultAuthType = AuthType.None;\n\n  private readonly authTypeGuardMap: Record;\n\n  constructor(\n    private readonly reflector: Reflector,\n    private readonly accessTokenGuard: AccessTokenGuard,\n  ) {\n    this.authTypeGuardMap = {\n      [AuthType.Bearer]: this.accessTokenGuard,\n      [AuthType.None]: { canActivate: () => true },\n    }\n  }\n\n  // private readonly authTypeGuardMap: Record = {\n  //   [AuthType.Bearer]: this.accessTokenGuard,\n  //   [AuthType.None]: { canActivate: () => true },\n  // };\n\n  async canActivate(context: ExecutionContext): Promise {\n    const authTypes = this.reflector.getAllAndOverride(\n      AUTH_TYPE_KEY,\n      [context.getHandler(), context.getClass()],\n    ) ?? [AuthenticationGuard.defaultAuthType];\n\n    const guards = authTypes.map((type) => this.authTypeGuardMap[type]).flat();\n\n    // Declare the default error\n    let error = new UnauthorizedException();\n\n    for (const instance of guards) {\n      // Decalre a new constant\n      const canActivate = await Promise.resolve(\n        // Here the AccessToken Guard Will be fired and check if user has permissions to acces\n        // Later Multiple AuthTypes can be used even if one of them returns true\n        // The user is Authorised to access the resource\n        instance.canActivate(context),\n      ).catch((err) => {\n        error = err;\n      });\n\n      if (canActivate) {\n        return true;\n      }\n    }\n\n    throw error;\n  }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BcryptProvider.html":{"url":"injectables/BcryptProvider.html","title":"injectable - BcryptProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BcryptProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/bcrypt.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                comparePassword\n                            \n                            \n                                    Public\n                                    Async\n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        comparePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    comparePassword(data: string | Buffer, encrypted: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/bcrypt.provider.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                encrypted\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPassword(data: string | Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/bcrypt.provider.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as bcrypt from 'bcrypt';\nimport { Injectable } from '@nestjs/common';\nimport { HashingProvider } from './hashing.provider';\n\n@Injectable()\nexport class BcryptProvider implements HashingProvider {\n  public async hashPassword(data: string | Buffer): Promise {\n    // Generate the salt\n    const salt = await bcrypt.genSalt();\n    return bcrypt.hash(data, salt);\n  }\n\n  public async comparePassword(\n    data: string | Buffer,\n    encrypted: string,\n  ): Promise {\n    return bcrypt.compare(data, encrypted);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEmployeeDto.html":{"url":"classes/CreateEmployeeDto.html","title":"class - CreateEmployeeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEmployeeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/dtos/create-employee.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                joinedDate\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                position\n                            \n                            \n                                    \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dtos/create-employee.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        joinedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dtos/create-employee.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dtos/create-employee.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dtos/create-employee.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dtos/create-employee.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EmpStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: EmpStatus, description: 'Employee status', required: true})@IsEnum(EmpStatus)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dtos/create-employee.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsDateString, IsEnum, IsNotEmpty, IsString } from \"class-validator\";\nimport { EmpStatus } from \"../enums/emp-status.enum\";\n\nexport class CreateEmployeeDto {\n    @ApiProperty({ required: true })\n    @IsNotEmpty()\n    @IsString()\n    name: string;\n\n    @ApiProperty({ required: true })\n    @IsNotEmpty()\n    @IsString()\n    phoneNumber: string;\n\n    @ApiProperty({ required: true })\n    @IsNotEmpty()\n    @IsString()\n    address: string;\n\n    @ApiProperty({ required: true })\n    @IsNotEmpty()\n    @IsString()\n    position: string;\n\n    @ApiProperty({ enum: EmpStatus, description: 'Employee status', required: true })\n    @IsEnum(EmpStatus)\n    status: EmpStatus;\n\n    @ApiProperty({ required: true })\n    @IsNotEmpty()\n    @IsString()\n    joinedDate: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEmployeeProductDto.html":{"url":"classes/CreateEmployeeProductDto.html","title":"class - CreateEmployeeProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEmployeeProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee-product/dtos/create-employee-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                employeeId\n                            \n                            \n                                    \n                                    \n                                    \n                                productId\n                            \n                            \n                                    \n                                    \n                                    \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        employeeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee-product/dtos/create-employee-product.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee-product/dtos/create-employee-product.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee-product/dtos/create-employee-product.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsNotEmpty, IsNumber, IsString } from \"class-validator\";\n\nexport class CreateEmployeeProductDto {\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    employeeId: string;\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    productId: string;\n\n    @ApiProperty()\n    @IsNumber()\n    @IsNotEmpty()\n    quantity: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dtos/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dtos/create-product.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'The price of per product'})@IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dtos/create-product.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsNotEmpty, IsNumber, IsPositive, IsString } from \"class-validator\";\n\nexport class CreateProductDto {\n    @ApiProperty()\n    @IsNotEmpty()\n    @IsString()\n    name: string;\n\n    @ApiProperty({type: Number, description: 'The price of per product'})\n    @IsNumber()\n    @IsPositive()\n    price: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                dateOfBirth\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsDateString, IsEmail, IsNotEmpty, IsString, MinLength } from \"class-validator\";\n\nexport class CreateUserDto {\n    @ApiProperty()\n    @IsNotEmpty()\n    @IsString()\n    username: string;\n\n    @ApiProperty()\n    @IsEmail()\n    email: string;\n\n    @ApiProperty()\n    @IsNotEmpty()\n    @MinLength(6)\n    password: string;\n\n    @ApiProperty()\n    @IsDateString()\n    dateOfBirth: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUserProvider.html":{"url":"injectables/CreateUserProvider.html","title":"injectable - CreateUserProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateUserProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/providers/create-user.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, hashingProvider: HashingProvider)\n                    \n                \n                        \n                            \n                                Defined in src/user/providers/create-user.provider.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hashingProvider\n                                                  \n                                                        \n                                                                        HashingProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/providers/create-user.provider.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, forwardRef, Inject, Injectable, InternalServerErrorException } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { User } from \"../user.schema\";\nimport { Model } from \"mongoose\";\nimport { HashingProvider } from \"src/auth/providers/hashing.provider\";\nimport { CreateUserDto } from \"../dtos/create-user.dto\";\n\n@Injectable()\nexport class CreateUserProvider {\n    constructor(\n        @InjectModel(User.name)\n        private readonly userModel: Model,\n\n        @Inject(forwardRef(() => HashingProvider))\n        private readonly hashingProvider: HashingProvider,\n    ) {}\n\n    async createUser(createUserDto: CreateUserDto): Promise {\n        const {email} = createUserDto;\n        const existingUser = await this.userModel.findOne({email}).exec();\n\n        if (existingUser) {\n            throw new ConflictException('User with this email already exists')\n        }\n\n        try {\n            const hashedPassword = await this.hashingProvider.hashPassword(createUserDto.password);\n            const newUser = new this.userModel({\n                ...createUserDto,\n                password: hashedPassword,\n            });\n            return await newUser.save();\n        } catch (error) {\n            throw new InternalServerErrorException('Failed to create a user: ', error);\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Employee.html":{"url":"classes/Employee.html","title":"class - Employee","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Employee\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/employee.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                joinedDate\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                position\n                            \n                            \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/employee.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/employee.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/employee.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/employee.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/employee.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EmpStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, enum: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/employee.schema.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from 'mongoose';\nimport { EmpStatus } from \"./enums/emp-status.enum\";\n\n@Schema()\nexport class Employee extends Document {\n    @Prop({\n        type: String,\n        required: true,\n    })\n    name: string;\n\n    @Prop({\n        type: String,\n        required: true,\n    })\n    phoneNumber: string;\n\n    @Prop({\n        type: String,\n        required: true,\n    })\n    address: string;\n\n    @Prop({\n        type: String,\n        required: true,\n    })\n    position: string;\n\n    @Prop({\n        type: String,\n        required: true,\n        enum: Object.values(EmpStatus), \n        default: EmpStatus.ACTIVE,\n    })\n    status: EmpStatus;\n\n    @Prop({\n        type: Date,\n        required: true,\n    })\n    joinedDate: Date;\n}\n\nexport const EmployeeSchema = SchemaFactory.createForClass(Employee);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EmployeeController.html":{"url":"controllers/EmployeeController.html","title":"controller - EmployeeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EmployeeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/employee.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                employee\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createEmployee\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteEmployee\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAllEmployees\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findEmployeeById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateEmployee\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateEmployeeStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createEmployee\n                        \n                    \n                \n            \n            \n                \n                        \n                    createEmployee(createEmployeeDto: CreateEmployeeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Auth(AuthType.Bearer)@ApiBearerAuth('bearer-token')@ApiOperation({summary: 'Create a new employee'})@ApiBody({type: CreateEmployeeDto})@ApiResponse({status: 201, description: 'Employee created successfully'})@ApiResponse({status: 400, description: 'Bad Request'})\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createEmployeeDto\n                                            \n                                                            CreateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteEmployee\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteEmployee(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@Auth(AuthType.Bearer)@ApiBearerAuth('bearer-token')@ApiOperation({summary: 'Delete an employee by ID'})@ApiParam({name: 'id', required: true, description: 'MongoDB _id of the employee'})@ApiResponse({status: 200, description: 'Employee deleted successfully'})@ApiResponse({status: 404, description: 'Employee not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findAllEmployees\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllEmployees()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Find all employees'})@ApiResponse({status: 200, description: 'Employees found successfully'})\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findEmployeeById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findEmployeeById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({summary: 'Find an employee by ID'})@ApiParam({name: 'id', required: true, description: 'MongoDB _id of the employee'})@ApiResponse({status: 200, description: 'Employee found successfully'})@ApiResponse({status: 404, description: 'Employee not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        updateEmployee\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEmployee(id: string, updateEmployeeDto: UpdateEmployeeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')@Auth(AuthType.Bearer)@ApiBearerAuth('bearer-token')@ApiOperation({summary: 'Update an employee by ID'})@ApiParam({name: 'id', required: true, description: 'MongoDB _id of the employee'})@ApiBody({type: UpdateEmployeeDto})@ApiResponse({status: 200, description: 'Employee updated successfully'})@ApiResponse({status: 404, description: 'Employee not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateEmployeeDto\n                                            \n                                                            UpdateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        updateEmployeeStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEmployeeStatus(id: string, updateEmployeeStatus: UpdateEmployeeStatusDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id/status')@Auth(AuthType.Bearer)@ApiBearerAuth('bearer-token')@ApiOperation({summary: 'Update employee status by ID'})@ApiParam({name: 'id', required: true, description: 'MongoDB _id of the employee'})@ApiBody({type: UpdateEmployeeStatusDto})@ApiResponse({status: 200, description: 'Employee status updated successfully'})@ApiResponse({status: 404, description: 'Employee not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateEmployeeStatus\n                                            \n                                                            UpdateEmployeeStatusDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Inject,\n  NotFoundException,\n  UseGuards,\n  Query,\n  Put,\n} from '@nestjs/common';\nimport { CreateEmployeeDto } from './dtos/create-employee.dto';\nimport { UpdateEmployeeDto } from './dtos/update-employee.dto';\nimport { EmployeeInterface } from './interface/employee.interface';\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiOperation,\n  ApiParam,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { Auth } from 'src/auth/decorators/auth.decorator';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\nimport { UpdateEmployeeStatusDto } from './dtos/update-employee-status.dto';\n\n@ApiTags('Employee')\n@Controller('employee')\nexport class EmployeeController {\n  constructor(\n    @Inject('EmployeeInterface')\n    private readonly employeeInterface: EmployeeInterface,\n  ) {}\n\n  @Post()\n  @Auth(AuthType.Bearer)\n  @ApiBearerAuth('bearer-token')\n  @ApiOperation({ summary: 'Create a new employee' })\n  @ApiBody({ type: CreateEmployeeDto })\n  @ApiResponse({ status: 201, description: 'Employee created successfully' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  async createEmployee(@Body() createEmployeeDto: CreateEmployeeDto) {\n    return this.employeeInterface.createEmployee(createEmployeeDto);\n  }\n\n  @Get('/:id')\n  @ApiOperation({ summary: 'Find an employee by ID' })\n  @ApiParam({\n    name: 'id',\n    required: true,\n    description: 'MongoDB _id of the employee',\n  })\n  @ApiResponse({ status: 200, description: 'Employee found successfully' })\n  @ApiResponse({ status: 404, description: 'Employee not found' })\n  async findEmployeeById(@Param('id') id: string) {\n    return this.employeeInterface.findEmployeeById(id);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Find all employees' })\n  @ApiResponse({ status: 200, description: 'Employees found successfully' })\n  async findAllEmployees() {\n    return this.employeeInterface.findAllEmployees();\n  }\n\n  @Patch('/:id')\n  @Auth(AuthType.Bearer)\n  @ApiBearerAuth('bearer-token')\n  @ApiOperation({ summary: 'Update an employee by ID' })\n  @ApiParam({\n    name: 'id',\n    required: true,\n    description: 'MongoDB _id of the employee',\n  })\n  @ApiBody({ type: UpdateEmployeeDto })\n  @ApiResponse({ status: 200, description: 'Employee updated successfully' })\n  @ApiResponse({ status: 404, description: 'Employee not found' })\n  async updateEmployee(\n    @Param('id') id: string,\n    @Body() updateEmployeeDto: UpdateEmployeeDto,\n  ) {\n    const updatedEmployee = await this.employeeInterface.updateEmployee(\n      id,\n      updateEmployeeDto,\n    );\n    return this.employeeInterface.updateEmployee(id, updateEmployeeDto);\n  }\n\n  @Patch('/:id/status')\n  @Auth(AuthType.Bearer)\n  @ApiBearerAuth('bearer-token')\n  @ApiOperation({ summary: 'Update employee status by ID' })\n  @ApiParam({\n    name: 'id',\n    required: true,\n    description: 'MongoDB _id of the employee',\n  })\n  @ApiBody({ type: UpdateEmployeeStatusDto })\n  @ApiResponse({\n    status: 200,\n    description: 'Employee status updated successfully',\n  })\n  @ApiResponse({ status: 404, description: 'Employee not found' })\n  async updateEmployeeStatus(\n    @Param('id') id: string,\n    @Body() updateEmployeeStatus: UpdateEmployeeStatusDto,\n  ) {\n    return this.employeeInterface.updateEmployeeStatus(\n      id,\n      updateEmployeeStatus,\n    );\n  }\n\n  @Delete('/:id')\n  @Auth(AuthType.Bearer)\n  @ApiBearerAuth('bearer-token')\n  @ApiOperation({ summary: 'Delete an employee by ID' })\n  @ApiParam({\n    name: 'id',\n    required: true,\n    description: 'MongoDB _id of the employee',\n  })\n  @ApiResponse({ status: 200, description: 'Employee deleted successfully' })\n  @ApiResponse({ status: 404, description: 'Employee not found' })\n  async deleteEmployee(@Param('id') id: string) {\n    return this.employeeInterface.deleteEmployee(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmployeeInterface.html":{"url":"interfaces/EmployeeInterface.html","title":"interface - EmployeeInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EmployeeInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/interface/employee.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createEmployee\n                                    \n                                \n                                \n                                    \n                                        deleteEmployee\n                                    \n                                \n                                \n                                    \n                                        findAllEmployees\n                                    \n                                \n                                \n                                    \n                                        findEmployeeById\n                                    \n                                \n                                \n                                    \n                                        updateEmployee\n                                    \n                                \n                                \n                                    \n                                        updateEmployeeStatus\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createEmployee\n                        \n                    \n                \n            \n            \n                \ncreateEmployee(createEmployeeDto: CreateEmployeeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/interface/employee.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createEmployeeDto\n                                            \n                                                            CreateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEmployee\n                        \n                    \n                \n            \n            \n                \ndeleteEmployee(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/interface/employee.interface.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllEmployees\n                        \n                    \n                \n            \n            \n                \nfindAllEmployees()\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/interface/employee.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findEmployeeById\n                        \n                    \n                \n            \n            \n                \nfindEmployeeById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/interface/employee.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEmployee\n                        \n                    \n                \n            \n            \n                \nupdateEmployee(id: string, updateEmployeeDto: UpdateEmployeeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/interface/employee.interface.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateEmployeeDto\n                                            \n                                                            UpdateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEmployeeStatus\n                        \n                    \n                \n            \n            \n                \nupdateEmployeeStatus(id: string, status: UpdateEmployeeStatusDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/interface/employee.interface.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            UpdateEmployeeStatusDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CreateEmployeeDto } from \"../dtos/create-employee.dto\";\nimport { UpdateEmployeeStatusDto } from \"../dtos/update-employee-status.dto\";\nimport { UpdateEmployeeDto } from \"../dtos/update-employee.dto\";\nimport { Employee } from \"../employee.schema\";\n\nexport interface EmployeeInterface {\n    createEmployee(createEmployeeDto: CreateEmployeeDto): Promise;\n    findEmployeeById(id: string): Promise;\n    findAllEmployees(): Promise;\n    updateEmployee(id: string, updateEmployeeDto: UpdateEmployeeDto): Promise;\n    deleteEmployee(id: string): Promise;\n    updateEmployeeStatus(id: string, status: UpdateEmployeeStatusDto): Promise;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmployeeModule.html":{"url":"modules/EmployeeModule.html","title":"module - EmployeeModule","body":"\n                   \n\n\n\n\n    Modules\n    EmployeeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EmployeeModule\n\n\n\ncluster_EmployeeModule_exports\n\n\n\ncluster_EmployeeModule_providers\n\n\n\n\nEmployeeInterface \n\nEmployeeInterface \n\n\n\nEmployeeServiceImpl \n\nEmployeeServiceImpl \n\n\n\nEmployeeModule\n\nEmployeeModule\n\nEmployeeInterface  -->\n\nEmployeeModule->EmployeeInterface \n\n\n\nEmployeeServiceImpl  -->\n\nEmployeeModule->EmployeeServiceImpl \n\n\n\n\n\nEmployeeServiceImpl\n\nEmployeeServiceImpl\n\nEmployeeModule -->\n\nEmployeeServiceImpl->EmployeeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/employee/employee.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmployeeServiceImpl\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EmployeeController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EmployeeInterface\n                        \n                        \n                            EmployeeServiceImpl\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { EmployeeServiceImpl } from './employee.service';\nimport { EmployeeController } from './employee.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Employee, EmployeeSchema } from './employee.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Employee.name,\n        schema: EmployeeSchema,\n      },\n    ])\n  ],\n  controllers: [EmployeeController],\n  providers: [\n    EmployeeServiceImpl,\n    {\n      provide: 'EmployeeInterface',\n      useExisting: EmployeeServiceImpl,\n    }\n  ],\n  exports: [EmployeeServiceImpl, 'EmployeeInterface'],\n})\nexport class EmployeeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmployeePayroll.html":{"url":"classes/EmployeePayroll.html","title":"class - EmployeePayroll","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmployeePayroll\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee-product/employee.payroll.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                employeeId\n                            \n                            \n                                    \n                                payrollDate\n                            \n                            \n                                    \n                                totalPayroll\n                            \n                            \n                                    \n                                totalQuantity\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        employeeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee-product/employee.payroll.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        payrollDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee-product/employee.payroll.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalPayroll\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, required: true, default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee-product/employee.payroll.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, required: true, default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee-product/employee.payroll.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee-product/employee.payroll.schema.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\n\n@Schema()\nexport class EmployeePayroll extends Document{\n    @Prop({\n        type: String,\n        required: true,\n    })\n    employeeId: string;\n\n    @Prop({\n        type: Number,\n        required: true,\n        default: 0,\n    })\n    totalQuantity: number;\n\n    @Prop({\n        type: Number,\n        required: true,\n        default: 0,\n    })\n    totalPayroll: number;\n\n    @Prop({\n        type: Date,\n        default: Date.now,\n    })\n    updatedAt: Date;\n\n    @Prop({\n        type: Date,\n        required: true,\n    })\n    payrollDate: Date;\n}\n\nexport const EmployeePayrollSchema = SchemaFactory.createForClass(EmployeePayroll); \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmployeeProduct.html":{"url":"classes/EmployeeProduct.html","title":"class - EmployeeProduct","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmployeeProduct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee-product/employee-product.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                employeeId\n                            \n                            \n                                    \n                                productId\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                totalPrice\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        employeeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, ref: 'Employee'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee-product/employee-product.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, ref: 'Product'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee-product/employee-product.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, required: true, default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee-product/employee-product.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, required: true, default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee-product/employee-product.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee-product/employee-product.schema.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\n\n@Schema()\nexport class EmployeeProduct extends Document {\n\n    @Prop({\n        type: String,\n        required: true,\n        ref: 'Employee' \n    })\n    employeeId: string;\n\n    @Prop({\n        type: String,\n        required: true,\n        ref: 'Product' \n    })\n    productId: string;\n\n    @Prop({\n        type: Number,\n        required: true,\n        default: 0\n    })\n    quantity: number;\n\n    @Prop({\n        type: Number,\n        required: true,\n        default: 0\n    })\n    totalPrice: number;\n\n    @Prop({\n        type: Date,\n        default: Date.now\n    })\n    updatedAt: Date;\n}\n\nexport const EmployeeProductSchema = SchemaFactory.createForClass(EmployeeProduct);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EmployeeProductController.html":{"url":"controllers/EmployeeProductController.html","title":"controller - EmployeeProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EmployeeProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee-product/employee-product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                employee-product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createEmployeeProduct\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteEmployeeProduct\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAllEmployeeProducts\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findEmployeeProductById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findEmployeeProductsByEmployeeId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findEmployeeProductsByProductId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateEmployeeProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createEmployeeProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createEmployeeProduct(createEmployeeProductDto: CreateEmployeeProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Auth(AuthType.Bearer)@ApiBearerAuth('bearer-token')@ApiOperation({summary: 'Create a new employee product'})@ApiBody({type: CreateEmployeeProductDto})@ApiResponse({status: 201, description: 'Employee product created successfully'})@ApiResponse({status: 400, description: 'Bad Request'})\n                \n            \n\n                    \n                        \n                            Defined in src/employee-product/employee-product.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createEmployeeProductDto\n                                            \n                                                            CreateEmployeeProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteEmployeeProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteEmployeeProduct(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@Auth(AuthType.Bearer)@ApiBearerAuth('bearer-token')@ApiOperation({summary: 'Delete an employee product'})@ApiParam({name: 'id', required: true, description: 'MongoDB _id of the employee'})@ApiResponse({status: 200, description: 'Employee product deleted successfully'})@ApiResponse({status: 404, description: 'Employee product not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/employee-product/employee-product.controller.ts:153\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        findAllEmployeeProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllEmployeeProducts()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Find all employee products'})@ApiResponse({status: 200, description: 'Employee products found successfully'})@ApiResponse({status: 404, description: 'No employee products found'})\n                \n            \n\n                    \n                        \n                            Defined in src/employee-product/employee-product.controller.ts:110\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findEmployeeProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findEmployeeProductById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({summary: 'Find an employee product by ID'})@ApiParam({name: 'id', required: true, description: 'MongoDB _id of the employee-product'})@ApiResponse({status: 200, description: 'Employee product found successfully'})@ApiResponse({status: 404, description: 'Employee product not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/employee-product/employee-product.controller.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findEmployeeProductsByEmployeeId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findEmployeeProductsByEmployeeId(employeeId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/get-by-employee-id')@ApiOperation({summary: 'Find employee products by employee ID'})@ApiQuery({name: 'employeeId', type: String, required: true, description: 'MongoDB _id of the employee'})@ApiResponse({status: 200, description: 'Employee products found successfully'})@ApiResponse({status: 404, description: 'No employee products found'})\n                \n            \n\n                    \n                        \n                            Defined in src/employee-product/employee-product.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                employeeId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findEmployeeProductsByProductId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findEmployeeProductsByProductId(productId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/get-by-product-id')@ApiOperation({summary: 'Find employee products by product ID'})@ApiQuery({name: 'productId', type: String, required: true, description: 'MongoDB _id of the product'})@ApiResponse({status: 200, description: 'Employee products found successfully'})@ApiResponse({status: 404, description: 'No employee products found'})\n                \n            \n\n                    \n                        \n                            Defined in src/employee-product/employee-product.controller.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        updateEmployeeProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEmployeeProduct(id: string, updateEmployeeProductDto: UpdateEmployeeProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')@Auth(AuthType.Bearer)@ApiBearerAuth('bearer-token')@ApiOperation({summary: 'Update an employee product'})@ApiParam({name: 'id', required: true, description: 'MongoDB _id of the employee-product'})@ApiBody({type: CreateEmployeeProductDto})@ApiResponse({status: 200, description: 'Employee product updated successfully'})@ApiResponse({status: 404, description: 'Employee product not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/employee-product/employee-product.controller.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateEmployeeProductDto\n                                            \n                                                            UpdateEmployeeProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Inject,\n  Param,\n  Patch,\n  Post,\n  Query,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiOperation,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { EmployeeProductInterface } from './interface/employee-product.interface';\nimport { Auth } from 'src/auth/decorators/auth.decorator';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\nimport { CreateEmployeeProductDto } from './dtos/create-employee-product.dto';\nimport { UpdateEmployeeProductDto } from './dtos/update-employee-product.dto';\n\n@ApiTags('EmployeeProduct')\n@Controller('employee-product')\nexport class EmployeeProductController {\n  constructor(\n    @Inject('EmployeeProductInterface')\n    private readonly employeeProductInterface: EmployeeProductInterface,\n  ) {}\n\n  @Post()\n  @Auth(AuthType.Bearer)\n  @ApiBearerAuth('bearer-token')\n  @ApiOperation({ summary: 'Create a new employee product' })\n  @ApiBody({ type: CreateEmployeeProductDto })\n  @ApiResponse({\n    status: 201,\n    description: 'Employee product created successfully',\n  })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  async createEmployeeProduct(\n    @Body() createEmployeeProductDto: CreateEmployeeProductDto,\n  ) {\n    return this.employeeProductInterface.createEmployeeProduct(\n      createEmployeeProductDto,\n    );\n  }\n\n  @Get('/get-by-employee-id')\n  @ApiOperation({ summary: 'Find employee products by employee ID' })\n  @ApiQuery({\n    name: 'employeeId',\n    type: String,\n    required: true,\n    description: 'MongoDB _id of the employee',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Employee products found successfully',\n  })\n  @ApiResponse({ status: 404, description: 'No employee products found' })\n  async findEmployeeProductsByEmployeeId(@Query('employeeId') employeeId: string) {\n    return this.employeeProductInterface.findEmployeeProductsByEmployeeId(employeeId);\n  }\n\n  @Get('/get-by-product-id')\n  @ApiOperation({ summary: 'Find employee products by product ID' })\n  @ApiQuery({\n    name: 'productId',\n    type: String,\n    required: true, \n    description: 'MongoDB _id of the product',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Employee products found successfully',\n  })\n  @ApiResponse({ status: 404, description: 'No employee products found' })\n  async findEmployeeProductsByProductId(@Query('productId') productId: string) {\n    return this.employeeProductInterface.findEmployeeProductsByProductId(productId);\n  }\n\n  @Get('/:id')\n  @ApiOperation({ summary: 'Find an employee product by ID' })\n  @ApiParam({\n    name: 'id',\n    required: true,\n    description: 'MongoDB _id of the employee-product',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Employee product found successfully',\n  })\n  @ApiResponse({ status: 404, description: 'Employee product not found' })\n  async findEmployeeProductById(@Param('id') id: string) {\n    return this.employeeProductInterface.findEmployeeProductById(id);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Find all employee products' })\n  @ApiResponse({\n    status: 200,\n    description: 'Employee products found successfully',\n  })\n  @ApiResponse({ status: 404, description: 'No employee products found' })\n  async findAllEmployeeProducts() {\n    return this.employeeProductInterface.findAllEmployeeProducts();\n  }\n\n  @Patch('/:id')\n  @Auth(AuthType.Bearer)\n  @ApiBearerAuth('bearer-token')\n  @ApiOperation({ summary: 'Update an employee product' })\n  @ApiParam({\n    name: 'id',\n    required: true,\n    description: 'MongoDB _id of the employee-product',\n  })\n  @ApiBody({ type: CreateEmployeeProductDto })\n  @ApiResponse({\n    status: 200,\n    description: 'Employee product updated successfully',\n  })\n  @ApiResponse({ status: 404, description: 'Employee product not found' })\n  async updateEmployeeProduct(\n    @Param('id') id: string,\n    @Body() updateEmployeeProductDto: UpdateEmployeeProductDto,\n  ) {\n    return this.employeeProductInterface.updateEmployeeProduct(\n      id,\n      updateEmployeeProductDto,\n    );\n  }\n\n  @Delete('/:id')\n  @Auth(AuthType.Bearer)\n  @ApiBearerAuth('bearer-token')\n  @ApiOperation({ summary: 'Delete an employee product' })\n  @ApiParam({\n    name: 'id',\n    required: true,\n    description: 'MongoDB _id of the employee',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Employee product deleted successfully',\n  })\n  @ApiResponse({ status: 404, description: 'Employee product not found' })\n  async deleteEmployeeProduct(@Param('id') id: string) {\n    return this.employeeProductInterface.deleteEmployeeProduct(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmployeeProductInterface.html":{"url":"interfaces/EmployeeProductInterface.html","title":"interface - EmployeeProductInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EmployeeProductInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee-product/interface/employee-product.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createEmployeeProduct\n                                    \n                                \n                                \n                                    \n                                        deleteEmployeeProduct\n                                    \n                                \n                                \n                                    \n                                        findAllEmployeeProducts\n                                    \n                                \n                                \n                                    \n                                        findEmployeeProductById\n                                    \n                                \n                                \n                                    \n                                        findEmployeeProductsByEmployeeId\n                                    \n                                \n                                \n                                    \n                                        findEmployeeProductsByProductId\n                                    \n                                \n                                \n                                    \n                                        updateEmployeeProduct\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createEmployeeProduct\n                        \n                    \n                \n            \n            \n                \ncreateEmployeeProduct(createEmployeeProductDto: CreateEmployeeProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee-product/interface/employee-product.interface.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createEmployeeProductDto\n                                            \n                                                            CreateEmployeeProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEmployeeProduct\n                        \n                    \n                \n            \n            \n                \ndeleteEmployeeProduct(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee-product/interface/employee-product.interface.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllEmployeeProducts\n                        \n                    \n                \n            \n            \n                \nfindAllEmployeeProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee-product/interface/employee-product.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findEmployeeProductById\n                        \n                    \n                \n            \n            \n                \nfindEmployeeProductById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee-product/interface/employee-product.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findEmployeeProductsByEmployeeId\n                        \n                    \n                \n            \n            \n                \nfindEmployeeProductsByEmployeeId(employeeId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee-product/interface/employee-product.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                employeeId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findEmployeeProductsByProductId\n                        \n                    \n                \n            \n            \n                \nfindEmployeeProductsByProductId(productId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee-product/interface/employee-product.interface.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEmployeeProduct\n                        \n                    \n                \n            \n            \n                \nupdateEmployeeProduct(id: string, updateEmployeeProductDto: UpdateEmployeeProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee-product/interface/employee-product.interface.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateEmployeeProductDto\n                                            \n                                                            UpdateEmployeeProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CreateEmployeeProductDto } from \"../dtos/create-employee-product.dto\";\nimport { UpdateEmployeeProductDto } from \"../dtos/update-employee-product.dto\";\nimport { EmployeeProduct } from \"../employee-product.schema\";\n\nexport interface EmployeeProductInterface {\n    createEmployeeProduct(createEmployeeProductDto: CreateEmployeeProductDto): Promise;\n    findEmployeeProductById(id: string): Promise;\n    findAllEmployeeProducts(): Promise;\n    findEmployeeProductsByEmployeeId(employeeId: string): Promise;\n    findEmployeeProductsByProductId(productId: string): Promise;\n    updateEmployeeProduct(id: string, updateEmployeeProductDto: UpdateEmployeeProductDto): Promise;\n    deleteEmployeeProduct(id: string): Promise;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmployeeProductModule.html":{"url":"modules/EmployeeProductModule.html","title":"module - EmployeeProductModule","body":"\n                   \n\n\n\n\n    Modules\n    EmployeeProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EmployeeProductModule\n\n\n\ncluster_EmployeeProductModule_providers\n\n\n\n\nEmployeeProductServiceImpl\n\nEmployeeProductServiceImpl\n\n\n\nEmployeeProductModule\n\nEmployeeProductModule\n\nEmployeeProductModule -->\n\nEmployeeProductServiceImpl->EmployeeProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/employee-product/employee-product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmployeeProductServiceImpl\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EmployeeProductController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { EmployeeProductController } from './employee-product.controller';\nimport { EmployeeProductServiceImpl } from './employee-product.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { EmployeeProduct, EmployeeProductSchema } from './employee-product.schema';\nimport { EmployeeModule } from 'src/employee/employee.module';\nimport { ProductModule } from 'src/product/product.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: EmployeeProduct.name,\n        schema: EmployeeProductSchema, \n      },\n    ]),\n    forwardRef(() => EmployeeModule),\n    forwardRef(() => ProductModule), \n  ],\n  controllers: [EmployeeProductController],\n  providers: [\n    EmployeeProductServiceImpl,\n    {\n      provide: 'EmployeeProductInterface',\n      useExisting: EmployeeProductServiceImpl,\n    }\n  ]\n})\nexport class EmployeeProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmployeeProductServiceImpl.html":{"url":"injectables/EmployeeProductServiceImpl.html","title":"injectable - EmployeeProductServiceImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmployeeProductServiceImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee-product/employee-product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createEmployeeProduct\n                            \n                            \n                                    Async\n                                deleteEmployeeProduct\n                            \n                            \n                                    Async\n                                findAllEmployeeProducts\n                            \n                            \n                                    Async\n                                findEmployeeProductById\n                            \n                            \n                                    Async\n                                findEmployeeProductsByEmployeeId\n                            \n                            \n                                    Async\n                                findEmployeeProductsByProductId\n                            \n                            \n                                    Async\n                                updateEmployeeProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(employeeProductModel: Model, employeePayrollModel: Model, employeeInterface: EmployeeInterface, productInterface: ProductInterface)\n                    \n                \n                        \n                            \n                                Defined in src/employee-product/employee-product.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        employeeProductModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        employeePayrollModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        employeeInterface\n                                                  \n                                                        \n                                                                        EmployeeInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productInterface\n                                                  \n                                                        \n                                                                        ProductInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createEmployeeProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createEmployeeProduct(createEmployeeProductDto: CreateEmployeeProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee-product/employee-product.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createEmployeeProductDto\n                                            \n                                                            CreateEmployeeProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteEmployeeProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteEmployeeProduct(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee-product/employee-product.service.ts:163\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllEmployeeProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllEmployeeProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee-product/employee-product.service.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findEmployeeProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findEmployeeProductById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee-product/employee-product.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findEmployeeProductsByEmployeeId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findEmployeeProductsByEmployeeId(empId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee-product/employee-product.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                empId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findEmployeeProductsByProductId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findEmployeeProductsByProductId(productId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee-product/employee-product.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateEmployeeProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEmployeeProduct(id: string, updateEmployeeProductDto: UpdateEmployeeProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee-product/employee-product.service.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateEmployeeProductDto\n                                            \n                                                            UpdateEmployeeProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n} from '@nestjs/common';\nimport { EmployeeProduct } from './employee-product.schema';\nimport { Model, Types } from 'mongoose';\nimport { CreateEmployeeProductDto } from './dtos/create-employee-product.dto';\nimport { UpdateEmployeeProductDto } from './dtos/update-employee-product.dto';\nimport { EmployeeProductInterface } from './interface/employee-product.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { EmployeeInterface } from 'src/employee/interface/employee.interface';\nimport { ProductInterface } from 'src/product/interface/product.interface';\nimport { EmployeePayroll } from './employee.payroll.schema';\n\n@Injectable()\nexport class EmployeeProductServiceImpl implements EmployeeProductInterface {\n  constructor(\n    @InjectModel(EmployeeProduct.name)\n    private readonly employeeProductModel: Model,\n\n    @InjectModel(EmployeePayroll.name)\n    private readonly employeePayrollModel: Model,\n\n    @Inject('EmployeeInterface')\n    private readonly employeeInterface: EmployeeInterface,\n\n    @Inject('ProductInterface')\n    private readonly productInterface: ProductInterface,\n  ) {}\n\n  async createEmployeeProduct(\n    createEmployeeProductDto: CreateEmployeeProductDto,\n  ): Promise {\n    try {\n      const { employeeId, productId } = createEmployeeProductDto;\n\n      const employee =\n        await this.employeeInterface.findEmployeeById(employeeId);\n      if (!employee) {\n        throw new NotFoundException(`Employee with ID ${employeeId} not found`);\n      }\n\n      const product = await this.productInterface.findProductById(productId);\n      if (!product) {\n        throw new NotFoundException(`Product with ID ${productId} not found`);\n      }\n\n      const totalPrice = product.price * createEmployeeProductDto.quantity;\n\n      const createdEmployeeProduct = new this.employeeProductModel({\n        ...createEmployeeProductDto,\n        totalPrice,\n        updatedAt: new Date(),\n      });\n      return await createdEmployeeProduct.save();\n    } catch (error) {\n      throw new InternalServerErrorException(\n        'Failed to create employee product: ' + error.message,\n      );\n    }\n  }\n\n  async findEmployeeProductById(id: string): Promise {\n    try {\n      const employeeProduct = await this.employeeProductModel\n        .findById(id)\n        .exec();\n      if (!employeeProduct) {\n        throw new NotFoundException('Employee product not found');\n      }\n      return employeeProduct;\n    } catch (error) {\n      throw new InternalServerErrorException(\n        'Failed to find employee product by ID: ' + error.message,\n      );\n    }\n  }\n\n  async findEmployeeProductsByEmployeeId(\n    empId: string,\n  ): Promise {\n    try {\n      const employee = await this.employeeInterface.findEmployeeById(empId);\n      if (!employee) {\n        throw new NotFoundException(`Employee with ID ${empId} not found`);\n      }\n      const employeeProducts = await this.employeeProductModel\n        .find({ employeeId: new Types.ObjectId(empId) })\n        .exec();\n\n      if (employeeProducts.length === 0) {\n        throw new NotFoundException('No products found for this employee');\n      }\n      return employeeProducts;\n    } catch (error) {\n      throw new InternalServerErrorException(\n        'Failed to find employee products by employee ID: ' + error.message,\n      );\n    }\n  }\n\n  async findEmployeeProductsByProductId(\n    productId: string,\n  ): Promise {\n    try {\n      const employee = await this.productInterface.findProductById(productId);\n      if (!employee) {\n        throw new NotFoundException(`Product with ID ${productId} not found`);\n      }\n      const employeeProducts = await this.employeeProductModel\n        .find({ productId: productId })\n        .exec();\n\n      if (employeeProducts.length === 0) {\n        throw new NotFoundException('No products found for this product ID');\n      }\n      return employeeProducts;\n    } catch (error) {\n      throw new InternalServerErrorException(\n        'Failed to find employee products by product ID: ' + error.message,\n      );\n    }\n  }\n\n  async findAllEmployeeProducts(): Promise {\n    try {\n      const employeeProducts = await this.employeeProductModel.find().exec();\n      if (!employeeProducts || employeeProducts.length === 0) {\n        throw new NotFoundException('No employee products found');\n      }\n      return employeeProducts;\n    } catch (error) {\n      throw new InternalServerErrorException(\n        'Failed to find all employee products: ' + error.message,\n      );\n    }\n  }\n\n  async updateEmployeeProduct(\n    id: string,\n    updateEmployeeProductDto: UpdateEmployeeProductDto,\n  ): Promise {\n    try {\n      const updatedEmployeeProduct = await this.employeeProductModel\n        .findByIdAndUpdate(id, updateEmployeeProductDto, {\n          new: true,\n          runValidators: true,\n        })\n        .exec();\n      if (!updatedEmployeeProduct) {\n        throw new NotFoundException('Employee product not found for update');\n      }\n      return updatedEmployeeProduct;\n    } catch (error) {\n      throw new InternalServerErrorException(\n        'Failed to update employee product: ' + error.message,\n      );\n    }\n  }\n\n  async deleteEmployeeProduct(id: string): Promise {\n    try {\n      const deletedEmployeeProduct = await this.employeeProductModel\n        .findByIdAndDelete(id)\n        .exec();\n      if (!deletedEmployeeProduct) {\n        throw new NotFoundException('Employee product not found for deletion');\n      }\n      return deletedEmployeeProduct;\n    } catch (error) {\n      throw new InternalServerErrorException(\n        'Failed to delete employee product: ' + error.message,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmployeeServiceImpl.html":{"url":"injectables/EmployeeServiceImpl.html","title":"injectable - EmployeeServiceImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmployeeServiceImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/employee.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createEmployee\n                            \n                            \n                                    Async\n                                deleteEmployee\n                            \n                            \n                                    Async\n                                findAllEmployees\n                            \n                            \n                                    Async\n                                findEmployeeById\n                            \n                            \n                                    Async\n                                updateEmployee\n                            \n                            \n                                    Async\n                                updateEmployeeStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(employeeModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/employee/employee.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        employeeModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createEmployee\n                        \n                    \n                \n            \n            \n                \n                        \n                    createEmployee(createEmployeeDto: CreateEmployeeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/employee.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createEmployeeDto\n                                            \n                                                            CreateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteEmployee\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteEmployee(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/employee.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllEmployees\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllEmployees()\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/employee.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findEmployeeById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findEmployeeById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/employee.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateEmployee\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEmployee(id: string, updateDto: UpdateEmployeeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/employee.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                            UpdateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateEmployeeStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEmployeeStatus(id: string, status: UpdateEmployeeStatusDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/employee.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            UpdateEmployeeStatusDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n} from '@nestjs/common';\nimport { CreateEmployeeDto } from './dtos/create-employee.dto';\nimport { UpdateEmployeeDto } from './dtos/update-employee.dto';\nimport { EmployeeInterface } from './interface/employee.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Employee } from './employee.schema';\nimport { Model } from 'mongoose';\nimport { EmpStatus } from './enums/emp-status.enum';\nimport { UpdateEmployeeStatusDto } from './dtos/update-employee-status.dto';\n\n@Injectable()\nexport class EmployeeServiceImpl implements EmployeeInterface {\n  constructor(\n    @InjectModel(Employee.name)\n    private readonly employeeModel: Model,\n  ) {}\n\n  async createEmployee(\n    createEmployeeDto: CreateEmployeeDto,\n  ): Promise {\n    try {\n      const createdEmployee = new this.employeeModel(createEmployeeDto);\n      return createdEmployee.save();\n    } catch (error) {\n      throw new InternalServerErrorException('Failed to create employee: ' + error.message);\n    }\n  }\n\n  async findEmployeeById(id: string): Promise {\n    try {\n      const employee = await this.employeeModel.findById(id).exec();\n      if (!employee) {\n        throw new NotFoundException('Employee not found');\n      }\n      return employee;\n    } catch (error) {\n      throw new InternalServerErrorException('Failed to find employee by ID: ' + error.message);\n    }\n  }\n\n  async findAllEmployees(): Promise {\n    try {\n      const employees = await this.employeeModel.find().exec();\n      if (!employees || employees.length === 0) {\n        throw new NotFoundException('No employees found');\n      }\n      return employees;\n    } catch (error) {\n      throw new InternalServerErrorException('Failed to find all employees: ' + error.message);\n    }\n  }\n\n  async updateEmployee(\n    id: string,\n    updateDto: UpdateEmployeeDto,\n  ): Promise {\n    try {\n      const updatedEmployee = await this.employeeModel\n        .findByIdAndUpdate(id, updateDto, {\n          new: true,\n          runValidators: true,\n        })\n        .exec();\n      if (!updatedEmployee) {\n        throw new NotFoundException('Employee not found');\n      }\n      return updatedEmployee;\n    } catch (error) {\n      throw new InternalServerErrorException(\n        'Failed to update employee: ' + error.message,\n      );\n    }\n  }\n\n  async deleteEmployee(id: string): Promise {\n    try {\n      const employeeToDelete = await this.employeeModel\n        .findByIdAndDelete(id)\n        .exec();\n      if (!employeeToDelete) {\n        throw new NotFoundException('Employee not found');\n      }\n      return employeeToDelete;\n    } catch (error) {\n      throw new InternalServerErrorException(\n        'Failed to delete employee: ' + error.message,\n      );\n    }\n  }\n\n  async updateEmployeeStatus(\n    id: string,\n    status: UpdateEmployeeStatusDto,\n  ): Promise {\n    try {\n      const employeeStatus = await this.employeeModel\n        .findByIdAndUpdate(id, status, { new: true })\n        .exec();\n      if (!employeeStatus) {\n        throw new NotFoundException('Employee not found');\n      }\n      return employeeStatus;\n    } catch (error) {\n      throw new InternalServerErrorException(\n        'Failed to update employee status: ' + error.message,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HashingProvider.html":{"url":"injectables/HashingProvider.html","title":"injectable - HashingProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HashingProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/hashing.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                comparePassword\n                            \n                            \n                                    Abstract\n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        comparePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    comparePassword(data: string | Buffer, encrypted: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/hashing.provider.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                encrypted\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPassword(data: string | Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/hashing.provider.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport abstract class HashingProvider {\n  abstract hashPassword(data: string | Buffer): Promise;\n\n  abstract comparePassword(\n    data: string | Buffer,\n    encrypted: string,\n  ): Promise;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/product.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/product.schema.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from 'mongoose';\n\n@Schema()\nexport class Product extends Document {\n    @Prop({\n        type: String,\n        required: true,\n    })\n    name: string;\n\n    @Prop({\n        type: Number,\n        required: true,\n    })\n    price: number;\n}\n\nexport const ProductSchema = SchemaFactory.createForClass(Product);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createProduct\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAllProducts\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findProductById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProduct(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Auth(AuthType.Bearer)@ApiBearerAuth('bearer-token')@ApiOperation({summary: 'Create a new product'})@ApiResponse({status: 201, description: 'Product created successfully'})@ApiResponse({status: 400, description: 'Bad Request'})\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProduct(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@Auth(AuthType.Bearer)@ApiBearerAuth('bearer-token')@ApiOperation({summary: 'Delete a product by ID'})@ApiResponse({status: 200, description: 'Product deleted successfully'})@ApiResponse({status: 404, description: 'Product not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findAllProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllProducts()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Find all products'})@ApiResponse({status: 200, description: 'Products found successfully'})\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        findProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({summary: 'Find a product by ID'})@ApiResponse({status: 200, description: 'Product found successfully'})@ApiResponse({status: 404, description: 'Product not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProduct(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')@Auth(AuthType.Bearer)@ApiBearerAuth('bearer-token')@ApiOperation({summary: 'Update a product by ID'})@ApiResponse({status: 200, description: 'Product updated successfully'})@ApiResponse({status: 404, description: 'Product not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Inject,\n  NotFoundException,\n  Param,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { ProductInterface } from './interface/product.interface';\nimport { CreateProductDto } from './dtos/create-product.dto';\nimport { Auth } from 'src/auth/decorators/auth.decorator';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\nimport { UpdateProductDto } from './dtos/update-prodcut.dto';\n\n@ApiTags('Product')\n@Controller('product')\nexport class ProductController {\n  constructor(\n    @Inject('ProductInterface')\n    private readonly productInterface: ProductInterface,\n  ) {}\n\n  @Post()\n  @Auth(AuthType.Bearer)\n  @ApiBearerAuth('bearer-token')\n  @ApiOperation({ summary: 'Create a new product' })\n  @ApiResponse({ status: 201, description: 'Product created successfully' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  async createProduct(@Body() createProductDto: CreateProductDto) {\n    return this.productInterface.createProduct(createProductDto);\n  }\n\n  @Get('/:id')\n  @ApiOperation({ summary: 'Find a product by ID' })\n  @ApiResponse({ status: 200, description: 'Product found successfully' })\n  @ApiResponse({ status: 404, description: 'Product not found' })\n  async findProductById(@Param('id') id: string) {\n    return this.productInterface.findProductById(id);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Find all products' })\n  @ApiResponse({ status: 200, description: 'Products found successfully' })\n  async findAllProducts() {\n    return this.productInterface.findAllProducts();\n  }\n\n  @Patch('/:id')\n  @Auth(AuthType.Bearer)\n  @ApiBearerAuth('bearer-token')\n  @ApiOperation({ summary: 'Update a product by ID' })\n  @ApiResponse({ status: 200, description: 'Product updated successfully' })\n  @ApiResponse({ status: 404, description: 'Product not found' })\n  async updateProduct(\n    @Param('id') id: string,\n    @Body() updateProductDto: UpdateProductDto,\n  ) {\n    return this.productInterface.updateProduct(id, updateProductDto);\n  }\n\n  @Delete('/:id')\n  @Auth(AuthType.Bearer)\n  @ApiBearerAuth('bearer-token')\n  @ApiOperation({ summary: 'Delete a product by ID' })\n  @ApiResponse({ status: 200, description: 'Product deleted successfully' })\n  @ApiResponse({ status: 404, description: 'Product not found' })\n  async deleteProduct(@Param('id') id: string) {\n    return this.productInterface.deleteProduct(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProductInterface.html":{"url":"interfaces/ProductInterface.html","title":"interface - ProductInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProductInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/interface/product.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createProduct\n                                    \n                                \n                                \n                                    \n                                        deleteProduct\n                                    \n                                \n                                \n                                    \n                                        findAllProducts\n                                    \n                                \n                                \n                                    \n                                        findProductById\n                                    \n                                \n                                \n                                    \n                                        updateProduct\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createProduct\n                        \n                    \n                \n            \n            \n                \ncreateProduct(createProductDto: CreateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/interface/product.interface.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \ndeleteProduct(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/interface/product.interface.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllProducts\n                        \n                    \n                \n            \n            \n                \nfindAllProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/interface/product.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findProductById\n                        \n                    \n                \n            \n            \n                \nfindProductById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/interface/product.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProduct\n                        \n                    \n                \n            \n            \n                \nupdateProduct(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/interface/product.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CreateProductDto } from \"../dtos/create-product.dto\";\nimport { UpdateProductDto } from \"../dtos/update-prodcut.dto\";\nimport { Product } from \"../product.schema\";\n\nexport interface ProductInterface {\n    createProduct(createProductDto: CreateProductDto): Promise;\n    findProductById(id: string): Promise;\n    findAllProducts(): Promise;\n    updateProduct(id: string, updateProductDto: UpdateProductDto): Promise;\n    deleteProduct(id: string): Promise;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_ProductModule_exports\n\n\n\n\nProductInterface \n\nProductInterface \n\n\n\nProductServiceImpl \n\nProductServiceImpl \n\n\n\nProductModule\n\nProductModule\n\nProductInterface  -->\n\nProductModule->ProductInterface \n\n\n\nProductServiceImpl  -->\n\nProductModule->ProductServiceImpl \n\n\n\n\n\nProductServiceImpl\n\nProductServiceImpl\n\nProductModule -->\n\nProductServiceImpl->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductServiceImpl\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductInterface\n                        \n                        \n                            ProductServiceImpl\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductController } from './product.controller';\nimport { ProductServiceImpl } from './product.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Product, ProductSchema } from './product.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Product.name,\n        schema: ProductSchema,\n      }\n    ])\n  ],\n  controllers: [ProductController],\n  providers: [\n    ProductServiceImpl,\n    {\n      provide: 'ProductInterface',\n      useExisting: ProductServiceImpl,\n    }\n  ],\n  exports: [ProductServiceImpl, 'ProductInterface'],\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductServiceImpl.html":{"url":"injectables/ProductServiceImpl.html","title":"injectable - ProductServiceImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductServiceImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProduct\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Async\n                                findAllProducts\n                            \n                            \n                                    Async\n                                findProductById\n                            \n                            \n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/product/product.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProduct(createProductDto: CreateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProduct(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProduct(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException, NotFoundException } from '@nestjs/common';\nimport { ProductInterface } from './interface/product.interface';\nimport { CreateProductDto } from './dtos/create-product.dto';\nimport { UpdateProductDto } from './dtos/update-prodcut.dto';\nimport { Product } from './product.schema';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Not } from 'typeorm';\n\n@Injectable()\nexport class ProductServiceImpl implements ProductInterface {\n  constructor(\n    @InjectModel(Product.name)\n    private readonly productModel: Model,\n  ) {}\n\n  async createProduct(createProductDto: CreateProductDto): Promise {\n    try {\n      const createdProduct = new this.productModel(createProductDto);\n      return await createdProduct.save();\n    } catch (error) {\n      throw new InternalServerErrorException(\n        'Failed to create product: ' + error.message,\n      );\n    }\n  }\n\n  async findProductById(id: string): Promise {\n    try {\n      const product = await this.productModel.findById(id).exec();\n      if (!product) {\n        throw new NotFoundException('Product not found');\n      }\n      return product;\n    } catch (error) {\n      throw new InternalServerErrorException(\n        'Failed to find product by ID: ' + error.message,\n      );\n    }\n  }\n\n  async findAllProducts(): Promise {\n    try {\n      const products = await this.productModel.find().exec();\n      if (!products || products.length === 0) {\n        throw new NotFoundException('No products found');\n      }\n      return products;\n    } catch (error) {\n      throw new InternalServerErrorException(\n        'Failed to find all products: ' + error.message,\n      );\n    }\n  }\n\n  async updateProduct(\n    id: string,\n    updateProductDto: UpdateProductDto,\n  ): Promise {\n    try {\n      const existingProduct = await this.productModel\n        .findByIdAndUpdate(id, updateProductDto, {\n          new: true,\n          runValidators: true,\n        })\n        .exec();\n      if (!existingProduct) {\n        throw new NotFoundException('Product not found');\n      }\n      return existingProduct;\n    } catch (error) {\n      throw new InternalServerErrorException(\n        'Failed to update product: ' + error.message,\n      );\n    }\n  }\n\n  async deleteProduct(id: string): Promise {\n    try {\n        const productToDelete = await this.productModel.findByIdAndDelete(id).exec();\n        if (!productToDelete) {\n          throw new NotFoundException('Product not found');\n        }  \n        return productToDelete\n    } catch (error) {\n      throw new InternalServerErrorException(\n        'Failed to delete product: ' + error.message,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/signin.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/signin.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/signin.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsEmail, IsNotEmpty, IsString } from \"class-validator\";\n\nexport class SignInDto {\n    @ApiProperty()\n    @IsEmail()\n    @IsNotEmpty()\n    email: string;\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SignInProvider.html":{"url":"injectables/SignInProvider.html","title":"injectable - SignInProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SignInProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/signin.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userInterface: UserInterface, hashingProvider: HashingProvider, jwtService: JwtService, jwtConfiguration: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/signin.provider.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userInterface\n                                                  \n                                                        \n                                                                        UserInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hashingProvider\n                                                  \n                                                        \n                                                                        HashingProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/signin.provider.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, RequestTimeoutException, UnauthorizedException } from \"@nestjs/common\";\nimport { HashingProvider } from \"./hashing.provider\";\nimport { SignInDto } from \"../dtos/signin.dto\";\nimport { User } from \"src/user/user.schema\";\nimport { UserInterface } from \"src/user/interfaces/user.interface\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport jwtConfig from \"../config/jwt.config\";\nimport { ConfigType } from \"@nestjs/config\";\n\n@Injectable()\nexport class SignInProvider {\n    constructor(\n        @Inject('UserInterface')\n        private readonly userInterface: UserInterface,\n\n        private readonly hashingProvider: HashingProvider,\n\n        private readonly jwtService: JwtService,\n\n        @Inject(jwtConfig.KEY)\n        private readonly jwtConfiguration: ConfigType\n    ){}\n\n    async signIn(signInDto: SignInDto): Promise {\n        const user = await this.userInterface.findUserByEmail(signInDto.email);\n\n        if (!user) {\n            throw new UnauthorizedException('Invalid email or password');\n        }\n\n        let isEqualPassword: boolean = false;\n\n        try {\n            isEqualPassword = await this.hashingProvider.comparePassword(\n                signInDto.password,\n                user.password,\n            );\n        } catch (error) {\n            throw new RequestTimeoutException('Password comparison failed');\n        }\n\n        if (!isEqualPassword) {\n            throw new UnauthorizedException('Invalid email or password');\n        }\n\n        const accessToken = await this.jwtService.signAsync(\n            {\n                sub: user._id,\n                email: user.email,\n            },\n            {\n                audience: this.jwtConfiguration.audience,\n                issuer: this.jwtConfiguration.issuer,\n                secret: this.jwtConfiguration.secret,\n                expiresIn: this.jwtConfiguration.accessTokenTtl,\n            }\n        )\n\n        const userObject = user.toObject();\n        delete userObject.password; \n\n        return {\n            accessToken,\n            ...userObject,\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEmployeeDto.html":{"url":"classes/UpdateEmployeeDto.html","title":"class - UpdateEmployeeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEmployeeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/dtos/update-employee.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateEmployeeDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsDateString, IsEnum, IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { EmpStatus } from '../enums/emp-status.enum';\nimport { CreateEmployeeDto } from './create-employee.dto';\n\nexport class UpdateEmployeeDto extends PartialType(CreateEmployeeDto) {}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEmployeeProductDto.html":{"url":"classes/UpdateEmployeeProductDto.html","title":"class - UpdateEmployeeProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEmployeeProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee-product/dtos/update-employee-product.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateEmployeeProductDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreateEmployeeProductDto } from \"./create-employee-product.dto\";\n\nexport class UpdateEmployeeProductDto extends PartialType(CreateEmployeeProductDto){}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEmployeeStatusDto.html":{"url":"classes/UpdateEmployeeStatusDto.html","title":"class - UpdateEmployeeStatusDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEmployeeStatusDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/dtos/update-employee-status.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EmpStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: EmpStatus, description: 'Employee status: active, inactive, or on_leave'})@IsEnum(EmpStatus)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dtos/update-employee-status.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum } from \"class-validator\";\nimport { EmpStatus } from \"../enums/emp-status.enum\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\nexport class UpdateEmployeeStatusDto {\n    @ApiProperty({ enum: EmpStatus, description: 'Employee status: active, inactive, or on_leave' })\n    @IsEnum(EmpStatus)\n    status: EmpStatus;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dtos/update-prodcut.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateProductDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreateProductDto } from \"./create-product.dto\";\n\nexport class UpdateProductDto extends PartialType(CreateProductDto){}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dateOfBirth\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, minlength: 6, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.schema.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from 'mongoose';\n\n@Schema()\nexport class User extends Document {\n    @Prop({\n        type: String,\n        required: true,\n    })\n    username: string;\n\n    @Prop({ \n        required: true,\n        unique: true \n    })\n    email: string;\n\n    @Prop({ \n        type: String,\n        minlength: 6,\n        required: true,\n    })\n    password: string;\n\n    @Prop({ \n        type: Date,\n        required: true \n    })\n    dateOfBirth: Date;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                findAllUsers\n                            \n                            \n                                    \n                                    Async\n                                findUserById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('findAll')@Auth(AuthType.None)\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('findById')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Inject,\n  NotFoundException,\n  Post,\n  Query,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { UserInterface } from './interfaces/user.interface';\nimport { ApiBody, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Auth } from 'src/auth/decorators/auth.decorator';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\n\n@ApiTags('User')\n@Controller('user')\nexport class UserController {\n  constructor(\n    @Inject('UserInterface')\n    private readonly userInterface: UserInterface,\n  ) {}\n\n  // @Get('findByEmail')\n  // async findUser(@Query('id') email: string) {\n  //     console.log('Finding user by email:', email);\n  //     const user = await this.userInterface.findUserByEmail(email);\n  //     if (!user) {\n  //         throw new NotFoundException('User not found');\n  //     }\n  //     return user;\n  // }\n\n  @Get('findById')\n  async findUserById(@Query('id') id: string) {\n    return this.userInterface.findUserById(id);\n  }\n\n  @Get('findAll')\n  @Auth(AuthType.None)\n  async findAllUsers() {\n    return this.userInterface.findAllUsers();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInterface.html":{"url":"interfaces/UserInterface.html","title":"interface - UserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createUser\n                                    \n                                \n                                \n                                    \n                                        findAllUsers\n                                    \n                                \n                                \n                                    \n                                        findUserByEmail\n                                    \n                                \n                                \n                                    \n                                        findUserById\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/interfaces/user.interface.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllUsers\n                        \n                    \n                \n            \n            \n                \nfindAllUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/interfaces/user.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByEmail\n                        \n                    \n                \n            \n            \n                \nfindUserByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/interfaces/user.interface.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findUserById\n                        \n                    \n                \n            \n            \n                \nfindUserById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/interfaces/user.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CreateUserDto } from \"../dtos/create-user.dto\";\nimport { User } from \"../user.schema\";\n\nexport interface UserInterface {\n    createUser(createUserDto: CreateUserDto): Promise;\n    findUserByEmail(email: string): Promise;\n    findUserById(id: string): Promise | null>;\n    findAllUsers(): Promise;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserInterface \n\nUserInterface \n\n\n\nUserServiceImpl \n\nUserServiceImpl \n\n\n\nUserModule\n\nUserModule\n\nUserInterface  -->\n\nUserModule->UserInterface \n\n\n\nUserServiceImpl  -->\n\nUserModule->UserServiceImpl \n\n\n\n\n\nCreateUserProvider\n\nCreateUserProvider\n\nUserModule -->\n\nCreateUserProvider->UserModule\n\n\n\n\n\nUserServiceImpl\n\nUserServiceImpl\n\nUserModule -->\n\nUserServiceImpl->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateUserProvider\n                        \n                        \n                            UserServiceImpl\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserInterface\n                        \n                        \n                            UserServiceImpl\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './user.schema';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { UserController } from './user.controller';\nimport { UserServiceImpl } from './user.service';\nimport { CreateUserProvider } from './providers/create-user.provider';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: User.name,\n        schema: UserSchema,\n      },\n    ]),\n    forwardRef(() => AuthModule),\n  ],\n  providers: [\n    {\n      provide: 'UserInterface',\n      useExisting: UserServiceImpl,\n    },\n    UserServiceImpl,\n    CreateUserProvider,\n  ],\n  controllers: [UserController],\n  exports: [UserServiceImpl, 'UserInterface'],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserServiceImpl.html":{"url":"injectables/UserServiceImpl.html","title":"injectable - UserServiceImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserServiceImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                findAllUsers\n                            \n                            \n                                    Async\n                                findUserByEmail\n                            \n                            \n                                    Async\n                                findUserById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, createUserProvider: CreateUserProvider)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createUserProvider\n                                                  \n                                                        \n                                                                        CreateUserProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  forwardRef,\n  Inject,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User } from './user.schema';\nimport { Model } from 'mongoose';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { HashingProvider } from 'src/auth/providers/hashing.provider';\nimport { read } from 'fs';\nimport { UserInterface } from './interfaces/user.interface';\nimport { CreateUserProvider } from './providers/create-user.provider';\n\n@Injectable()\nexport class UserServiceImpl implements UserInterface {\n  constructor(\n    @InjectModel(User.name)\n    private readonly userModel: Model,\n\n    /**\n     * The provider responsible for creating users.\n     */\n    private readonly createUserProvider: CreateUserProvider,\n  ) {}\n\n  async createUser(createUserDto: CreateUserDto): Promise {\n    try {\n      return await this.createUserProvider.createUser(createUserDto);\n    } catch (error) {\n      throw new InternalServerErrorException(\n        'Failed to create a user: ',\n        error,\n      );\n    }\n  }\n\n  async findUserByEmail(email: string): Promise {\n    email = email.replace('%40', '@');\n    try {\n      const user = await this.userModel.findOne({ email }).exec();\n      if (!user) {\n        throw new NotFoundException('User not found');\n      }\n      return user;\n    } catch (error) {\n      throw new InternalServerErrorException(\n        'Failed to find user by email: ',\n        error,\n      );\n    }\n  }\n\n  async findUserById(id: string): Promise | null> {\n    try {\n      const user = await this.userModel.findById(id).exec();\n      if (!user) {\n        throw new NotFoundException('User not found');\n      }\n      const userObject = user.toObject() as Record;\n      delete userObject.password;\n      return userObject;\n    } catch (error) {\n      throw new InternalServerErrorException(\n        `Failed to find user by ID: ${error.message}`,\n      );\n    }\n  }\n\n  async findAllUsers(): Promise {\n    try {\n      const users = await this.userModel.find().exec();\n      if (!users || users.length === 0) {\n        throw new NotFoundException('No users found');\n      }\n      return users;\n    } catch (error) {\n      throw new InternalServerErrorException(\n        'Failed to find all users: ',\n        error,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/auth/constants/auth.constants.ts\n            \n            variable\n            REQUEST_USER_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/decorators/active-user.decorator.ts\n            \n            variable\n            ActiveUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/decorators/auth.decorator.ts\n            \n            variable\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/decorators/auth.decorator.ts\n            \n            variable\n            AUTH_TYPE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dtos/signin.dto.ts\n            \n            class\n            SignInDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/access-token/access-token.guard.ts\n            \n            guard\n            AccessTokenGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/guards/authentication/authentication.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/interfaces/active-user-data.interface.ts\n            \n            interface\n            ActiveUserData\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/auth/interfaces/auth.interface.ts\n            \n            interface\n            AuthInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/providers/bcrypt.provider.ts\n            \n            injectable\n            BcryptProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/providers/hashing.provider.ts\n            \n            injectable\n            HashingProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/providers/signin.provider.ts\n            \n            injectable\n            SignInProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/employee-product/dtos/create-employee-product.dto.ts\n            \n            class\n            CreateEmployeeProductDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/employee-product/dtos/update-employee-product.dto.ts\n            \n            class\n            UpdateEmployeeProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/employee-product/employee-product.controller.ts\n            \n            controller\n            EmployeeProductController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/employee-product/employee-product.schema.ts\n            \n            class\n            EmployeeProduct\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/employee-product/employee-product.schema.ts\n            \n            variable\n            EmployeeProductSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/employee-product/employee-product.service.ts\n            \n            injectable\n            EmployeeProductServiceImpl\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/employee-product/employee.payroll.schema.ts\n            \n            class\n            EmployeePayroll\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/employee-product/employee.payroll.schema.ts\n            \n            variable\n            EmployeePayrollSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/employee-product/interface/employee-product.interface.ts\n            \n            interface\n            EmployeeProductInterface\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/employee/dtos/create-employee.dto.ts\n            \n            class\n            CreateEmployeeDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/employee/dtos/update-employee-status.dto.ts\n            \n            class\n            UpdateEmployeeStatusDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/employee/dtos/update-employee.dto.ts\n            \n            class\n            UpdateEmployeeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/employee/employee.controller.ts\n            \n            controller\n            EmployeeController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/employee/employee.schema.ts\n            \n            class\n            Employee\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/employee/employee.schema.ts\n            \n            variable\n            EmployeeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/employee/employee.service.ts\n            \n            injectable\n            EmployeeServiceImpl\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/employee/interface/employee.interface.ts\n            \n            interface\n            EmployeeInterface\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/dtos/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/product/dtos/update-prodcut.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/interface/product.interface.ts\n            \n            interface\n            ProductInterface\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product/product.schema.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/product/product.schema.ts\n            \n            variable\n            ProductSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/product.service.ts\n            \n            injectable\n            ProductServiceImpl\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/swagger/swagger.config.ts\n            \n            variable\n            swaggerConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/swagger/swagger.ts\n            \n            function\n            setupSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/interfaces/user.interface.ts\n            \n            interface\n            UserInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/providers/create-user.provider.ts\n            \n            injectable\n            CreateUserProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/user/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserServiceImpl\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.26\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/mapped-types : ^2.1.0\n        \n            @nestjs/mongoose : ^11.0.3\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/serve-static : ^5.0.3\n        \n            @nestjs/swagger : ^11.2.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            bcrypt : ^6.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.2\n        \n            mongoose : ^8.15.1\n        \n            pg : ^8.16.0\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.24\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthType   (src/.../auth-type.enum.ts)\n                        \n                        \n                            EmpStatus   (src/.../emp-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/enums/auth-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthType\n                    \n                \n                        \n                            \n                                 Bearer\n                            \n                        \n                        \n                            \n                                 None\n                            \n                        \n            \n        \n\n    src/employee/enums/emp-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        EmpStatus\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : active\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                Value : inactive\n                            \n                        \n                        \n                            \n                                 ON_LEAVE\n                            \n                        \n                        \n                            \n                                Value : on_leave\n                            \n                        \n                        \n                            \n                                 RESIGNED\n                            \n                        \n                        \n                            \n                                Value : resigned\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            setupSwagger   (src/.../swagger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/swagger/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupSwagger\n                        \n                    \n                \n            \n            \n                \nsetupSwagger(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g @nestjs/mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmployeeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmployeeProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_EmployeeModule\n\n\n\ncluster_EmployeeModule_exports\n\n\n\ncluster_EmployeeModule_providers\n\n\n\ncluster_EmployeeProductModule\n\n\n\ncluster_EmployeeProductModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_exports\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthInterface \n\nAuthInterface \n\nAuthInterface  -->\n\nAuthModule->AuthInterface \n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nHashingProvider \n\nHashingProvider \n\nHashingProvider  -->\n\nAuthModule->HashingProvider \n\n\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nAppModule -->\n\nEmployeeModule->AppModule\n\n\n\n\n\nEmployeeInterface \n\nEmployeeInterface \n\nEmployeeInterface  -->\n\nEmployeeModule->EmployeeInterface \n\n\n\n\n\nEmployeeServiceImpl \n\nEmployeeServiceImpl \n\nEmployeeServiceImpl  -->\n\nEmployeeModule->EmployeeServiceImpl \n\n\n\n\n\nEmployeeProductModule\n\nEmployeeProductModule\n\nAppModule -->\n\nEmployeeProductModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nProductInterface \n\nProductInterface \n\nProductInterface  -->\n\nProductModule->ProductInterface \n\n\n\n\n\nProductServiceImpl \n\nProductServiceImpl \n\nProductServiceImpl  -->\n\nProductModule->ProductServiceImpl \n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserInterface \n\nUserInterface \n\nUserInterface  -->\n\nUserModule->UserInterface \n\n\n\n\n\nUserServiceImpl \n\nUserServiceImpl \n\nUserServiceImpl  -->\n\nUserModule->UserServiceImpl \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nSignInProvider\n\nSignInProvider\n\nAuthModule -->\n\nSignInProvider->AuthModule\n\n\n\n\n\nEmployeeServiceImpl\n\nEmployeeServiceImpl\n\nEmployeeModule -->\n\nEmployeeServiceImpl->EmployeeModule\n\n\n\n\n\nEmployeeProductServiceImpl\n\nEmployeeProductServiceImpl\n\nEmployeeProductModule -->\n\nEmployeeProductServiceImpl->EmployeeProductModule\n\n\n\n\n\nProductServiceImpl\n\nProductServiceImpl\n\nProductModule -->\n\nProductServiceImpl->ProductModule\n\n\n\n\n\nCreateUserProvider\n\nCreateUserProvider\n\nUserModule -->\n\nCreateUserProvider->UserModule\n\n\n\n\n\nUserServiceImpl\n\nUserServiceImpl\n\nUserModule -->\n\nUserServiceImpl->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActiveUser   (src/.../active-user.decorator.ts)\n                        \n                        \n                            Auth   (src/.../auth.decorator.ts)\n                        \n                        \n                            AUTH_TYPE_KEY   (src/.../auth.decorator.ts)\n                        \n                        \n                            EmployeePayrollSchema   (src/.../employee.payroll.schema.ts)\n                        \n                        \n                            EmployeeProductSchema   (src/.../employee-product.schema.ts)\n                        \n                        \n                            EmployeeSchema   (src/.../employee.schema.ts)\n                        \n                        \n                            ProductSchema   (src/.../product.schema.ts)\n                        \n                        \n                            REQUEST_USER_KEY   (src/.../auth.constants.ts)\n                        \n                        \n                            swaggerConfig   (src/.../swagger.config.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/decorators/active-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ActiveUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (field: keyof ActiveUserData | undefined, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user: ActiveUserData = request[REQUEST_USER_KEY];\n\n    // If a user passes a field to the decorator use only that field\n    return field ? user?.[field] : user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/auth/decorators/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...authTypes: AuthType[]) =>\n  SetMetadata(AUTH_TYPE_KEY, authTypes)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_TYPE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'authType'\n                    \n                \n\n\n        \n    \n\n    src/employee-product/employee.payroll.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmployeePayrollSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(EmployeePayroll)\n                    \n                \n\n\n        \n    \n\n    src/employee-product/employee-product.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmployeeProductSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(EmployeeProduct)\n                    \n                \n\n\n        \n    \n\n    src/employee/employee.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmployeeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Employee)\n                    \n                \n\n\n        \n    \n\n    src/product/product.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProductSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Product)\n                    \n                \n\n\n        \n    \n\n    src/auth/constants/auth.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REQUEST_USER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n\n\n        \n    \n\n    src/swagger/swagger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        swaggerConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder()\n  .setTitle('TDA API')\n  .setDescription('Use the base API URL as http://localhost:3000')\n  .setVersion('1.0')\n  .setLicense(\n    'MIT License',\n    'https://github.com/git/git-scm.com/blob/main/MIT-LICENSE.txt',\n  )\n  .addBearerAuth(\n    {\n      type: 'http',\n      scheme: 'bearer',\n      bearerFormat: 'JWT',\n      name: 'Authorization',\n      description: 'Enter JWT token',\n      in: 'header',\n    },\n    'bearer-token',\n  )\n  .build()\n                    \n                \n\n\n        \n    \n\n    src/user/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
